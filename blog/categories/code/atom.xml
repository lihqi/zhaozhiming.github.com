<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/blog/categories/code/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2015-02-04T20:29:39+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[微信公众账号开发part2——用户消息接收]]></title>
    <link href="http://zhaozhiming.github.io/blog/2015/02/04/wechat-public-account-dev-part-2/"/>
    <updated>2015-02-04T16:03:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2015/02/04/wechat-public-account-dev-part-2</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2015-2/wechat_part2.jpg"></p>

<p>上一篇写了如何通过微信开发者认证，今天来讲下如何接收用户的消息，我们以接收用户的订阅消息为例。</p>

<!--more-->


<p></p>

<h2>微信用户消息格式</h2>

<p>在开发者文档的<a href="http://mp.weixin.qq.com/wiki/2/5baf56ce4947d35003b86a9805634b1e.html">接收事件推送</a>文档中，说明了用户订阅消息的请求实体，内容如下:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;xml&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>ToUserName<span class="ni">&amp;gt;&amp;lt;</span>![CDATA[toUser]]<span class="ni">&amp;gt;&amp;lt;</span>/ToUserName<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>FromUserName<span class="ni">&amp;gt;&amp;lt;</span>![CDATA[FromUser]]<span class="ni">&amp;gt;&amp;lt;</span>/FromUserName<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>CreateTime<span class="ni">&amp;gt;</span>123456789<span class="ni">&amp;lt;</span>/CreateTime<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>MsgType<span class="ni">&amp;gt;&amp;lt;</span>![CDATA[event]]<span class="ni">&amp;gt;&amp;lt;</span>/MsgType<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>Event<span class="ni">&amp;gt;&amp;lt;</span>![CDATA[subscribe]]<span class="ni">&amp;gt;&amp;lt;</span>/Event<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/xml&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>ToUserName: 加了密的公众账号名称</li>
<li>FromUserName: 加了密的微信账号名称</li>
<li>CreateTime: 消息发送时间，秒数</li>
<li>MsgType: 消息类型，事件消息为event</li>
<li>Event: 事件类型，订阅消息为subscribe</li>
</ul>


<h2>消息真实性验证</h2>

<p><blockquote><p>每次开发者接收用户消息的时候，微信也都会带上前面三个参数（signature、timestamp、nonce）访问开发者设置的URL，开发者依然通过对签名的效验判断此条消息的真实性。效验方式与首次提交验证申请一致。</p><footer><strong>微信公众平台开发者文档 <a href="http://mp.weixin.qq.com/wiki/4/2ccadaef44fe1e4b0322355c2312bfa8.html">http://mp.weixin.qq.com/wiki/4/2ccadaef44fe1e4b0322355c2312bfa8.html</a> 验证消息真实性</strong></footer></blockquote></p>

<p>所以每个订阅消息的http请求都会带有（signature、timestamp、nonce）这3个参数和上面的xml请求实体，服务端可以选择是否校验消息的真实性，建议校验，这样会比较安全。</p>

<h2>接收消息后的响应内容</h2>

<p>了解了消息请求的入参后，还需要知道我们处理请求后，需要返回什么样的内容给用户，这个在开发者文档里面好像没有提及，参考各方资料后知道需要返回一段xml内容，格式如下:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;xml&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>Content<span class="ni">&amp;gt;</span>感谢您关注我的公众账号[愉快]<span class="ni">&amp;lt;</span>/Content<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>CreateTime<span class="ni">&amp;gt;</span>1423022113<span class="ni">&amp;lt;</span>/CreateTime<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>FromUserName<span class="ni">&amp;gt;</span>zzm<span class="ni">&amp;lt;</span>/FromUserName<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>FuncFlag<span class="ni">&amp;gt;</span>0<span class="ni">&amp;lt;</span>/FuncFlag<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>MsgType<span class="ni">&amp;gt;</span>text<span class="ni">&amp;lt;</span>/MsgType<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>ToUserName<span class="ni">&amp;gt;</span>zzm<span class="ni">&amp;lt;</span>/ToUserName<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/xml&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>ToUserName: <code>加了密的微信账号名称</code></li>
<li>FromUserName: <code>加了密的公众账号名称</code></li>
<li>CreateTime: 消息发送时间，秒数</li>
<li>FuncFlag: 这个暂时不知道是什么，默认值为0</li>
<li>MsgType: 消息类型，文档消息可以为text和其他，这里我们以最简单的text文本消息为例</li>
<li>Content: 返回给订阅用户的消息内容，可以加表情</li>
</ul>


<p>PS: ToUserName和FromUserName这2个参数和请求的xml实体要相反，这个也比较好理解，用户发了条消息过来，你要发个消息回去，ToUserName就变成了用户，FromUserName变成了你自己的公众账号了。</p>

<h2>服务端开发</h2>

<ul>
<li>了解了http请求的入参和出参，我们可以来开发我们的API了，<code>talk is cheap, show me code</code>。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>MainController.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">//这里我们定义跟之前认证api相同的url，但方法是POST</span>
</span><span class='line'><span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&quot;/index&quot;</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="n">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span>
</span><span class='line'><span class="nd">@ResponseBody</span>
</span><span class='line'><span class="c1">//3个校验消息真实性的参数，还有一个request实体body，里面是xml文本</span>
</span><span class='line'><span class="n">ResponseEntity</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">receive</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;signature&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">signature</span><span class="o">,</span>
</span><span class='line'>                               <span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;timestamp&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">timestamp</span><span class="o">,</span>
</span><span class='line'>                               <span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;nonce&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">nonce</span><span class="o">,</span>
</span><span class='line'>                               <span class="nd">@RequestBody</span> <span class="n">String</span> <span class="n">body</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;receive message start&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;signature:%s, timestamp:%s, nonce:%s&quot;</span><span class="o">,</span> <span class="n">signature</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">,</span> <span class="n">nonce</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//先校验消息的真实性，如果校验失败，则返回400</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(!</span><span class="n">wechatAuth</span><span class="o">(</span><span class="n">signature</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">,</span> <span class="n">nonce</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;wechat auth failed&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">ResponseEntity</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;(</span><span class="s">&quot;wechat auth failed.&quot;</span><span class="o">,</span> <span class="n">HttpStatus</span><span class="o">.</span><span class="na">BAD_REQUEST</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;body:%s&quot;</span><span class="o">,</span> <span class="n">body</span><span class="o">));</span>
</span><span class='line'>    <span class="c1">//我们定义了一个util来解析xml，将其转换为一个object</span>
</span><span class='line'>    <span class="n">TextMessage</span> <span class="n">requestMessage</span> <span class="o">=</span> <span class="n">XmlUtil</span><span class="o">.</span><span class="na">toTextMessage</span><span class="o">(</span><span class="n">body</span><span class="o">);</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;requestMessage:%s&quot;</span><span class="o">,</span> <span class="n">requestMessage</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">TextMessage</span> <span class="n">textMessage</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">msgType</span> <span class="o">=</span> <span class="n">requestMessage</span><span class="o">.</span><span class="na">getMsgType</span><span class="o">();</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">toUserName</span> <span class="o">=</span> <span class="n">requestMessage</span><span class="o">.</span><span class="na">getToUserName</span><span class="o">();</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">fromUserName</span> <span class="o">=</span> <span class="n">requestMessage</span><span class="o">.</span><span class="na">getFromUserName</span><span class="o">();</span>
</span><span class='line'>    <span class="c1">//判断消息类型，如果是event，且事件类型为subscribe，则新建一个文本消息</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">MessageType</span><span class="o">.</span><span class="na">event</span><span class="o">.</span><span class="na">name</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">msgType</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">EventType</span><span class="o">.</span><span class="na">subscribe</span><span class="o">.</span><span class="na">name</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">requestMessage</span><span class="o">.</span><span class="na">getEvent</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="s">&quot;感谢您关注我的公众账号[愉快]&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="n">textMessage</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TextMessage</span><span class="o">(</span><span class="n">toUserName</span><span class="o">,</span> <span class="n">fromUserName</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">MessageType</span><span class="o">.</span><span class="na">text</span><span class="o">.</span><span class="na">name</span><span class="o">(),</span> <span class="n">message</span><span class="o">,</span> <span class="n">TimeUtil</span><span class="o">.</span><span class="na">currentSeconds</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//将文本消息转换为xml文本</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">responseMessage</span> <span class="o">=</span> <span class="n">XmlUtil</span><span class="o">.</span><span class="na">toXml</span><span class="o">(</span><span class="n">textMessage</span><span class="o">);</span>
</span><span class='line'>    <span class="n">HttpHeaders</span> <span class="n">responseHeaders</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpHeaders</span><span class="o">();</span>
</span><span class='line'>    <span class="c1">//设置返回实体的编码，不设置的话可能会变成乱码</span>
</span><span class='line'>    <span class="n">responseHeaders</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;Content-Type&quot;</span><span class="o">,</span> <span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;response message: %s&quot;</span><span class="o">,</span> <span class="n">responseMessage</span><span class="o">));</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;receive message finish&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="n">ResponseEntity</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;(</span><span class="n">responseMessage</span><span class="o">,</span> <span class="n">responseHeaders</span><span class="o">,</span> <span class="n">HttpStatus</span><span class="o">.</span><span class="na">OK</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>这里使用java原生的JAXB来解析xml。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>XmlUtil.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">com.zzm.wechat.model.TextMessage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.commons.io.IOUtils</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">javax.xml.bind.JAXBContext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.xml.bind.Marshaller</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.xml.bind.Unmarshaller</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.StringReader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.StringWriter</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">XmlUtil</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">toXml</span><span class="o">(</span><span class="n">TextMessage</span> <span class="n">textMessage</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">textMessage</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">JAXBContext</span> <span class="n">context</span> <span class="o">=</span> <span class="n">JAXBContext</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span><span class="n">TextMessage</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Marshaller</span> <span class="n">m</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">createMarshaller</span><span class="o">();</span>
</span><span class='line'>    <span class="n">m</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="n">Marshaller</span><span class="o">.</span><span class="na">JAXB_FORMATTED_OUTPUT</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>    <span class="n">m</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="n">Marshaller</span><span class="o">.</span><span class="na">JAXB_FRAGMENT</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">StringWriter</span> <span class="n">sw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringWriter</span><span class="o">();</span>
</span><span class='line'>    <span class="n">m</span><span class="o">.</span><span class="na">marshal</span><span class="o">(</span><span class="n">textMessage</span><span class="o">,</span> <span class="n">sw</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sw</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="n">TextMessage</span> <span class="nf">toTextMessage</span><span class="o">(</span><span class="n">String</span> <span class="n">xml</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">JAXBContext</span> <span class="n">jaxbContext</span> <span class="o">=</span> <span class="n">JAXBContext</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span><span class="n">TextMessage</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Unmarshaller</span> <span class="n">jaxbUnmarshaller</span> <span class="o">=</span> <span class="n">jaxbContext</span><span class="o">.</span><span class="na">createUnmarshaller</span><span class="o">();</span>
</span><span class='line'>    <span class="n">StringReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringReader</span><span class="o">(</span><span class="n">xml</span><span class="o">);</span>
</span><span class='line'>    <span class="n">TextMessage</span> <span class="n">textMessage</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextMessage</span><span class="o">)</span> <span class="n">jaxbUnmarshaller</span><span class="o">.</span><span class="na">unmarshal</span><span class="o">(</span><span class="n">reader</span><span class="o">);</span>
</span><span class='line'>    <span class="n">IOUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">reader</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">textMessage</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>定义消息的model类，这里需要用到xml的一些annotation。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>XmlUtil.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">javax.xml.bind.annotation.XmlElement</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.xml.bind.annotation.XmlRootElement</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//定义命名空间，如果不写的话，xml会以类名开头: &lt;TextMessage&gt;&amp;hellip;&lt;/TextMessage&gt;，写了就会以xml开头: &lt;xml&gt;&amp;hellip;&lt;/xml&gt;</span>
</span><span class='line'><span class="nd">@XmlRootElement</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="n">xml</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="o">;)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TextMessage</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="n">String</span> <span class="n">fromUserName</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">toUserName</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">msgType</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">int</span> <span class="n">funcFlag</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">content</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">event</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">long</span> <span class="n">createTime</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="nf">TextMessage</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="nf">TextMessage</span><span class="o">(</span><span class="n">String</span> <span class="n">fromUserName</span><span class="o">,</span> <span class="n">String</span> <span class="n">toUserName</span><span class="o">,</span> <span class="n">String</span> <span class="n">msgType</span><span class="o">,</span> <span class="n">String</span> <span class="n">content</span><span class="o">,</span> <span class="kt">long</span> <span class="n">createTime</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">fromUserName</span> <span class="o">=</span> <span class="n">fromUserName</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">toUserName</span> <span class="o">=</span> <span class="n">toUserName</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">msgType</span> <span class="o">=</span> <span class="n">msgType</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">createTime</span> <span class="o">=</span> <span class="n">createTime</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">getToUserName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">toUserName</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//定义xml子项的名称，不写这个annotation的话，转换后的xml是: &amp;lt;toUserName&amp;gt;xxx&amp;lt;/toUserName&amp;gt;，首字母变小写了，会导致消息传输错误</span>
</span><span class='line'><span class="nd">@XmlElement</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;ToUserName&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setToUserName</span><span class="o">(</span><span class="n">String</span> <span class="n">toUserName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">toUserName</span> <span class="o">=</span> <span class="n">toUserName</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//other setter and getter</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//...</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><p>方法写完以后，同样的打包，部署SAE。</p></li>
<li><p>打开手机，关注你的公众账号后，就可以看到服务端传过来的消息内容了。</p></li>
</ul>


<p><img src="/images/post/2015-2/wechat_subscribe.png"></p>

<p>我的公众账号是<code>赵芝明的公账号</code>，有兴趣的也可以加一下，以后这个公共账号的功能肯定会慢慢丰富的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信公众账号开发part1——开发者验证]]></title>
    <link href="http://zhaozhiming.github.io/blog/2015/02/04/wechat-public-account-dev-part-1/"/>
    <updated>2015-02-04T13:51:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2015/02/04/wechat-public-account-dev-part-1</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2015-2/wechat.jpg"></p>

<p>最近在了解微信公众账号的开发，准备边学边写一些文章来记录学习的过程，主要是基于微信的开发者模式来进行公共账号的开发，服务器选择新浪云SAE，语言还是选择比较熟悉的JAVA。</p>

<!--more-->


<p></p>

<h2>基本准备</h2>

<ul>
<li>登陆微信公众平台网站: <code>https://mp.weixin.qq.com</code>，进行账号注册，具体可以参考<a href="http://segmentfault.com/blog/zetd/1190000000356021">青龙老贼的这篇文章</a>，虽然内容有点老跟现在的不大一样，但不影响参考。</li>
<li>在SAE上面新建一个JAVA应用，这里还是可以参照<a href="http://segmentfault.com/blog/zetd/1190000000356067">青龙老贼的文章</a>，跟里面不同的是我们要创建一个JAVA的应用，而不是PHP的。</li>
</ul>


<h2>修改开发者中心的配置</h2>

<ul>
<li>登陆进到微信公众平台后，点击左下角的开发者中心，再点击图中的修改配置按钮，就可以进到修改配置页面。</li>
</ul>


<p><img src="/images/post/2015-2/wechat_config_1.png"></p>

<ul>
<li>填写配置项

<ul>
<li>输入你的SAE的应用URL，比如:<code>http://xxx.sinaapp.com</code>，不一定要写应用的基本URL，可以在上面加一些扩展，比如<code>http://xxx.sinaapp.com/xxx</code>，这个要看你的应用的restful怎么定了。</li>
<li>TOKEN随便输入一个字符串就可以，这个值后面是要配置到java应用里面的，可以理解为一个加密的密钥。</li>
<li>EncodingAESKey随机生成。</li>
<li>消息加解密方式暂时选择明文模式。</li>
</ul>
</li>
</ul>


<p><img src="/images/post/2015-2/wechat_config_2.png"></p>

<h2>微信服务端开发</h2>

<ul>
<li><p>新建一个spring mvc工程，可以参照<a href="https://confluence.jetbrains.com/display/IntelliJIDEA/Getting+Started+with+Spring+MVC,+Hibernate+and+JSON">这个文章</a>，但我们暂时不需要数据库和页面，只需要定义restful接口就可以了。</p></li>
<li><p>新建Controller并定义认证的api，可以参考微信公众平台开发者文档里面的<a href="http://mp.weixin.qq.com/wiki/17/2d4265491f12608cd170a95559800f2d.html">接入指南</a>，里面有段php代码是指导服务端怎么开发的，我们要做的只是把它翻译成JAVA。</p></li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>MainController.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">com.google.common.base.Joiner</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.common.collect.Lists</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.commons.logging.Log</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.commons.logging.LogFactory</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.http.HttpStatus</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.http.ResponseEntity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.stereotype.Controller</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.*</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">java.security.MessageDigest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
</span><span class='line'><span class="nd">@Controller</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainController</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Log</span> <span class="n">log</span> <span class="o">=</span> <span class="n">LogFactory</span><span class="o">.</span><span class="na">getLog</span><span class="o">(</span><span class="n">MainController</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//从配置文件获取的token值，就是刚才在修改配置项里面定义的那个Token</span>
</span><span class='line'><span class="nd">@Value</span><span class="o">(</span><span class="s">&quot;${token}&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">token</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//定义一个GET请求，url为xxx/index</span>
</span><span class='line'><span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&quot;/index&quot;</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="n">RequestMethod</span><span class="o">.</span><span class="na">GET</span><span class="o">,</span> <span class="n">produces</span> <span class="o">=</span> <span class="s">&quot;text/html;charset=UTF-8&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span>
</span><span class='line'><span class="nd">@ResponseBody</span>
</span><span class='line'><span class="c1">//接收新手指南里面提到的那4个参数</span>
</span><span class='line'><span class="n">ResponseEntity</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">auth</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;signature&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">signature</span><span class="o">,</span>
</span><span class='line'>                            <span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;timestamp&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">timestamp</span><span class="o">,</span>
</span><span class='line'>                            <span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;nonce&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">nonce</span><span class="o">,</span>
</span><span class='line'>                            <span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;echostr&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">echostr</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;wechat auth start&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;signature:%s, timestamp:%s, nonce:%s, echostr:%s&quot;</span><span class="o">,</span>
</span><span class='line'>            <span class="n">signature</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">,</span> <span class="n">nonce</span><span class="o">,</span> <span class="n">echostr</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//如果认证通过，原样返回echostr值，并返回200的response</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">wechatAuth</span><span class="o">(</span><span class="n">signature</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">,</span> <span class="n">nonce</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;wechat auth success&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">ResponseEntity</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;(</span><span class="n">echostr</span><span class="o">,</span> <span class="n">HttpStatus</span><span class="o">.</span><span class="na">OK</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//如果失败，则返回400，并提示认证失败</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;wechat auth failed&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">new</span> <span class="n">ResponseEntity</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;(</span><span class="s">&quot;wechat auth failed.&quot;</span><span class="o">,</span> <span class="n">HttpStatus</span><span class="o">.</span><span class="na">BAD_REQUEST</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">wechatAuth</span><span class="o">(</span><span class="n">String</span> <span class="n">signature</span><span class="o">,</span> <span class="n">String</span> <span class="n">timestamp</span><span class="o">,</span> <span class="n">String</span> <span class="n">nonce</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//将这3个string放到一个list里</span>
</span><span class='line'>    <span class="n">ArrayList</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">strings</span> <span class="o">=</span> <span class="n">Lists</span><span class="o">.</span><span class="na">newArrayList</span><span class="o">(</span><span class="n">token</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">,</span> <span class="n">nonce</span><span class="o">);</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;before sort array:%s&quot;</span><span class="o">,</span> <span class="n">strings</span><span class="o">));</span>
</span><span class='line'>    <span class="c1">//按字母顺序做一下排序</span>
</span><span class='line'>    <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">strings</span><span class="o">);</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;after sort array:%s&quot;</span><span class="o">,</span> <span class="n">strings</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//将list里面所有string组合成一个string，这里用到了guava的Joiner</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">groupString</span> <span class="o">=</span> <span class="n">Joiner</span><span class="o">.</span><span class="na">on</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">).</span><span class="na">join</span><span class="o">(</span><span class="n">strings</span><span class="o">);</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;groupString string:%s&quot;</span><span class="o">,</span> <span class="n">groupString</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//用SHA1加密该string</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">sha1</span><span class="o">(</span><span class="n">groupString</span><span class="o">);</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;sha1:%s&quot;</span><span class="o">,</span> <span class="n">result</span><span class="o">));</span>
</span><span class='line'>    <span class="c1">//加密后的值和signature进行比较，注意用java加密后都是字母都是大写的，而传过来的signature是小写字母，所以要大小写转换一下</span>
</span><span class='line'>    <span class="kt">boolean</span> <span class="n">compareResult</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">signature</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">());</span>
</span><span class='line'>    <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;compare result:%b&quot;</span><span class="o">,</span> <span class="n">compareResult</span><span class="o">));</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">compareResult</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//类似php的sha1方法</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="nf">sha1</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Create MD5 Hash</span>
</span><span class='line'>        <span class="n">MessageDigest</span> <span class="n">digest</span> <span class="o">=</span> <span class="n">MessageDigest</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;SHA-1&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">digest</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>
</span><span class='line'>        <span class="kt">byte</span> <span class="n">messageDigest</span><span class="o">[]</span> <span class="o">=</span> <span class="n">digest</span><span class="o">.</span><span class="na">digest</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Create Hex String</span>
</span><span class='line'>        <span class="n">StringBuilder</span> <span class="n">hexString</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">byte</span> <span class="n">aMessageDigest</span> <span class="o">:</span> <span class="n">messageDigest</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">hexString</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;%02X&quot;</span><span class="o">,</span> <span class="mh">0xFF</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="n">aMessageDigest</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">hexString</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;sha1 failed&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>将工程打包成war，上传到SAE完成部署，启动应用</li>
</ul>


<h2>启用开发者模式</h2>

<ul>
<li>进到微信公众平台的开发者中心，点击服务器配置那一行后面的启用按钮，如果服务器正常启动的话，就可以看到启用成功的提示了。</li>
</ul>


<p><img src="/images/post/2015-2/wechat_start.png"></p>

<p>更多代码可以看这里: <a href="https://github.com/zhaozhiming/wechat-blog%EF%BC%8C%E8%A7%89%E5%BE%97%E5%A5%BD%E7%9A%84%E8%AF%9D%E8%AF%B7Star%E4%B8%80%E4%B8%8B%E5%90%A7%EF%BC%8C%E8%B0%A2%E8%B0%A2">https://github.com/zhaozhiming/wechat-blog%EF%BC%8C%E8%A7%89%E5%BE%97%E5%A5%BD%E7%9A%84%E8%AF%9D%E8%AF%B7Star%E4%B8%80%E4%B8%8B%E5%90%A7%EF%BC%8C%E8%B0%A2%E8%B0%A2</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSGi的简单代码示例]]></title>
    <link href="http://zhaozhiming.github.io/blog/2015/01/25/hello-osgi/"/>
    <updated>2015-01-25T20:35:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2015/01/25/hello-osgi</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2015-1/osgi.gif"></p>

<p>OSGi(Open Service Gateway Initiative)是面向Java的动态模型系统，使用OSGi可以进行模块的动态加载，无需停止重启服务器，而模块就是我们下面要开发的Bundle。OSGi在电信或其他大型企业里面用的比较多，Eclipse现在也是用osgi的方式来添加插件。</p>

<!--more-->


<p></p>

<h2>IntelliJ IDEA的OSGi环境搭建</h2>

<ul>
<li>我们使用<a href="http://felix.apache.org/">Felix</a>这个OSGi框架来进行OSGi代码的开发，首先我们下载最新版本的Felix包并解压</li>
</ul>


<p><img src="/images/post/2015-1/felix_download.png"></p>

<ul>
<li>在IDEA进行OSGi的设置，选择刚才解压好的felix目录</li>
</ul>


<p><img src="/images/post/2015-1/felix_idea_setting_1.png"></p>

<p><img src="/images/post/2015-1/felix_idea_setting_2.png"></p>

<ul>
<li>写一个简单的Activator，下面要用到</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloActivator.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">zzm</span><span class="o">.</span><span class="na">osgi</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.osgi.framework.BundleActivator</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.osgi.framework.BundleContext</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloActivator</span> <span class="kd">implements</span> <span class="n">BundleActivator</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kt">void</span> <span class="n">start</span><span class="o">(</span><span class="n">BundleContext</span> <span class="n">bundleContext</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello World Bundle started!&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">stop</span><span class="o">(</span><span class="n">BundleContext</span> <span class="n">bundleContext</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello World Bundle stop!&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在工程设置页面进行设置，写上bundle对应的Activator</li>
</ul>


<p><img src="/images/post/2015-1/idea_project_setting_1.png"></p>

<p><img src="/images/post/2015-1/idea_project_setting_2.png"></p>

<p><img src="/images/post/2015-1/idea_project_setting_3.png"></p>

<ul>
<li>在Run菜单中添加osgi的运行配置，Run->Edit Configurations&hellip;</li>
</ul>


<p><img src="/images/post/2015-1/felix_idea_run_setting_1.png"></p>

<p><img src="/images/post/2015-1/felix_idea_run_setting_2.png"></p>

<p><img src="/images/post/2015-1/felix_idea_run_setting_3.png"></p>

<p><img src="/images/post/2015-1/felix_idea_run_setting_4.png"></p>

<p><img src="/images/post/2015-1/felix_idea_run_setting_5.png"></p>

<ul>
<li>运行felix</li>
</ul>


<p><img src="/images/post/2015-1/felix_idea_running_1.png"></p>

<p>可以看到IDEA已经帮我们自动启动了我们的Activator，打印了<code>Hello World Start</code>的语句。</p>

<p><img src="/images/post/2015-1/felix_idea_running_2.png"></p>

<p>输入<code>lb</code>查看所有bundle的信息，可以看到最下面是我们的bundle，已经激活。</p>

<p><img src="/images/post/2015-1/felix_idea_running_3.png"></p>

<p>我们停掉bundle，再显示所有bundle状态，可以看到我们的bundle的状态已经是<code>Resolved</code>了。</p>

<p><img src="/images/post/2015-1/felix_idea_running_4.png"></p>

<h2>使用felix的Maven Bundle插件来创建bundle</h2>

<p>上面是通过IDE来启动和创建bundle，我们再来看下使用felix maven插件的方式创建bundle，这里是官网地址说明: <a href="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html">http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html</a>。</p>

<ul>
<li>首先新建Maven的pom.xml文件

<ul>
<li>在dependencies加入felix的jar包，最新的版本是1.4.0</li>
<li>在plugin中定义我们的bundle，包括我们的Activator等信息。</li>
<li>packaging需要修改为<code>bundle</code></li>
</ul>
</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>pom.xml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="ni">&amp;lt;</span>?xml version=<span class="ni">&amp;ldquo;</span>1.0<span class="ni">&amp;rdquo;</span> encoding=<span class="ni">&amp;ldquo;</span>UTF-8<span class="ni">&amp;rdquo;</span>?&gt;
</span><span class='line'><span class="ni">&amp;lt;</span>project xmlns=<span class="ni">&amp;ldquo;</span><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span><span class="nt">&gt;</span>http://maven.apache.org/POM/4.0.0<span class="nt">&lt;/a&gt;</span><span class="ni">&amp;rdquo;</span><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>     xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
</span><span class='line'>     xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>modelVersion<span class="ni">&amp;gt;</span>4.0.0<span class="ni">&amp;lt;</span>/modelVersion<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>com.zzm<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>osgi<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.0-SNAPSHOT<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>packaging<span class="ni">&amp;gt;</span>bundle<span class="ni">&amp;lt;</span>/packaging<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>build<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.felix<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-bundle-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>2.4.0<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>extensions<span class="ni">&amp;gt;</span>true<span class="ni">&amp;lt;</span>/extensions<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>                <span class="ni">&amp;lt;</span>instructions<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Bundle-SymbolicName<span class="ni">&amp;gt;</span>${pom.groupId}.${pom.artifactId}<span class="ni">&amp;lt;</span>/Bundle-SymbolicName<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Bundle-Vendor<span class="ni">&amp;gt;</span>Apache Felix<span class="ni">&amp;lt;</span>/Bundle-Vendor<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Bundle-Activator<span class="ni">&amp;gt;</span>com.zzm.osgi.HelloActivator<span class="ni">&amp;lt;</span>/Bundle-Activator<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Private-Package<span class="ni">&amp;gt;</span>com.zzm.osgi<span class="ni">&amp;lt;</span>/Private-Package<span class="ni">&amp;gt;</span>
</span><span class='line'>                <span class="ni">&amp;lt;</span>/instructions<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/plugins<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/build<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>dependencies<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.felix<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>org.osgi.core<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.4.0<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>scope<span class="ni">&amp;gt;</span>provided<span class="ni">&amp;lt;</span>/scope<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependencies<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>还是使用我们之前的Activator，在工程根目录下使用maven进行打包，打包完后可以在target目录下面看到打好的bundle包。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mvn clean install
</span><span class='line'>&amp;hellip;balabala&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> &amp;mdash;&amp;ndash; maven-bundle-plugin:2.4.0:bundle <span class="o">(</span>default-bundle<span class="o">)</span> @ osgi &amp;mdash;&amp;ndash;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> &amp;mdash;&amp;ndash; maven-install-plugin:2.5.2:install <span class="o">(</span>default-install<span class="o">)</span> @ osgi &amp;mdash;&amp;ndash;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Installing /Users/zhaozhiming/projects/hello_osgi/bundles/osgi-1.0-SNAPSHOT.jar to /Users/zhaozhiming/.m2/repository/com/zzm/osgi/1.0-SNAPSHOT/osgi-1.0-SNAPSHOT.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Installing /Users/zhaozhiming/projects/hello_osgi/pom.xml to /Users/zhaozhiming/.m2/repository/com/zzm/osgi/1.0-SNAPSHOT/osgi-1.0-SNAPSHOT.pom
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span>
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> &amp;mdash;&amp;ndash; maven-bundle-plugin:2.4.0:install <span class="o">(</span>default-install<span class="o">)</span> @ osgi &amp;mdash;&amp;ndash;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Installing com/zzm/osgi/1.0-SNAPSHOT/osgi-1.0-SNAPSHOT.jar
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Writing OBR metadata
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> BUILD SUCCESS
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Total <span class="nb">time</span>: 3.898s
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Finished at: Sat Jan 31 10:44:49 HKT 2015
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Final Memory: 18M/216M
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span><span class="nb">cd </span>target
</span><span class='line'><span class="nv">$ </span>ls -l
</span><span class='line'>total 8
</span><span class='line'>drwxr-xr-x  4 zhaozhiming  staff   136 Jan 31 10:57 classes
</span><span class='line'>drwxr-xr-x  3 zhaozhiming  staff   102 Jan 31 10:57 maven-status
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  2901 Jan 31 10:57 osgi-1.0-SNAPSHOT.jar
</span><span class='line'>drwxr-xr-x  4 zhaozhiming  staff   136 Jan 31 10:57 surefire-reports
</span><span class='line'>drwxr-xr-x  3 zhaozhiming  staff   102 Jan 31 10:57 <span class="nb">test</span>-classes&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>打完包后，在target/classes/META-INF目录下，可以看到maven会产生一个MANIFEST.MF文件，显示了bundle的具体信息。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>MANIFEST.MF </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Manifest-Version: 1.0
</span><span class='line'>Bnd-LastModified: 1422673028905
</span><span class='line'>Build-Jdk: 1.8.0_25
</span><span class='line'>Built-By: zhaozhiming
</span><span class='line'>Bundle-Activator: com.zzm.osgi.HelloActivator
</span><span class='line'>Bundle-ManifestVersion: 2
</span><span class='line'>Bundle-Name: osgi
</span><span class='line'>Bundle-SymbolicName: com.zzm.osgi
</span><span class='line'>Bundle-Vendor: Apache Felix
</span><span class='line'>Bundle-Version: 1.0.0.SNAPSHOT
</span><span class='line'>Created-By: Apache Maven Bundle Plugin
</span><span class='line'>Export-Package: com.zzm.osgi;uses:<span class="o">=</span>&amp;ldquo;org.osgi.framework&amp;rdquo;;version<span class="o">=</span>&amp;ldquo;1.0.0.S
</span><span class='line'> NAPSHOT&amp;rdquo;
</span><span class='line'>Import-Package: org.osgi.framework;version<span class="o">=</span>&amp;ldquo;<span class="o">[</span>1.5,2<span class="o">)</span>&amp;rdquo;
</span><span class='line'>Tool: Bnd-2.1.0.20130426-122213
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在felix中运行bundle</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;拷贝bundle包&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>cp osgi-1.0-SNAPSHOT.jar /your/felix/parent/folder
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /your/felix/parent/folder
</span><span class='line'><span class="nv">$ </span>ls
</span><span class='line'>drwxr-xr-x@ 12 zhaozhiming  staff   408 Jan 30 13:39 felix
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;   1 zhaozhiming  staff  2901 Jan 31 11:18 osgi-1.0-SNAPSHOT.jar&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;启动felix&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span><span class="nb">cd </span>felix
</span><span class='line'><span class="nv">$ </span>java -jar bin/felix.jar&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;hr /&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Welcome to Apache Felix Gogo&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;g!&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;查看所有bundle&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;g! lb
</span><span class='line'>START LEVEL 1
</span><span class='line'>   ID|State      |Level|Name&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;0|Active     |    0|System Bundle <span class="o">(</span>4.6.0<span class="o">)</span>
</span><span class='line'>1|Active     |    1|Apache Felix Bundle Repository <span class="o">(</span>2.0.2<span class="o">)</span>
</span><span class='line'>2|Active     |    1|Apache Felix Gogo Command <span class="o">(</span>0.14.0<span class="o">)</span>
</span><span class='line'>3|Active     |    1|Apache Felix Gogo Runtime <span class="o">(</span>0.12.1<span class="o">)</span>
</span><span class='line'>4|Active     |    1|Apache Felix Gogo Shell <span class="o">(</span>0.10.0<span class="o">)</span>
</span><span class='line'>5|Active     |    1|Sample01 <span class="o">(</span>1.0.0.SNAPSHOT<span class="o">)</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;安装我们的bundle&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;g! install file:../osgi-1.0-SNAPSHOT.jar
</span><span class='line'>Bundle ID: 253&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;查看bundle信息&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;g! lb
</span><span class='line'>START LEVEL 1
</span><span class='line'>   ID|State      |Level|Name
</span><span class='line'>   &amp;hellip;
</span><span class='line'>  253|Installed  |    1|osgi <span class="o">(</span>1.0.0.SNAPSHOT<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;启动我们的bundle&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;g! start 253
</span><span class='line'>Hello World Bundle start!
</span><span class='line'>g! lb&lt;br/&gt;
</span><span class='line'>START LEVEL 1
</span><span class='line'>   ID|State      |Level|Name&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;...
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  253|Active     |    1|osgi <span class="o">(</span>1.0.0.SNAPSHOT<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;停掉我们的bundle&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;g! stop 253
</span><span class='line'>Hello World Bundle stop!
</span><span class='line'>g! lb
</span><span class='line'>START LEVEL 1
</span><span class='line'>   ID|State      |Level|Name
</span><span class='line'>   &amp;hellip;
</span><span class='line'>  253|Resolved   |    1|osgi <span class="o">(</span>1.0.0.SNAPSHOT<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;卸载我们的bundle，可以看到已经没有出现在所有bundle信息中了&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;g! uninstall 253
</span><span class='line'>g! lb
</span><span class='line'>START LEVEL 1
</span><span class='line'>   ID|State      |Level|Name&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;0|Active     |    0|System Bundle <span class="o">(</span>4.6.0<span class="o">)</span>
</span><span class='line'>1|Active     |    1|Apache Felix Bundle Repository <span class="o">(</span>2.0.2<span class="o">)</span>
</span><span class='line'>2|Active     |    1|Apache Felix Gogo Command <span class="o">(</span>0.14.0<span class="o">)</span>
</span><span class='line'>3|Active     |    1|Apache Felix Gogo Runtime <span class="o">(</span>0.12.1<span class="o">)</span>
</span><span class='line'>4|Active     |    1|Apache Felix Gogo Shell <span class="o">(</span>0.10.0<span class="o">)</span>
</span><span class='line'>5|Active     |    1|Sample01 <span class="o">(</span>1.0.0.SNAPSHOT<span class="o">)</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;最后&lt;code&gt;ctl+c&lt;/code&gt;退出felix&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>在bundle中添加第三方包</h2>

<p>在bundle中使用第三方包比较麻烦，查看了各方资料，只找到了把第三方jar包一起打进bundle的方法，我们以引入<a href="https://code.google.com/p/guava-libraries/"><code>guava</code></a>包为例，下面代码加注释的就是修改的地方。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>pom.xml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="ni">&amp;lt;</span>?xml version=<span class="ni">&amp;ldquo;</span>1.0<span class="ni">&amp;rdquo;</span> encoding=<span class="ni">&amp;ldquo;</span>UTF-8<span class="ni">&amp;rdquo;</span>?&gt;
</span><span class='line'><span class="ni">&amp;lt;</span>project xmlns=<span class="ni">&amp;ldquo;</span><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span><span class="nt">&gt;</span>http://maven.apache.org/POM/4.0.0<span class="nt">&lt;/a&gt;</span><span class="ni">&amp;rdquo;</span><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>     xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
</span><span class='line'>     xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>modelVersion<span class="ni">&amp;gt;</span>4.0.0<span class="ni">&amp;lt;</span>/modelVersion<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>com.zzm<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>osgi<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.0-SNAPSHOT<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>packaging<span class="ni">&amp;gt;</span>bundle<span class="ni">&amp;lt;</span>/packaging<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>build<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.felix<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-bundle-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>2.4.0<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>extensions<span class="ni">&amp;gt;</span>true<span class="ni">&amp;lt;</span>/extensions<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>!--修改bundle配置  --<span class="ni">&amp;gt;</span>
</span><span class='line'>                <span class="ni">&amp;lt;</span>instructions<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Bundle-SymbolicName<span class="ni">&amp;gt;</span>${pom.groupId}.${pom.artifactId}<span class="ni">&amp;lt;</span>/Bundle-SymbolicName<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Bundle-Vendor<span class="ni">&amp;gt;</span>Apache Felix<span class="ni">&amp;lt;</span>/Bundle-Vendor<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Bundle-Activator<span class="ni">&amp;gt;</span>com.zzm.osgi.HelloActivator<span class="ni">&amp;lt;</span>/Bundle-Activator<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Private-Package<span class="ni">&amp;gt;</span>com.zzm.osgi<span class="ni">&amp;lt;</span>/Private-Package<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Embed-Dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>                        *;scope=compile|runtime;inline=false
</span><span class='line'>                    <span class="ni">&amp;lt;</span>/Embed-Dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>_exportcontents<span class="ni">&amp;gt;</span>*<span class="ni">&amp;lt;</span>/_exportcontents<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Bundle-ClassPath<span class="ni">&amp;gt;</span>.,{maven-dependencies}<span class="ni">&amp;lt;</span>/Bundle-ClassPath<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Embed-Transitive<span class="ni">&amp;gt;</span>true<span class="ni">&amp;lt;</span>/Embed-Transitive<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Embed-Directory<span class="ni">&amp;gt;</span>jars<span class="ni">&amp;lt;</span>/Embed-Directory<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>Embed-StripGroup<span class="ni">&amp;gt;</span>true<span class="ni">&amp;lt;</span>/Embed-StripGroup<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>_failok<span class="ni">&amp;gt;</span>true<span class="ni">&amp;lt;</span>/_failok<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>_nouses<span class="ni">&amp;gt;</span>true<span class="ni">&amp;lt;</span>/_nouses<span class="ni">&amp;gt;</span>
</span><span class='line'>                <span class="ni">&amp;lt;</span>/instructions<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="ni">&amp;lt;</span>!-- 添加依赖包copy插件 --<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-dependency-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>executions<span class="ni">&amp;gt;</span>
</span><span class='line'>                <span class="ni">&amp;lt;</span>execution<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>id<span class="ni">&amp;gt;</span>copy-dependencies<span class="ni">&amp;lt;</span>/id<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>phase<span class="ni">&amp;gt;</span>package<span class="ni">&amp;lt;</span>/phase<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>
</span><span class='line'>                        <span class="ni">&amp;lt;</span>goal<span class="ni">&amp;gt;</span>copy-dependencies<span class="ni">&amp;lt;</span>/goal<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>                        <span class="ni">&amp;lt;</span>outputDirectory<span class="ni">&amp;gt;</span>jars<span class="ni">&amp;lt;</span>/outputDirectory<span class="ni">&amp;gt;</span>
</span><span class='line'>                    <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>                <span class="ni">&amp;lt;</span>/execution<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>/executions<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/plugins<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/build<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>dependencies<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.felix<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>org.osgi.core<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.4.0<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>scope<span class="ni">&amp;gt;</span>provided<span class="ni">&amp;lt;</span>/scope<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="ni">&amp;lt;</span>!-- 在pom中添加guava依赖 --<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>com.google.guava<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>guava<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>18.0<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependencies<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在Activator中添加guava的代码</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloActivator.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloActivator</span> <span class="kd">implements</span> <span class="n">BundleActivator</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kt">void</span> <span class="n">start</span><span class="o">(</span><span class="n">BundleContext</span> <span class="n">bundleContext</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello World Bundle start!&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">List</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">strings</span> <span class="o">=</span> <span class="n">Lists</span><span class="o">.</span><span class="na">newArrayList</span><span class="o">(</span><span class="s">&quot;I&quot;</span><span class="o">,</span> <span class="s">&quot;use&quot;</span><span class="o">,</span> <span class="s">&quot;guava&quot;</span><span class="o">,</span> <span class="s">&quot;here&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">strings</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>打包运行我们的bundle</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mvn clean install
</span><span class='line'><span class="nv">$ </span>cp osgi-1.0-SNAPSHOT.jar /your/felix/parent/folder
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /your/felix/parent/folder
</span><span class='line'><span class="nv">$ </span>java -jar bin/felix.jar&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;hr /&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Welcome to Apache Felix Gogo&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;g! install file:../osgi-1.0-SNAPSHOT.jar
</span><span class='line'>Bundle ID: 258
</span><span class='line'>g! start 258
</span><span class='line'>Hello World Bundle start!
</span><span class='line'><span class="o">[</span>I, use, guava, here<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>可以解压我们的bundle jar包看一下结构</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir jar_tar
</span><span class='line'><span class="nv">$ </span>cp osgi-1.0-SNAPSHOT.jar jar_tar/
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>jar_tar/
</span><span class='line'><span class="nv">$ </span>tar -xvf osgi-1.0-SNAPSHOT.jar
</span><span class='line'><span class="nv">$ </span>ls -l <span class="c"># 可以看到有个jars的文件夹</span>
</span><span class='line'>drwxr-xr-x  4 zhaozhiming  staff      136 Jan 31 11:56 META-INF
</span><span class='line'>drwxr-xr-x  3 zhaozhiming  staff      102 Jan 31 11:44 com
</span><span class='line'>drwxr-xr-x  3 zhaozhiming  staff      102 Jan 31 11:44 jars
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  1998876 Jan 31 11:55 osgi-1.0-SNAPSHOT.jar
</span><span class='line'><span class="nv">$ </span>ls -l jars <span class="c"># jars里面是我们的第三方包</span>
</span><span class='line'>-rwxr-xr-x  1 zhaozhiming  staff  2256213 Jan 30 10:07 guava-18.0.jar
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>再看一下MANIFEST.MF文件，如下所示。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Manifest-Version: 1.0
</span><span class='line'>Bnd-LastModified: 1422675843327
</span><span class='line'>Build-Jdk: 1.8.0_25
</span><span class='line'>Built-By: zhaozhiming
</span><span class='line'>Bundle-Activator: com.zzm.osgi.HelloActivator
</span><span class='line'>Bundle-ClassPath: .,jars/guava-18.0.jar
</span><span class='line'>Bundle-ManifestVersion: 2
</span><span class='line'>Bundle-Name: osgi
</span><span class='line'>Bundle-SymbolicName: com.zzm.osgi
</span><span class='line'>Bundle-Vendor: Apache Felix
</span><span class='line'>Bundle-Version: 1.0.0.SNAPSHOT
</span><span class='line'>Created-By: Apache Maven Bundle Plugin
</span><span class='line'>Embed-Dependency: *;scope<span class="o">=</span>compile|runtime;inline<span class="o">=</span><span class="nb">false</span>
</span><span class='line'>Embed-Directory: jars
</span><span class='line'>Embed-StripGroup: <span class="nb">true</span>
</span><span class='line'>Embed-Transitive: <span class="nb">true</span>
</span><span class='line'>Embedded-Artifacts: jars/guava-18.0.jar;g<span class="o">=</span>&amp;ldquo;com.google.guava&amp;rdquo;;a<span class="o">=</span>&amp;ldquo;guava&amp;rdquo;;v
</span><span class='line'> <span class="o">=</span>&amp;ldquo;18.0&amp;rdquo;
</span><span class='line'>Export-Package: com.google.common.annotations;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.googl
</span><span class='line'> e.common.base;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common.base.internal;version<span class="o">=</span>
</span><span class='line'> &amp;ldquo;1.0.0.SNAPSHOT&amp;rdquo;,com.google.common.cache;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.co
</span><span class='line'> mmon.collect;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common.escape;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;
</span><span class='line'> ,com.google.common.eventbus;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common.hash;ver
</span><span class='line'> <span class="nv">sion</span><span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common.html;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common
</span><span class='line'> .io;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common.math;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google
</span><span class='line'> .common.net;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common.primitives;version<span class="o">=</span>&amp;ldquo;18.0
</span><span class='line'> .0&amp;rdquo;,com.google.common.reflect;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common.util.c
</span><span class='line'> oncurrent;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.google.common.xml;version<span class="o">=</span>&amp;ldquo;18.0.0&amp;rdquo;,com.g
</span><span class='line'> oogle.thirdparty.publicsuffix;version<span class="o">=</span>&amp;ldquo;1.0.0.SNAPSHOT&amp;rdquo;,com.zzm.osgi;ver
</span><span class='line'> <span class="nv">sion</span><span class="o">=</span>&amp;ldquo;1.0.0.SNAPSHOT&amp;rdquo;,jars;version<span class="o">=</span>&amp;ldquo;1.0.0.SNAPSHOT&amp;rdquo;
</span><span class='line'>Import-Package: javax.annotation,org.osgi.framework;version<span class="o">=</span>&amp;ldquo;<span class="o">[</span>1.5,2<span class="o">)</span>&amp;rdquo;,su
</span><span class='line'> n.misc
</span><span class='line'>Tool: Bnd-2.1.0.20130426-122213
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>PS</code>:在Import-Package中有sun.misc的字样，表示bundle引入了jdk的一些包，有时候在运行bundle的时候会看到下面的错误:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>org.osgi.framework.BundleException: Unresolved constraint in bundle <span class="o">[</span>8<span class="o">]</span>: Unable to resolve 8.0: missing requirement <span class="o">[</span>8.0<span class="o">]</span> osgi.wiring.package; <span class="o">(</span>osgi.wiring.package<span class="o">=</span>sun.misc<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>解决办法有2个，执行解决办法意味着你清楚并明确运行bundle时可以缺少这些包:</p>

<p>way1:是在pom文件中的&lt;Import-Package>中加入!sum.misc，这样打出来的MANIFEST.MF的Import-Package就不会有sun.misc字样了。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>pom.xml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>Bundle-SymbolicName<span class="ni">&amp;gt;</span>${project.groupId}.${project.artifactId}<span class="ni">&amp;lt;</span>/Bundle-SymbolicName<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>Bundle-Vendor<span class="ni">&amp;gt;</span>joyotime<span class="ni">&amp;lt;</span>/Bundle-Vendor<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>Bundle-Version<span class="ni">&amp;gt;</span>${project.version}<span class="ni">&amp;lt;</span>/Bundle-Version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>Bundle-Activator<span class="ni">&amp;gt;</span>com.morewifi.chinatelecom.MoreWifiActivator<span class="ni">&amp;lt;</span>/Bundle-Activator<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>Private-Package<span class="ni">&amp;gt;</span>com.morewifi.chinatelecom<span class="ni">&amp;lt;</span>/Private-Package<span class="ni">&amp;gt;</span>
</span><span class='line'>...
</span><span class='line'><span class="ni">&amp;lt;</span>Import-Package<span class="ni">&amp;gt;</span>
</span><span class='line'>    !sun.misc,*
</span><span class='line'><span class="ni">&amp;lt;</span>/Import-Package<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>way2:在felix解压包下有个conf/config.properties文件，在里面配置缺少的包。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>felix/conf/config.properties </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='properties'><span class='line'><span class="na">org.osgi.framework.system.packages.extra</span><span class="o">=</span><span class="s">sun.misc</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>在bundle中保存文件</h2>

<p>有时候在bundle中需要写一些数据到文件保存起来，可以使用<code>bundleContext</code>的<code>getDataFile</code>方法来获取文件，下面代码使用了guava的io方法。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloActivator.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloActivator</span> <span class="kd">implements</span> <span class="n">BundleActivator</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kt">void</span> <span class="n">start</span><span class="o">(</span><span class="n">BundleContext</span> <span class="n">bundleContext</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello World Bundle start!&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">List</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">String</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">strings</span> <span class="o">=</span> <span class="n">Lists</span><span class="o">.</span><span class="na">newArrayList</span><span class="o">(</span><span class="s">&quot;I&quot;</span><span class="o">,</span> <span class="s">&quot;use&quot;</span><span class="o">,</span> <span class="s">&quot;guava&quot;</span><span class="o">,</span> <span class="s">&quot;here&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">strings</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//保存文件</span>
</span><span class='line'>    <span class="n">File</span> <span class="n">dataFile</span> <span class="o">=</span> <span class="n">bundleContext</span><span class="o">.</span><span class="na">getDataFile</span><span class="o">(</span><span class="s">&quot;save.txt&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Files</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">strings</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">dataFile</span><span class="o">,</span> <span class="n">Charsets</span><span class="o">.</span><span class="na">UTF_8</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 读取文件</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">fileContent</span> <span class="o">=</span> <span class="n">Files</span><span class="o">.</span><span class="na">readFirstLine</span><span class="o">(</span><span class="n">dataFile</span><span class="o">,</span> <span class="n">Charsets</span><span class="o">.</span><span class="na">UTF_8</span><span class="o">);</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">fileContent</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>打印结果如下:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>g! start 263
</span><span class='line'>Hello World Bundle start!
</span><span class='line'><span class="o">[</span>I, use, guava, here<span class="o">]</span>
</span><span class='line'><span class="o">[</span>I, use, guava, here<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在felix的目录下，有个felix-cache目录，下面是各个bundle对应的文件夹，我们的save.txt就存放在bundle的data文件夹里面。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>felix-cache/bundle263/
</span><span class='line'><span class="nv">$ </span>ls -l
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff   54 Jan 31 13:51 bundle.info
</span><span class='line'>drwxr-xr-x  3 zhaozhiming  staff  102 Jan 31 13:50 data
</span><span class='line'>drwxr-xr-x  5 zhaozhiming  staff  170 Jan 31 13:50 version0.0
</span><span class='line'><span class="nv">$ </span>ls -l data
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  21 Jan 31 13:50 save.txt
</span><span class='line'><span class="nv">$ </span>cat data/save.txt
</span><span class='line'><span class="o">[</span>I, use, guava, here<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache Thrift的简单代码示例]]></title>
    <link href="http://zhaozhiming.github.io/blog/2015/01/25/hello-thrift/"/>
    <updated>2015-01-25T19:07:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2015/01/25/hello-thrift</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2015-1/thrift.jpeg"></p>

<p><a href="https://thrift.apache.org/">Thrift</a>是Fackbook推出的一个跨语言通讯框架，相比常用的以json为载体的rest http方式来说，性能上更加优越。另外Thrift集成了RPC（Remote Procedure Call Protocol）的实现，比同类型的产品<a href="https://code.google.com/p/protobuf/">Protobuf</a>功能要更全面。</p>

<!--more-->


<p></p>

<h2>安装和镜像源</h2>

<ul>
<li>以Ubuntu14.04为例，首先安装Thrift所需要的软件。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install libboost-dev libboost-test-dev libboost-program-options-dev libboost-system-dev libboost-filesystem-dev libevent-dev automake libtool flex bison pkg-config g++ libssl-dev
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>接着安装对应语言的编译器，以Java为例，需要安装JDK和Ant，顺便把Maven也装上。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install openjdk-7-jdk ant maven
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>下载Thrift的包，最新的版本是0.9.2，但不知道什么原因，0.9.2版本安装会有问题，退一个版本就OK了，我们安装0.9.1版本。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://apache.fayea.com/thrift/0.9.1/thrift-0.9.1.tar.gz&quot;</span>&gt;http://apache.fayea.com/thrift/0.9.1/thrift-0.9.1.tar.gz&lt;/a&gt;
</span><span class='line'>tar -zxvf thrift-0.9.1.tar.gz
</span><span class='line'><span class="nb">cd </span>thrift-0.9.1
</span><span class='line'>sudo ./configure &amp;mdash;without-tests
</span><span class='line'>sudo make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>最后跑一下thrift的命令测试一下是否安装成功</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>thrift &amp;mdash;version
</span><span class='line'>Thrift version 0.9.1
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>如果嫌安装比较麻烦，也可以使用下面Vagrant或者Docker的Thrift镜像。

<ul>
<li><a href="https://registry.hub.docker.com/u/evarga/thrift/">docker镜像</a></li>
<li><a href="https://github.com/apache/thrift/blob/master/contrib/Vagrantfile">vagrant镜像</a></li>
</ul>
</li>
</ul>


<h2>接口定义</h2>

<p>安装完成Thrift之后，我们来编写一个thrift文件，定义服务端的接口。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>hello.thrift </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">namespace</span> <span class="n">java</span> <span class="n">service</span><span class="o">.</span><span class="na">demo</span>
</span><span class='line'> <span class="n">service</span> <span class="n">Hello</span><span class="o">{</span>
</span><span class='line'>  <span class="n">string</span> <span class="nf">helloString</span><span class="o">(</span><span class="mi">1</span><span class="o">:</span><span class="n">string</span> <span class="n">para</span><span class="o">)</span>
</span><span class='line'>  <span class="n">i32</span> <span class="nf">helloInt</span><span class="o">(</span><span class="mi">1</span><span class="o">:</span><span class="n">i32</span> <span class="n">para</span><span class="o">)</span>
</span><span class='line'>  <span class="n">bool</span> <span class="nf">helloBoolean</span><span class="o">(</span><span class="mi">1</span><span class="o">:</span><span class="n">bool</span> <span class="n">para</span><span class="o">)</span>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">helloVoid</span><span class="o">()</span>
</span><span class='line'>  <span class="n">string</span> <span class="nf">helloNull</span><span class="o">()</span>
</span><span class='line'> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>可以看到我们定义了5个不同的接口，接着使用Thrift对文件进行编译，产生对应语言的程序文件，下面以Java为例。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>thrift —gen java hello.thrift
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>命令执行完成后，会生成一个Hello.java的文件。</p>

<h2>接口实现</h2>

<p>前面只是定义了接口的签名，现在我们来对接口进行实现，实现类需要实现Hello.Iface，代码如下:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloServiceImpl </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">service</span><span class="o">.</span><span class="na">demo</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.thrift.TException</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloServiceImpl</span> <span class="kd">implements</span> <span class="n">Hello</span><span class="o">.</span><span class="na">Iface</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">helloBoolean</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">para</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">TException</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;hello true/false&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">para</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">int</span> <span class="nf">helloInt</span><span class="o">(</span><span class="kt">int</span> <span class="n">para</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">TException</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;hello times: &quot;</span> <span class="o">+</span> <span class="n">para</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">para</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">helloNull</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">TException</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;hello null&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">helloString</span><span class="o">(</span><span class="n">String</span> <span class="n">para</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">TException</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;hello &quot;</span> <span class="o">+</span> <span class="n">para</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">para</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">helloVoid</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">TException</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello World&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>服务端代码的实现</h2>

<p>接着我们来编写我们的服务器代码:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloServiceImpl </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">service</span><span class="o">.</span><span class="na">server</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.thrift.TProcessor</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.server.TServer</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.server.TThreadPoolServer</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.transport.TServerSocket</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.transport.TTransportException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">service.demo.Hello</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">service.demo.HelloServiceImpl</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloServiceServer</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// 设置服务端口为 9527 </span>
</span><span class='line'>        <span class="n">TServerSocket</span> <span class="n">serverTransport</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TServerSocket</span><span class="o">(</span><span class="mi">9527</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// 关联处理器与 Hello 服务的实现</span>
</span><span class='line'>        <span class="n">TProcessor</span> <span class="n">processor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Hello</span><span class="o">.</span><span class="na">Processor</span><span class="o">(</span><span class="k">new</span> <span class="n">HelloServiceImpl</span><span class="o">());</span>
</span><span class='line'>        <span class="n">TServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TThreadPoolServer</span><span class="o">(</span><span class="k">new</span> <span class="n">TThreadPoolServer</span><span class="o">.</span><span class="na">Args</span><span class="o">(</span><span class="n">serverTransport</span><span class="o">).</span><span class="na">processor</span><span class="o">(</span><span class="n">processor</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Start server on port 9527...&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">server</span><span class="o">.</span><span class="na">serve</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">TTransportException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>客户端代码的实现</h2>

<p>最后来完成我们的客户端代码，客户端我们也是用Java来实现。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloServiceImpl </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">service</span><span class="o">.</span><span class="na">client</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.thrift.TException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.protocol.TBinaryProtocol</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.protocol.TProtocol</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.transport.TSocket</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.transport.TTransport</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.thrift.transport.TTransportException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">service.demo.Hello</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloServiceClient</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="n">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// 设置调用的服务地址为本地，端口为 9527</span>
</span><span class='line'>        <span class="n">TTransport</span> <span class="n">transport</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TSocket</span><span class="o">(</span><span class="s">&quot;localhost&quot;</span><span class="o">,</span> <span class="mi">9527</span><span class="o">);</span>
</span><span class='line'>        <span class="n">transport</span><span class="o">.</span><span class="na">open</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">// 设置传输协议为 TBinaryProtocol</span>
</span><span class='line'>        <span class="n">TProtocol</span> <span class="n">protocol</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TBinaryProtocol</span><span class="o">(</span><span class="n">transport</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Hello</span><span class="o">.</span><span class="na">Client</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Hello</span><span class="o">.</span><span class="na">Client</span><span class="o">(</span><span class="n">protocol</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// 调用服务的 helloVoid 方法</span>
</span><span class='line'>        <span class="n">client</span><span class="o">.</span><span class="na">helloVoid</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">transport</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">TTransportException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">TException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>代码完成后，可以先运行HelloServiceServer的main方式，然后再运行HelloServiceClient的main方法，可以在HelloServiceServer的输出结果中看到客户端打印的<code>Hello World</code>字样。</p>

<h2>部署</h2>

<p>参考了一些资料后，决定使用Jar包来启动thrift服务，并使用<a href="http://supervisord.org/">Supervisor</a>来进行进程的监控和自动重启，下面是supervisor的配置文件，里面配置了我们的thrift程序。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/etc/supervisord.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>program:thrift<span class="o">]</span>
</span><span class='line'><span class="nb">command</span><span class="o">=</span>/usr/bin/java -jar /home/vagrant/thrift-hello/demo.jar
</span><span class='line'><span class="nv">stderr_logfile</span><span class="o">=</span>/home/vagrant/logs/err.log
</span><span class='line'><span class="nv">stdout_logfile</span><span class="o">=</span>/home/vagrant/logs/out.log
</span><span class='line'><span class="nv">autostart</span><span class="o">=</span><span class="nb">true</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>unix_http_server<span class="o">]</span>
</span><span class='line'><span class="nv">file</span> <span class="o">=</span> /tmp/supervisor.sock
</span><span class='line'><span class="nv">chmod</span> <span class="o">=</span> 0777
</span><span class='line'><span class="nv">chown</span><span class="o">=</span> nobody:nogroup&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>inet_http_server<span class="o">]</span>
</span><span class='line'><span class="nv">port</span> <span class="o">=</span> 127.0.0.1:9001&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>supervisord<span class="o">]</span>
</span><span class='line'><span class="nv">logfile</span> <span class="o">=</span> /tmp/supervisord.log
</span><span class='line'><span class="nv">logfile_maxbytes</span> <span class="o">=</span> 50MB
</span><span class='line'><span class="nv">logfile_backups</span><span class="o">=</span>10
</span><span class='line'><span class="nv">loglevel</span> <span class="o">=</span> info
</span><span class='line'><span class="nv">pidfile</span> <span class="o">=</span> /tmp/supervisord.pid
</span><span class='line'><span class="nv">nodaemon</span> <span class="o">=</span> <span class="nb">false</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>supervisorctl<span class="o">]</span>
</span><span class='line'><span class="nv">serverurl</span> <span class="o">=</span> unix:///tmp/supervisor.sock&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>rpcinterface:supervisor<span class="o">]</span>
</span><span class='line'>supervisor.rpcinterface_factory <span class="o">=</span> supervisor.rpcinterface:make_main_rpcinterface
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>参考资料: <a href="http://stackoverflow.com/questions/17639442/deploy-and-serve-a-thrift-server">http://stackoverflow.com/questions/17639442/deploy-and-serve-a-thrift-server</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RequireJS的简单使用]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/12/19/requirejs-simple-use/"/>
    <updated>2014-12-19T11:05:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/12/19/requirejs-simple-use</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2014-12/requirejs.png"></p>

<p>在没有<a href="http://requirejs.org/">RequireJS</a>以前，我们的html页面都需要配置很多js文件，有了RequireJS以后，我们只需要简单的一个RequireJS的文件就可以了。</p>

<!--more-->


<h2>工程目录</h2>

<p>先看下我们的工程目录，主要引入了Jqury、AngularJS和RequireJS这几个js文件，login.html、main.js和login.js是我们自己的文件。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&amp;mdash;webapp
</span><span class='line'>  |&amp;mdash;resources&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;|--scripts
</span><span class='line'>  |--vendor
</span><span class='line'>    |--jquery.js
</span><span class='line'>    |--angularjs.js
</span><span class='line'>    |--requirejs.js
</span><span class='line'>  |--login.js
</span><span class='line'>  |--main.js
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  |&amp;mdash;WEB-INF
</span><span class='line'>  |&amp;mdash;login.html
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>在html页面中加入RequireJS</h2>

<p>首先在html页面我们先引入requirejs，可以看到script标签中有个data-main属性，这个是RequireJS的属性标签，指向我们工程里面的main.js文件，注意这里不需要写<code>.js</code>后缀。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="ni">&amp;lt;</span>!DOCTYPE html&gt;
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span> <span class="na">ng-app=</span><span class="s">&quot;app&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>meta charset=&quot;UTF-8&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>title<span class="ni">&amp;gt;</span>My App<span class="ni">&amp;lt;</span>/title<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>script src=&quot;resources/scripts/vendor/require.js&quot; data-main=&quot;resources/srcipts/main&quot;<span class="ni">&amp;gt;&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">&quot;LoginForm&quot;</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span> <span class="na">action=</span><span class="s">&quot;j_spring_security_check&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">&quot;display: block;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div&gt;</span>
</span><span class='line'>                <span class="nt">&lt;h1&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;ui-icon add&quot;</span><span class="nt">&gt;&lt;/span&gt;</span>用户登录
</span><span class='line'>                <span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;error&quot;</span> <span class="na">style=</span><span class="s">&quot;display: none; color: #c9302c&quot;</span> <span class="na">align=</span><span class="s">&quot;center&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;h3&gt;</span>认证失败，请重新登录<span class="nt">&lt;/h3&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>                <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;logout&quot;</span> <span class="na">style=</span><span class="s">&quot;display: none; color: #02547f&quot;</span> <span class="na">align=</span><span class="s">&quot;center&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;h3&gt;</span>已成功登出<span class="nt">&lt;/h3&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;li&gt;&lt;label&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;span&gt;</span>用户名<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;j_username&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/label&gt;&lt;/li&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;li&gt;&lt;label&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;span&gt;</span>密码<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;password&quot;</span> <span class="na">name=</span><span class="s">&quot;j_password&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/label&gt;&lt;/li&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div&gt;</span>
</span><span class='line'>                <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">name=</span><span class="s">&quot;logon&quot;</span> <span class="na">value=</span><span class="s">&quot;Logon&quot;</span><span class="nt">&gt;</span>登录<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>main.js</h2>

<p>下面是我们的main.js。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>main.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">require</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span>
</span><span class='line'>   <span class="nx">paths</span><span class="o">:</span><span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>  <span class="nx">angular</span><span class="o">:</span> <span class="s1">&#39;vendor/angular&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">jquery</span><span class="o">:</span> <span class="s1">&#39;vendor/jquery&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>   <span class="p">},</span>
</span><span class='line'>   <span class="nx">shim</span><span class="o">:</span><span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>  <span class="nx">angular</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>     <span class="nx">deps</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;jquery&#39;</span><span class="p">],</span>
</span><span class='line'>     <span class="nx">exports</span><span class="o">:</span> <span class="s1">&#39;angular&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>   <span class="p">}</span> <span class="o">&lt;</span><span class="nx">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">require</span><span class="p">([</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">angular</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">login</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">angular</span><span class="p">)</span> <span class="p">{</span>  <span class="o">&lt;</span><span class="nx">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><code>paths</code>里面指定了jqury和angularjs对应的js文件路径，同样不需要写js后缀，并给他们起了对应的别名。</li>
<li><code>shim</code>属性里面配置了deps数组，表明angular依赖jqury，还有exports值，表明这个模块外部调用时的名称。</li>
<li>最后一部分代码表示我们的html页面需要使用哪些js文件，比如我们使用了angular和login这2个js文件的功能，同时angular依赖了jqurey，所以html页面加载的时候就会同时将jquery.js、angularjs.js和login.js这几个js文件加载进来。</li>
</ul>


<h2>login.js</h2>

<p>最后看一下我们的login.js，通过之前的main.js我们已经加载好了Jquery和AngularJS这些第三方JS库，要使用它们的话需要通过<code>define</code>的方式来引用。</p>

<p>比如下面的js文件使用了jquery的功能，我们可以在<code>define</code>后面添加<code>angular</code>这个名称，因为前面在<code>shim</code>属性里面已经定义了<code>angular</code>依赖<code>jquery</code>，所以使用<code>angular</code>也可以用到<code>jquery</code>的功能。(当然我们也可以单独添加<code>jquery</code>，但这样就使用不到<code>angular</code>的功能了)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>login.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">define</span><span class="p">([</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">angular</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">angular</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">getParameterByName</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\[]/</span><span class="p">,</span> <span class="s2">&quot;\\[&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\]]/</span><span class="p">,</span> <span class="s2">&quot;\\]&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">regex</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;[\\?&amp;amp;]&quot;</span> <span class="o">+</span> <span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot;=([^&amp;amp;#]*)&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">results</span> <span class="o">=</span> <span class="nx">regex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">search</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">results</span> <span class="o">===</span> <span class="kc">null</span> <span class="o">?</span> <span class="s2">&quot;&quot;</span> <span class="o">:</span> <span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">results</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\+/g</span><span class="p">,</span> <span class="s2">&quot; &quot;</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nx">getParameterByName</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#error&quot;</span><span class="p">).</span><span class="nx">show</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nx">getParameterByName</span><span class="p">(</span><span class="s2">&quot;logout&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#logout&quot;</span><span class="p">).</span><span class="nx">show</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
