<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/blog/categories/code/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2014-04-19T20:24:21+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[swift源码分析一——开始]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/04/19/swift-code-explain-total/"/>
    <updated>2014-04-19T17:19:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/04/19/swift-code-explain-total</id>
    <content type="html"><![CDATA[<p>从今天开始准备仔细再看一下swift的源码，然后把理解的内容记录下来。下面是swift源码的代码结构，准备每天更新1～2个文件的代码理解，更新好的在文件名上会在下面的代码结构上有链接出现。</p>

<!--more-->


<p>
swift的源码因为不断在更新，笔记记录的代码就以2014-4-18的为准，我已经fork了一份swift源码到我github上，地址是：<a href="https://github.com/zhaozhiming/swift">https://github.com/zhaozhiming/swift</a>，代码结构如下：</p>

<ul>
<li><h3>swift</h3>

<ul>
<li><h3>account</h3>

<ul>
<li>auditor.py</li>
<li>backend.py</li>
<li>reaper.py</li>
<li>replicator.py</li>
<li>server.py</li>
<li>utils.py</li>
</ul>
</li>
<li><h3>cli</h3>

<ul>
<li>info.py</li>
<li>recon.py</li>
<li>ringbuilder.py</li>
<li>ringbuilder.py</li>
</ul>
</li>
<li><h3>common</h3>

<ul>
<li><h3>middleware</h3>

<ul>
<li>account_quotas.py</li>
<li>acl.py</li>
<li>bulk.py</li>
<li>catch_errors.py</li>
<li>cname_lookup.py</li>
<li>container_quotas.py</li>
<li>container_sync.py</li>
<li>crossdomain.py</li>
<li>dlo.py</li>
<li>domain_remap.py</li>
<li>formpost.py</li>
<li>gatekeeper.py</li>
<li>healthcheck.py</li>
<li>list_endpoints.py</li>
<li>memcache.py</li>
<li>name_check.py</li>
<li>proxy_logging.py</li>
<li>ratelimit.py</li>
<li>recon.py</li>
<li>slo.py</li>
<li>staticweb.py</li>
<li>tempauth.py</li>
<li>tempurl.py</li>
</ul>
</li>
<li><h3>ring</h3>

<ul>
<li>builder.py</li>
<li>ring.py</li>
<li>utils.py</li>
</ul>
</li>
<li>bufferedhttp.py</li>
<li>constraints.py</li>
<li>container_sync_realms.py</li>
<li>daemon.py</li>
<li>db.py</li>
<li>db_replicator.py</li>
<li>direct_client.py</li>
<li>exceptions.py</li>
<li>http.py</li>
<li>internal_client.py</li>
<li>manager.py</li>
<li>memcached.py</li>
<li>request_helpers.py</li>
<li>swob.py</li>
<li>swob.py</li>
<li>utils.py</li>
<li>wsgi.py</li>
</ul>
</li>
<li><h3>container</h3>

<ul>
<li>auditor.py</li>
<li>backend.py</li>
<li>replicator.py</li>
<li>server.py</li>
<li>sync.py</li>
<li>updater.py</li>
</ul>
</li>
<li><h3>obj</h3>

<ul>
<li>auditor.py</li>
<li>diskfile.py</li>
<li>expirer.py</li>
<li>mem_diskfile.py</li>
<li>mem_server.py</li>
<li>replicator.py</li>
<li>server.py</li>
<li>ssync_receiver.py</li>
<li>ssync_sender.py</li>
<li>updater.py</li>
</ul>
</li>
<li><h3>proxy</h3>

<ul>
<li>controllers

<ul>
<li>account.py</li>
<li>base.py</li>
<li>container.py</li>
<li>obj.py</li>
</ul>
</li>
<li>server.py</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在ubunut下使用pycharm和eclipse进行python远程调试]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/04/13/python-remote-debug-setting-by-pycharm-and-eclipse-in-ubuntu/"/>
    <updated>2014-04-13T15:54:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/04/13/python-remote-debug-setting-by-pycharm-and-eclipse-in-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2014-4/pycharm_and_eclipse.jpg"></p>

<p>我比较喜欢Pycharm，因为这个是JetBrains公司出的python IDE工具，该公司下的java IDE工具——IDEA，无论从界面还是操作上都甩eclipse几条街，但项目组里有些人使用eclipse比较久了，一时让他们转pycharm比较困难，所以还是两边的设置都介绍一下吧。</p>

<!--more-->


<p></p>

<h2>pycharm远程调试</h2>

<p>pycharmd的远程调试比eclipse的简单多了，而且调试程序也比较稳定，不像eclipse那样容易出一些莫名其妙的问题，步骤如下。</p>

<ol>
<li>将pycharm安装目录下的pycharm-debug.egg文件拷贝到远程机器上（如果是python3的话就拷贝pycharm-debug-py3k.egg文件）。</li>
<li>在远程机器上安装pycharm-debug.egg，安装命令： <code>easy_install pycharm-debug.egg</code>。</li>
<li><p>在pycharm中设置断点监听配置。<br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-1.png"><br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-2.png"><br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-3.png"></p></li>
<li><p>启动调试监听程序。<br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-4.png"><br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-5.png"></p></li>
<li><p>在远程机器上启动服务并发起http请求。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-10.png"></p></li>
<li><p>pycharm监听到请求会进入断点。
<img src="/images/post/2014-4/pycharm-debug/pycharm-6.png"></p></li>
</ol>


<p>更多关于pycharm远程调试的信息可以参阅<a href="http://www.jetbrains.com/pycharm/webhelp/remote-debugging.html">这里</a>。</p>

<h2>eclipse远程调试</h2>

<p>使用eclipse进行python远程调试，需要先在ubuntu下面安装eclipse和eclipse的python插件PyDev。</p>

<ul>
<li>Eclipse安装比较简单，直接解压下载后的eclipse包即可使用。</li>
<li><p>PyDev可以按照<a href="http://pydev.org/manual_101_install.html">官网的向导</a>进行安装。<br/>
安装完后按照下面的步骤进行远程调试。</p></li>
<li><p>在window->Preperences->PyDev->Debug中，设置debug端口，比如12306。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-1.png"></p></li>
<li><p>新增PyDev视图。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-2.png"><br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-3.png"></p></li>
<li><p>在Pydev试图中增加remote debug菜单。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-4.png"><br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-5.png"></p></li>
<li><p>在远程机器的源码里面添加调试代码和断点。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-6.png"></p></li>
<li><p>断点设置语句：<br/>
<code>pydevd.settrace('192.168.8.128', port=12306, stdoutToServer=True, stderrToServer=True)</code><br/>
注意：这里的ip是指设置了调试监听的机器ip。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-7.png"></p></li>
<li><p>通过Pydev菜单打开调试监听。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-8.png"><br/>
开始监听显示信息如下：<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-9.png"></p></li>
<li><p>启动远程服务并发起http请求。
<img src="/images/post/2014-4/eclipse-debug/eclipse-10.png"></p></li>
<li><p>Pydev监听到请求后就会进入断点。
<img src="/images/post/2014-4/eclipse-debug/eclipse-11.png"></p></li>
</ul>


<p>更多远程调试的内容可以参照Pydev的<a href="http://pydev.org/manual_adv_remote_debugger.html">官网步骤</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift单节点多dev环境部署]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/04/09/swift-multiply-nodes-deploy-in-one-machine/"/>
    <updated>2014-04-09T20:45:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/04/09/swift-multiply-nodes-deploy-in-one-machine</id>
    <content type="html"><![CDATA[<h2>环境目标</h2>

<ul>
<li>同一台机器</li>
<li>1台proxy server</li>
<li>5个storage node</li>
<li>每个storage node有2个dev</li>
</ul>


<!--more-->


<p></p>

<p>安装过程可以按照<a href="http://docs.openstack.org/developer/swift/development_saio.html">swift all in one</a>文档进行搭建，在操作过程中需要修改以下的地方。</p>

<h2>Using a loopback device for storage</h2>

<ol>
<li>Create the file for the loopback device:<br/>
<code>(这里的标题和编号是与saio的保持一致，这样方便大家按照saio的编号进行修改，后面的步骤与此相同，不再做说明)</code></li>
</ol>


<p>修改前：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo truncate -s 1GB /srv/swift-disk
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修改后：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo truncate -s 500GB /srv/swift-disk
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>将xfs文件系统的大小改为500GB，原来的1GB太小不适合做测试。</p>

<ol>
<li>Create the mount point and the individualized links: <br/>
将原来的脚本修改为：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir /mnt/sdb1
</span><span class='line'>sudo mount /mnt/sdb1
</span><span class='line'>sudo mkdir /mnt/sdb1/1 /mnt/sdb1/2 /mnt/sdb1/3 /mnt/sdb1/4 /mnt/sdb1/5
</span><span class='line'>sudo chown <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>:<span class="k">${</span><span class="nv">USER</span><span class="k">}</span> /mnt/sdb1/*
</span><span class='line'><span class="k">for </span>x in <span class="o">{</span>1..5<span class="o">}</span>; <span class="k">do </span>sudo ln -s /mnt/sdb1/<span class="nv">$x</span> /srv/<span class="nv">$x</span>; <span class="k">done</span>
</span><span class='line'>sudo mkdir -p /srv/1/node/dev1 /srv/1/node/dev2 /srv/2/node/dev3 /srv/2/node/dev4 /srv/3/node/dev5 /srv/3/node/dev6 /srv/4/node/dev7 /srv/4/node/dev8 /srv/5/node/dev9 /srv/5/node/dev10 /var/run/swift
</span><span class='line'>sudo chown -R <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>:<span class="k">${</span><span class="nv">USER</span><span class="k">}</span> /var/run/swift
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;&lt;strong&gt;Make sure to include the trailing slash after /srv/<span class="nv">$x</span>/&lt;/strong&gt;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;for x in <span class="o">{</span>1..5<span class="o">}</span>; <span class="k">do </span>sudo chown -R <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>:<span class="k">${</span><span class="nv">USER</span><span class="k">}</span> /srv/<span class="nv">$x</span>/; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
</ol>


<p>创建属于5个节点的文件夹，在每个节点文件夹下创建2个dev文件夹，表示1个节点有2个dev，其中region1有6台dev(1~6)，region2有4台dev(7~10)。</p>

<h2>Common Post-Device Setup</h2>

<p>Add the following lines to /etc/rc.local (before the exit 0): <br/>
修改前：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p /var/cache/swift /var/cache/swift2 /var/cache/swift3 /var/cache/swift4
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修改后：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p /var/cache/swift /var/cache/swift2 /var/cache/swift3 /var/cache/swift4 /var/cache/swift5
</span></code></pre></td></tr></table></div></figure></notextile></div>
因为有5个节点，所以增加了1个新节点的缓存文件夹。</p>

<h2>Setting up rsync</h2>

<p>Here is the default rsyncd.conf file contents maintained in the repo that is copied and fixed up above:</p>

<p>在/etc/rsyncd.conf文件追加以下内容：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>account6052<span class="o">]</span>
</span><span class='line'>max <span class="nv">connections</span> <span class="o">=</span> 25
</span><span class='line'><span class="nv">path</span> <span class="o">=</span> /srv/5/node/
</span><span class='line'><span class="nb">read </span><span class="nv">only</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>lock <span class="nv">file</span> <span class="o">=</span> /var/lock/account6052.lock&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container6051<span class="o">]</span>
</span><span class='line'>max <span class="nv">connections</span> <span class="o">=</span> 25
</span><span class='line'><span class="nv">path</span> <span class="o">=</span> /srv/5/node/
</span><span class='line'><span class="nb">read </span><span class="nv">only</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>lock <span class="nv">file</span> <span class="o">=</span> /var/lock/container6051.lock&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>object6050<span class="o">]</span>
</span><span class='line'>max <span class="nv">connections</span> <span class="o">=</span> 25
</span><span class='line'><span class="nv">path</span> <span class="o">=</span> /srv/5/node/
</span><span class='line'><span class="nb">read </span><span class="nv">only</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>lock <span class="nv">file</span> <span class="o">=</span> /var/lock/object6050.lock
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>增加了新节点的account, container, object服务的同步配置。</p>

<p>You should see the following output from the above command:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>account6012
</span><span class='line'>account6022
</span><span class='line'>account6032
</span><span class='line'>account6042
</span><span class='line'>account6052
</span><span class='line'>container6011
</span><span class='line'>container6021
</span><span class='line'>container6031
</span><span class='line'>container6041
</span><span class='line'>container6051
</span><span class='line'>object6010
</span><span class='line'>object6020
</span><span class='line'>object6030
</span><span class='line'>object6040
</span><span class='line'>object6050
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>验证rsync可以看到新增的account, container, object信息。</p>

<h2>Optional: Setting up rsyslog for individual logging</h2>

<p>将/etc/rsyslog.d/10-swift.conf文件内容修改为：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Uncomment the following to have a log containing all logs together&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;local1,local2,local3,local4,local5.*   /var/log/swift/all.log&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Uncomment the following to have hourly proxy logs <span class="k">for </span>stats processing&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="nv">$template</span> HourlyProxyLog,&amp;ldquo;/var/log/swift/hourly/%<span class="nv">$YEAR</span>%%<span class="nv">$MONTH</span>%%<span class="nv">$DAY</span>%%<span class="nv">$HOUR</span>%&amp;rdquo;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;local1.*;local1.!notice ?HourlyProxyLog&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local1.&lt;em&gt;;local1.!notice /var/log/swift/proxy.log
</span><span class='line'>local1.notice           /var/log/swift/proxy.error
</span><span class='line'>local1.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local2.&lt;em&gt;;local2.!notice /var/log/swift/storage1.log
</span><span class='line'>local2.notice           /var/log/swift/storage1.error
</span><span class='line'>local2.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local3.&lt;em&gt;;local3.!notice /var/log/swift/storage2.log
</span><span class='line'>local3.notice           /var/log/swift/storage2.error
</span><span class='line'>local3.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local4.&lt;em&gt;;local4.!notice /var/log/swift/storage3.log
</span><span class='line'>local4.notice           /var/log/swift/storage3.error
</span><span class='line'>local4.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local5.&lt;em&gt;;local5.!notice /var/log/swift/storage4.log
</span><span class='line'>local5.notice           /var/log/swift/storage4.error
</span><span class='line'>local5.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local6.&lt;em&gt;;local6.!notice /var/log/swift/storage5.log
</span><span class='line'>local6.notice           /var/log/swift/storage5.error
</span><span class='line'>local6.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local7.&lt;em&gt;;local7.!notice /var/log/swift/expirer.log
</span><span class='line'>local7.notice           /var/log/swift/expirer.error
</span><span class='line'>local7.&lt;/em&gt;                ~
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修改日志配置，将原来的local6指向storage node 5, 原来的expirer用local7来记录日志（<code>注意：后面在修改各个节点的服务配置文件时需要知道这些日志配置信息</code>）。</p>

<h2>Configuring each node</h2>

<ol>
<li>/etc/swift/object-expirer.conf</li>
</ol>


<p>修改前：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL6   &lt;br/&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修改后：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL7
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>新增account5的配置文件 /etc/swift/account-server/5.conf：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>DEFAULT<span class="o">]</span>
</span><span class='line'><span class="nv">devices</span> <span class="o">=</span> /srv/5/node
</span><span class='line'><span class="nv">mount_check</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nv">disable_fallocate</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">bind_port</span> <span class="o">=</span> 6052
</span><span class='line'><span class="nv">workers</span> <span class="o">=</span> 1
</span><span class='line'><span class="nv">user</span> <span class="o">=</span> swift
</span><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL6
</span><span class='line'><span class="nv">recon_cache_path</span> <span class="o">=</span> /var/cache/swift5
</span><span class='line'><span class="nv">eventlet_debug</span> <span class="o">=</span> <span class="nb">true</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>pipeline:main<span class="o">]</span>
</span><span class='line'><span class="nv">pipeline</span> <span class="o">=</span> recon account-server&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>app:account-server<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#account&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>filter:recon<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#recon&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>account-replicator<span class="o">]</span>
</span><span class='line'><span class="nv">vm_test_mode</span> <span class="o">=</span> yes&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>account-auditor<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>account-reaper<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>新增container5的配置文件/etc/swift/container-server/5.conf：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>DEFAULT<span class="o">]</span>
</span><span class='line'><span class="nv">devices</span> <span class="o">=</span> /srv/5/node
</span><span class='line'><span class="nv">mount_check</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nv">disable_fallocate</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">bind_port</span> <span class="o">=</span> 6051
</span><span class='line'><span class="nv">workers</span> <span class="o">=</span> 1
</span><span class='line'><span class="nv">user</span> <span class="o">=</span> swift
</span><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL6
</span><span class='line'><span class="nv">recon_cache_path</span> <span class="o">=</span> /var/cache/swift5
</span><span class='line'><span class="nv">eventlet_debug</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">allow_versions</span> <span class="o">=</span> <span class="nb">true</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>pipeline:main<span class="o">]</span>
</span><span class='line'><span class="nv">pipeline</span> <span class="o">=</span> recon container-server&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>app:container-server<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#container&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>filter:recon<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#recon&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container-replicator<span class="o">]</span>
</span><span class='line'><span class="nv">vm_test_mode</span> <span class="o">=</span> yes&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container-updater<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container-auditor<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container-sync<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>新增object5的配置文件/etc/swift/object-server/5.conf：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>DEFAULT<span class="o">]</span>
</span><span class='line'><span class="nv">devices</span> <span class="o">=</span> /srv/5/node
</span><span class='line'><span class="nv">mount_check</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nv">disable_fallocate</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">bind_port</span> <span class="o">=</span> 6050
</span><span class='line'><span class="nv">workers</span> <span class="o">=</span> 1
</span><span class='line'><span class="nv">user</span> <span class="o">=</span> swift
</span><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL6
</span><span class='line'><span class="nv">recon_cache_path</span> <span class="o">=</span> /var/cache/swift5
</span><span class='line'><span class="nv">eventlet_debug</span> <span class="o">=</span> <span class="nb">true</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>pipeline:main<span class="o">]</span>
</span><span class='line'><span class="nv">pipeline</span> <span class="o">=</span> recon object-server&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>app:object-server<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#object&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>filter:recon<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#recon&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>object-replicator<span class="o">]</span>
</span><span class='line'><span class="nv">vm_test_mode</span> <span class="o">=</span> yes&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>object-updater<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>object-auditor<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Setting up scripts for running Swift</h2>

<ol>
<li>Construct the initial rings using the provided script:</li>
</ol>


<p>先修改bin/remakerings文件，在执行remakerings命令：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;cd /etc/swift&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rm -f &lt;em&gt;.builder &lt;/em&gt;.ring.gz backups/&lt;em&gt;.builder backups/&lt;/em&gt;.ring.gz&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;swift-ring-builder object.builder create 19 6 1
</span><span class='line'>swift-ring-builder object.builder add r1z1-127.0.0.1:6010/dev1 1
</span><span class='line'>swift-ring-builder object.builder add r1z1-127.0.0.1:6010/dev2 1
</span><span class='line'>swift-ring-builder object.builder add r1z2-127.0.0.1:6020/dev3 1
</span><span class='line'>swift-ring-builder object.builder add r1z2-127.0.0.1:6020/dev4 1
</span><span class='line'>swift-ring-builder object.builder add r1z3-127.0.0.1:6030/dev5 1
</span><span class='line'>swift-ring-builder object.builder add r1z3-127.0.0.1:6030/dev6 1
</span><span class='line'>swift-ring-builder object.builder add r2z1-127.0.0.1:6040/dev7 1
</span><span class='line'>swift-ring-builder object.builder add r2z1-127.0.0.1:6040/dev8 1
</span><span class='line'>swift-ring-builder object.builder add r2z2-127.0.0.1:6050/dev9 1
</span><span class='line'>swift-ring-builder object.builder add r2z2-127.0.0.1:6050/dev10 1
</span><span class='line'>swift-ring-builder object.builder rebalance
</span><span class='line'>swift-ring-builder container.builder create 19 6 1
</span><span class='line'>swift-ring-builder container.builder add r1z1-127.0.0.1:6011/dev1 1
</span><span class='line'>swift-ring-builder container.builder add r1z1-127.0.0.1:6011/dev2 1
</span><span class='line'>swift-ring-builder container.builder add r1z2-127.0.0.1:6021/dev3 1
</span><span class='line'>swift-ring-builder container.builder add r1z2-127.0.0.1:6021/dev4 1
</span><span class='line'>swift-ring-builder container.builder add r1z3-127.0.0.1:6031/dev5 1
</span><span class='line'>swift-ring-builder container.builder add r1z3-127.0.0.1:6031/dev6 1
</span><span class='line'>swift-ring-builder container.builder add r2z1-127.0.0.1:6041/dev7 1
</span><span class='line'>swift-ring-builder container.builder add r2z1-127.0.0.1:6041/dev8 1
</span><span class='line'>swift-ring-builder container.builder add r2z2-127.0.0.1:6051/dev9 1
</span><span class='line'>swift-ring-builder container.builder add r2z2-127.0.0.1:6051/dev10 1
</span><span class='line'>swift-ring-builder container.builder rebalance
</span><span class='line'>swift-ring-builder account.builder create 19 6 1
</span><span class='line'>swift-ring-builder account.builder add r1z1-127.0.0.1:6012/dev1 1
</span><span class='line'>swift-ring-builder account.builder add r1z1-127.0.0.1:6012/dev2 1
</span><span class='line'>swift-ring-builder account.builder add r1z2-127.0.0.1:6022/dev3 1
</span><span class='line'>swift-ring-builder account.builder add r1z2-127.0.0.1:6022/dev4 1
</span><span class='line'>swift-ring-builder account.builder add r1z3-127.0.0.1:6032/dev5 1
</span><span class='line'>swift-ring-builder account.builder add r1z3-127.0.0.1:6032/dev6 1
</span><span class='line'>swift-ring-builder account.builder add r2z1-127.0.0.1:6042/dev7 1
</span><span class='line'>swift-ring-builder account.builder add r2z1-127.0.0.1:6042/dev8 1
</span><span class='line'>swift-ring-builder account.builder add r2z2-127.0.0.1:6052/dev9 1
</span><span class='line'>swift-ring-builder account.builder add r2z2-127.0.0.1:6052/dev10 1
</span><span class='line'>swift-ring-builder account.builder rebalance
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>新ring环有2的19次方，6个副本，修改后重新生成ring环即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[压力测试工具——Galting]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/02/28/hello-galting/"/>
    <updated>2014-02-28T07:30:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/02/28/hello-galting</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2014-2/gatling.png"></p>

<p>为什么要写Gatling呢？网上已经有一些介绍Gatling的好文章了，比如两位TW同事的文章，可以看<a href="http://www.infoq.com/cn/articles/new-generation-server-testing-tool-gatling">这里</a>（我知道Gatling也是因为这位作者介绍的），还有<a href="http://www.cnblogs.com/huang0925/p/3488313.html">这里</a>。主要是因为最近在使用Gatling做压力测试，感觉这个工具非常好用，所以想结合自己的使用情况也推荐一下。Gatling是基于scala写的一个开源的压力测试工具，它的特点是简单易用，测试报告简洁漂亮，api通俗易懂。</p>

<!--more-->


<p></p>

<h2>JDK1.7</h2>

<p>Gatling是基于jdk1.7开发的，所以还在用jdk1.6的同学需要先下载jdk1.7，才可以启动Gatling。顺便说一下，JDK1.7以后肯定是会替换JDK1.6的，但由于历史原因（主要是JDK1.6用的人实在太多了，我想也是由于JDK1.7升级的太晚了）大家都不想升级，我也这也是JAVA走下坡路的原因。</p>

<h2>Scala</h2>

<p>前面讲过Gatling是用scala写的，像scala、groovy和clojuer都是基于jvm开发的一种语言，不仅继承了java众多成熟的api和稳定的jvm，而且提供了更佳简洁易用的语法。基于某种语言的内核来重新设计一门新语言的这种做法，现在慢慢多了起来，这种做法的最大好处就是不用自己再重新设计编程语言底层相关的一些东西，而且可以使用原有语言大量的成熟api，让新语言就只专注地实现自己的功能，从而使新的语言性能稳定，易用性更高，甚至可以吸引一些原有语言的开发人员。</p>

<h2>DSL</h2>

<p>看过Galting的api的人就会发现，它的语法很像自然语言，比如测试一个get类型的http请求，它可能会这样写：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>demo </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="n">demo</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="o">;)&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;.</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;http://www.myweb.com/helloworld&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>是不是很容易懂，这种就是基于DSL来写的代码，关于DSL可以看<a href="http://book.douban.com/subject/21964984/">这本书</a>，这本书我还没怎么看，等看完了以后再做分享，DSL不单单只是把代码写得像自然语言那样简单。</p>

<h2>API</h2>

<p>要想了解Gatling的各种api，这里推荐看Gatling源码里面的HttpCompileTest这个测试类，这里包含了http几乎所有的api使用示例。下面是截取的代码片段，全部代码可以看<a href="https://github.com/excilys/gatling/blob/f5aeee2492dedd665b0dcf0b5b60f0a2227a53b6/gatling-bundle/src/test/scala/io/gatling/bundle/test/HTTPCompileTest.scala">这里</a>。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>demo </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="o">.</span><span class="n">group</span><span class="o">(&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="n">C</span><span class="-Symbol">&#39;est</span> <span class="n">ici</span> <span class="n">qu</span><span class="-Symbol">&#39;on</span> <span class="n">trouve</span> <span class="n">des</span> <span class="nc">Poneys</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="o">;)</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">post</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)</span>
</span><span class='line'>            <span class="o">.</span><span class="n">param</span><span class="o">(</span><span class="s">&quot;baz&quot;</span><span class="o">,</span> <span class="s">&quot;${qix}&quot;</span><span class="o">)</span>
</span><span class='line'>            <span class="o">.</span><span class="n">multivaluedParam</span><span class="o">(</span><span class="s">&quot;foo&quot;</span><span class="o">,</span> <span class="nc">Seq</span><span class="o">(</span><span class="s">&quot;bar&quot;</span><span class="o">)))</span>
</span><span class='line'>            <span class="o">.</span><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">post</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">).</span><span class="n">multivaluedParam</span><span class="o">(</span><span class="s">&quot;foo&quot;</span><span class="o">,</span> <span class="s">&quot;${bar}&quot;</span><span class="o">))</span>
</span><span class='line'>            <span class="o">.</span><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">).</span><span class="n">queryParam</span><span class="o">(</span><span class="s">&quot;omg&quot;</span><span class="o">,</span> <span class="s">&quot;foo&quot;</span><span class="o">))</span>
</span><span class='line'>            <span class="o">.</span><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">).</span><span class="n">queryParam</span><span class="o">(</span><span class="s">&quot;omg&quot;</span><span class="o">,</span> <span class="s">&quot;${foo}&quot;</span><span class="o">))</span>
</span><span class='line'>            <span class="o">.</span><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">).</span><span class="n">queryParam</span><span class="o">(</span><span class="s">&quot;omg&quot;</span><span class="o">,</span> <span class="n">session</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="s">&quot;foo&quot;</span><span class="o">))</span>
</span><span class='line'>            <span class="o">.</span><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">).</span><span class="n">multivaluedQueryParam</span><span class="o">(</span><span class="s">&quot;omg&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;foo&quot;</span><span class="o">)))</span>
</span><span class='line'>            <span class="o">.</span><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">).</span><span class="n">multivaluedQueryParam</span><span class="o">(</span><span class="s">&quot;omg&quot;</span><span class="o">,</span> <span class="s">&quot;${foo}&quot;</span><span class="o">))</span>
</span><span class='line'>            <span class="o">.</span><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">).</span><span class="n">multivaluedQueryParam</span><span class="o">(</span><span class="s">&quot;omg&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;foo&quot;</span><span class="o">)))</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">uniformRandomSwitch</span><span class="o">(</span><span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)),</span> <span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Licorne&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)))</span>
</span><span class='line'>    <span class="o">.</span><span class="n">randomSwitch</span><span class="o">(</span>
</span><span class='line'>        <span class="mi">40</span><span class="n">d</span> <span class="o">-&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)),</span>
</span><span class='line'>        <span class="mi">50</span><span class="n">d</span> <span class="o">-&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Licorne&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)))</span>
</span><span class='line'>    <span class="o">.</span><span class="n">randomSwitch</span><span class="o">(</span><span class="mi">40</span><span class="n">d</span> <span class="o">-&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">exec</span><span class="o">(</span><span class="n">http</span><span class="o">(</span><span class="s">&quot;Catégorie Poney&quot;</span><span class="o">).</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)))</span>
</span><span class='line'>    <span class="o">.</span><span class="n">pause</span><span class="o">(</span><span class="n">pause2</span><span class="o">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这里说下randomSwitch这个方法，这个方法可以模拟负载均衡，比如上面40d和50d的两行代码，会有40%的几率执行上面一行代码，50%的几率执行下面一行代码。</p>

<h2>Question</h2>

<p>如果看过上面的示例代码代码，还不知道具体的api怎么用，可以到<a href="https://groups.google.com/d/forum/gatling">google group</a>上面的分组提问题，很快就有人回答你的问题。github上面的问题区是让开发提bug或者feature用的，所以尽量不要在上面提问题。</p>

<h2>Report</h2>

<p>下面是Gatling的报告截图，界面很漂亮，而且参数很齐全，包括全部的请求数，成功/失败的请求数，请求的最大/最小/平均响应时间等。</p>

<p><img src="/images/post/2014-2/gatling_report.png"></p>

<h2>Http &amp; JMS</h2>

<p>目前Gatling支持的协议不多，毕竟是一个轻量级的测试工具，目前只支持Http和JMS(以前用的时候还只是支持HTTP)，随着Gatling的发展，以后肯定会支持更多的协议。现在大部分的系统和应用都是提供http协议的api，所以基于http协议的测试也能满足大部分的测试场景了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[番茄工作法和Bullet journal笔记法]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/02/26/tomato-work-method-and-bullet-journal/"/>
    <updated>2014-02-26T20:31:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/02/26/tomato-work-method-and-bullet-journal</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2014-2/tomato_and_bullet_journal.jpg"></p>

<p>番茄工作法是一套时间管理方法，Bullet journal是一套笔记记录的方法，最近通过学习这2个方法来管理自己的时间，让自己战胜拖延症。</p>

<!--more-->


<p></p>

<h1>番茄工作法</h1>

<p>番茄工作法的整体思路就是将时间分割成一个个小时间段，每个时间段25分钟，在每个时间段里面排除所有干扰，集中精力完成自己制定的任务，让工作效率最大化。</p>

<h4>为什么叫番茄工作法</h4>

<p>番茄工作法是弗朗西斯科·西里洛于1992年创立的一种时间管理方法，通过一种外貌类似番茄的厨房定时器设置好25分钟，在25分钟内把任务做完，根据定时器的形状命名为番茄工作法。其实不一定要找一个像番茄一样的计时器，可以根据自己需要选择任意的计时器，只要有定时的功能就可以，现在手机都有这个功能，也可以使用手机来代替。</p>

<h4>如何实施</h4>

<ul>
<li>制定计划。找一张纸和一支笔，列出自己接下来的时间要完成的任务清单，每个任务后面可以画上需要一个或者多个番茄钟，这个是你预估此项任务要花费的时间。比如要开发某个功能，自己预估这项任务可能需要2～3个小时，那就在任务后面画上4～6个番茄钟，这个就是你的预估时间量。</li>
<li>排除干扰。在你开始番茄钟之前，请把干扰源去掉，比如邮箱、电话、手机等，把它们关掉或者调成静音，以便自己在番茄钟内工作时不受打扰。</li>
<li>开始工作。扭动番茄钟，将其设置为25分钟后响铃，然后开始集中精力做你的任务。如果中间想起另外一件更重要的事情，请不要中断手头的任务去做它，而要将该事情记录到你的任务清单里面，然后回过头来继续你的任务，直到番茄钟响起。</li>
<li>完成休息。当番茄钟响起的时候，停止手头的工作，在之前画在任务后面的番茄钟上划掉一个，表示你已经完成了一个番茄钟。然后休息5分钟，让自己在休息时间内充分放松，为下个番茄钟做好准备。</li>
</ul>


<p>按照以上的步骤循环进行，直到完成自己的任务。</p>

<h4>有什么好处</h4>

<p>首先番茄钟工作法可以让你更有效率地完成自己的工作任务，想象一下自己平时工作的时候经常会被别人打断，打断过后需要一段时间才能回复到原来的工作状态，这样很浪费时间。有的人会觉得整天忙忙碌碌的，但回想一下基本没有完成什么任务。</p>

<p>这里还要说一下遇到外部的干扰的情况，比如同事来找你问问题这种干扰，可以根据具体情况处理：</p>

<ul>
<li>跟同事说明自己在番茄钟内，请他在番茄钟完了后再找你;</li>
<li>如果事情比较重要，停下手头的任务，先帮他解决问题，然后重新开始一个番茄钟，继续完成刚才的任务;</li>
</ul>


<p>其次番茄工作法让你养成一个习惯，每当你扭开番茄钟开始计时的时候，身体会暗示你现在准备开始工作，使你进入全身心投入的状态，让你更好的完成任务。</p>

<p>再次番茄工作法会锻炼你的时间预估能力，每次你都会为自己的任务预估一个时间，可能开始的时候不准确，但是时间久了以后，就会慢慢让自己预估的时间与实际完成的时间相符了。</p>

<p>最后是番茄工作法会带给你成就感，每当你划掉一个番茄钟或者完成一个任务，就会让自己觉得今天自己没有浪费时间，会真的看到自己实实在在做完了哪些事情。</p>

<p>我自己也是刚学习番茄工作法，还在养成习惯中。我试用了3个星期，基本上将之前拖延的一些任务完成了，比如写blog，之前老是拖拉想放到以后再写，导致几个月都没有更新，现在基本上一个月可以写到3～4篇blog了。所以我觉得番茄工作法还是比较有用的。</p>

<h1>Bullet Journal笔记法</h1>

<p>Bullet Journal是由纽约艺术家Ryder Carroll发明的。这一快速笔记系统简单灵活，十分容易上手。这里有<a href="http://www.bulletjournal.com/">它的网站</a>，感兴趣的同学可以看一下。</p>

<p>Bullet Journal很简单，20分钟就可以学会，只需要一个空白笔记本和一支笔。</p>

<h4>目录</h4>

<p>首先在笔记本的前面几页写上目录标题，然后在开始记录任务的每一页下角写上页数，以后笔记有更新，就可以随时更新目录的内容。</p>

<h4>目标和日期</h4>

<p>在目录后面，开始记录当月的目标，在目标页前面一页写上当月的日期，每一行记录一个日期，以后如果有什么重要的事件完成了，就可以在日期后面写上备注。</p>

<h4>每日日记</h4>

<p>Bullet Journal最重要的部分就是当天的日记，有3种标志：</p>

<ul>
<li>勾选框表示要完成的任务</li>
<li>圆圈表示特定时间要完成事情，可以在后面备注时间</li>
<li>圆点表示备注，可以记录任何事情，包括你的想法。</li>
</ul>


<p><img src="/images/post/2014-2/bullet_journal.jpg"></p>

<p>这3种标志可以自由组合，比如勾选框下面可以有子勾选框，圆点，圆圈等，表示该项任务有子任务。根据自己需要灵活配置。</p>

<p>可能用文字描述比较难懂，不理解的同学可以看一下<a href="http://www.youtube.com/watch?v=GfRf43JTqY4">这里</a>的视频（youtube，需要翻墙），看完大概就可以理解了，Bullet Journal就是这么简单。它还可以配合番茄工作法一起工作，之前谈到番茄工作法也是需要列任务清单，我们就可以将任务清单用Bullet Journal的方式记录下来，然后进行操作。两者互相配合，效果更佳。</p>

<p>开始使用Bullet Journal的时候不需要买太好的笔记本，官网推荐的是米国一款感觉特别高级的笔记本，带小格子的，其实完全没有必要，只要找一本普通的笔记本就可以了（像我用的是公司发的笔记本，每年都会发一本，基本用不完，就拿来做Bullet Journal笔记本了），或者在淘宝上面买个差不多的，也就10～20块，还包邮哦亲～</p>
]]></content>
  </entry>
  
</feed>
