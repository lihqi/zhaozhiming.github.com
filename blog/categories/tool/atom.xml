<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tool | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/blog/categories/tool/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2018-04-22T18:54:33+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[保存并恢复你的tmux]]></title>
    <link href="http://zhaozhiming.github.io/blog/2015/11/22/save-and-restore-your-tmux/"/>
    <updated>2015-11-22T19:11:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2015/11/22/save-and-restore-your-tmux</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2015-11/tmux.jpg" width="400" height="350"></p>

<p><a href="https://tmux.github.io/">Tmux</a>是一个终端下的工具，可以方便地在一个终端窗口下进行分屏，配合vim可以打造任何IDE所需要的窗口模式，让你的生产力大大提升。介绍Tmux的文章网上有很多，所以我就不赘述了，今天介绍Tmux的一款工具，可以方便的保存Tmux的状态并在任何时候进行恢复。</p>

<!--more-->


<p></p>

<h2>为什么需要恢复这个工具</h2>

<p>Tmux虽然功能十分强大，但却不能像IDE一样保存已经定制好的窗口模式，每次电脑重启后，你需要重新划分你的终端屏幕。程序员都是比较懒的，为了不用每次重启机器都要重新设置一遍Tmux，我们找到了<a href="https://github.com/tmux-plugins/tmux-resurrect">tmux-resurrect</a>这个工具。在介绍这个工具之前，我们先介绍tmux的插件管理工具，因为tmux-resurrect推荐使用它来进行安装。</p>

<h2>Tmux插件管理工具</h2>

<p>Tmux也像Vim等其他软件一样可以通过安装插件来扩充其强大的功能，推荐的方式是使用Tmux的插件管理工具<a href="https://github.com/tmux-plugins/tpm">TPM</a>（Tmux Plugin Manager）来安装插件。安装TPM非常简单，参考其github工程的README文档就可以了。</p>

<p>安装了TPM之后，以后要安装Tmux插件就很方便了，首先在<code>~/tmux.conf</code>中写入你要安装的插件名：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">set</span> -g @plugin &amp;lsquo;&amp;hellip;&amp;rsquo;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后在tmux中按<code>前缀键+大写I</code>就可以提示你进行插件安装了，安装过程如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Already installed &amp;ldquo;tpm&amp;rdquo;                                                                                                                                                         <span class="o">[</span>0/0<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;TMUX environment reloaded.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Done, press ENTER to <span class="k">continue</span>.
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>tmux-resurrect</h2>

<p>安装完TPM后，我们再来安装tmux-resurrect，跟安装其他插件一样，先在<code>~/tmux.conf</code>下录入tmux-resurrect：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">set</span> -g @plugin &amp;lsquo;tmux-plugins/tmux-resurrect&amp;rsquo;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后按<code>前缀键+I</code>就可以了。</p>

<p>tmux-resurrect的使用非常简单，在Tmux窗口中按<code>前缀键+ctrl+s</code>就是保存你的tmux窗口，按<code>前缀键+ctrl+r</code>是恢复你的tmux窗口。以后只要在开机后，进入Tmux，然后用<code>前缀键+ctrl+r</code>就可以一键恢复你之前的tmux窗口了:&ndash;)</p>

<h2>tmux-sessionist</h2>

<p>刚用tmux-resurrect的同学可能还以为它只是保存Tmux当前一个窗口，其实它保存的是Tmux的所有窗口。那要如何切换Tmux的窗口呢？那就要用到另外一个Tmux的插件——<a href="https://github.com/tmux-plugins/tmux-sessionist">tmux-sessionist</a>了，它可以快速的切换Tmux之间的seesion窗口，安装之后通过<code>前缀键+g</code>就可以了，感兴趣的小伙伴赶紧试一试吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为什么我要使用Vim]]></title>
    <link href="http://zhaozhiming.github.io/blog/2015/08/09/why-i-use-vi/"/>
    <updated>2015-08-09T08:47:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2015/08/09/why-i-use-vi</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2015-8/vi.png" width="250" height="250"></p>

<p>之前做Java开发的时候一直使用IDE，因为Java的IDE工具开发的太好了，以致没有机会深入接触像<code>vi</code>和<code>emacs</code>之类的神编辑器，但最近转python让我有机会深入了解了<code>vi</code>，使用过后不仅觉得方便，而且被其强大深深所吸引。</p>

<!--more-->


<p></p>

<h2>为什么使用vi</h2>

<p>最早是使用Eclipse，然后转IntelliJ IDEA，可以看看我之前的这篇文章——<a href="http://zhaozhiming.github.io/blog/2014/10/09/why-intellij-idea-better-than-eclipse">《为什么Intellij-IDEA比Eclipse好》</a>，之前觉得使用IDEA效率已经很高了，熟悉快捷键的话可以完全不用鼠标进行编码。</p>

<p>其实Jetbarins(开发IDEA的公司)也有python的IDE——PyCharm，功能、操作和IDEA差不多，熟悉IDEA的人可以很快上手PyCharm。</p>

<p>但是作为一个程序员，我觉得如果没有深入使用过一款"神之编辑器"（vi或emacs）是有遗憾的，而且通过使用vi发现，IDE有的功能vi都可以有，通过vi的配置，可以将vi打造成任一种语言的IDE，也就是说，使用IDE功能是有限的，但是使用vi，你的编辑器功能是没有边界的，任何你想要的功能都可以通过安装插件或者自己开发插件来实现。</p>

<p>使用IDE你可能不用鼠标进行编码，但是使用vi你可以不用鼠标来操作整个操作系统，这就是vi的魅力，可以让你像弹钢琴一样优雅的编写代码，行云流水，酣畅淋漓。</p>

<p>最后为什么选vi不选emacs呢？因为公司都是vi党，用emacs怕被人打，还是用vi好了-_&ndash;#</p>

<h2>简明Vim练级攻略</h2>

<p>说实话，vi的学习曲线非常陡峭，但是经过前人的积累，已经有不少好用的vi插件和工具帮助我们尽快的熟悉vi，省去自己配置vi的烦恼，剩下的就只有不断地使用vi，以增强vi的熟练程度，做到得心应手。</p>

<p>这里要推荐陈皓老师翻译整理的这篇文章——<a href="http://coolshell.cn/articles/5426.html">简明Vim练级攻略</a>，里面详细介绍了从入门到高级的vi使用命令，分阶段让学习者掌握vi的编辑命令，让你从一大堆繁杂的vi命令中了解到真正实用的vi指令。</p>

<p>还是之前说的，文章只是给你指明方向，实际的练习才是最重要的，要熟悉vi就要每天都使用vi写写东西，如果忘记了命令再重温一下文章的内容，这样不断地强化精神和肌肉的记忆才能掌握好vi。</p>

<h2><a href="https://github.com/wklken/k-vim">k-vim</a></h2>

<p>这里要推荐k-vim这个国人打造的vim配置，里面集成了各种强大的vi插件，功能堪比甚至远超各种IDE，其主要用于python开发，也支持一些基础的前端开发，这里主要讲一下里面配置的一些强大的插件。</p>

<h4>YouCompleteMe</h4>

<p>很多IDE都有代码自动补全的功能，通过这个插件，vi也可以做到这一点，这个插件还可以配置各种语言的自动补全提示。</p>

<h4>gmarik/vundle</h4>

<p>像pip，npm一样，vundle可以管理vi的插件，通过简单的install/uninstall命令可以帮你安装你想要的vi插件。</p>

<h4>scrooloose/syntastic</h4>

<p>IDE有语法错误之类的检查，这个vi插件实现了类似的功能，并且可以配置各种语言的语法检查。</p>

<p>还有其他很多强大的插件，比如工程目录结构菜单，代码模板，源码跳转等。总之，使用k-vim可以省却你大部分配置vim的时间，让你得以马上体验vi的强大。</p>

<h2><a href="https://tmux.github.io">tmux</a></h2>

<p>tmux是一个terminal管理软件，通过tmux配合vi可以使开发工作更加简单快捷，网上有很多介绍tmux的文章，我就不多介绍了，附一下是我的tmux配置，也是从网上查的一份配置，使用之后觉得还不错，推荐给大家，这里使用<code>ctl+A</code>作为tmux前缀，相对默认的<code>ctl+B</code>来说按键相对要近一些。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>tmux.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;&amp;mdash; base &amp;mdash;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;unbind C-b
</span><span class='line'><span class="nb">set</span> -g prefix C-a
</span><span class='line'><span class="nb">set</span> -g status-keys vi
</span><span class='line'>setw -g mode-keys vi
</span><span class='line'><span class="nb">bind</span> : <span class="nb">command</span>-prompt
</span><span class='line'><span class="nb">bind </span>r <span class="nb">source</span>-file ~/.tmux.conf <span class="se">\;</span> display-message &amp;ldquo;Reloading..&amp;rdquo;.
</span><span class='line'><span class="nb">set</span> -g default-terminal &amp;ldquo;screen-256color&amp;rdquo;
</span><span class='line'><span class="nb">bind</span>-key a send-prefix&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;&amp;mdash; windown &amp;mdash;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bind s split-window -h -c &amp;ldquo;#<span class="o">{</span>pane_current_path<span class="o">}</span>&amp;rdquo;
</span><span class='line'><span class="nb">bind </span>v split-window -v -c &amp;ldquo;#<span class="o">{</span>pane_current_path<span class="o">}</span>&amp;rdquo;
</span><span class='line'><span class="nb">bind</span>-key c  new-window -c &amp;ldquo;#<span class="o">{</span>pane_current_path<span class="o">}</span>&amp;rdquo;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bind h <span class="k">select</span>-pane -L
</span><span class='line'><span class="nb">bind </span>j <span class="k">select</span>-pane -D
</span><span class='line'><span class="nb">bind </span>k <span class="k">select</span>-pane -U
</span><span class='line'><span class="nb">bind </span>l <span class="k">select</span>-pane -R&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bind ^k resizep -U 10
</span><span class='line'><span class="nb">bind</span> ^j resizep -D 10
</span><span class='line'><span class="nb">bind</span> ^h resizep -L 10
</span><span class='line'><span class="nb">bind</span> ^l resizep -R 10
</span><span class='line'><span class="nb">bind</span> ^u swapp -U
</span><span class='line'><span class="nb">bind</span> ^d swapp -D&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bind u choose-session
</span><span class='line'><span class="nb">bind </span>o choose-window
</span><span class='line'><span class="nb">bind</span> <span class="se">\ </span>last
</span><span class='line'><span class="nb">bind </span>q killp&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bind-key -n C-S-Left swap-window -t -1
</span><span class='line'><span class="nb">bind</span>-key -n C-S-Right swap-window -t +1
</span><span class='line'><span class="nb">set</span> -g base-index 1
</span><span class='line'>setw -g pane-base-index 1
</span><span class='line'><span class="nb">set</span> -g <span class="nb">history</span>-limit 5000&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;pane border&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;set -g pane-border-fg black
</span><span class='line'><span class="nb">set</span> -g pane-border-bg white
</span><span class='line'><span class="nb">set</span> -g pane-active-border-fg black
</span><span class='line'><span class="nb">set</span> -g pane-active-border-bg &amp;lsquo;#afd787&amp;rsquo;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;&amp;mdash; <span class="nb">command</span> &amp;mdash;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bind m <span class="nb">command</span>-prompt &amp;ldquo;splitw &amp;lsquo;exec man %%&amp;rsquo;&amp;rdquo;
</span><span class='line'><span class="nb">bind </span>space copy-mode
</span><span class='line'><span class="nb">bind</span> -t vi-copy v begin-selection
</span><span class='line'><span class="nb">bind</span> -t vi-copy y copy-selection
</span><span class='line'><span class="nb">bind</span> -t vi-copy C-v rectangle-toggle
</span><span class='line'><span class="nb">bind</span> <span class="o">]</span> paste-buffer&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;&amp;mdash; statusbar &amp;mdash;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;set -g status-justify centre
</span><span class='line'><span class="nb">set</span> -g status-right-attr bright
</span><span class='line'><span class="nb">set</span> -g status-right &amp;ldquo;%H:%M %a %m-%d&amp;rdquo;
</span><span class='line'><span class="nb">set</span> -g status-bg default
</span><span class='line'><span class="nb">set</span> -g status-fg &amp;lsquo;#afd787&amp;rsquo;
</span><span class='line'>setw -g window-status-current-attr bright
</span><span class='line'>setw -g window-status-current-fg black
</span><span class='line'>setw -g window-status-current-bg &amp;lsquo;#afd787&amp;rsquo;
</span><span class='line'><span class="nb">set</span> -g status-utf8 on
</span><span class='line'><span class="nb">set</span> -g status-interval 1
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>vi学习</h2>

<ul>
<li>简明Vim练级攻略只是介绍了一些比较实用和常用的命令，如果在实际使用过程中发现一些不清楚的vi操作，最好的办法就是通过googl搜索找到答案，并将答案记录下来以免下次忘记。</li>
<li>在从IDE过渡到vi的期间，可以用IDE完成一些比较紧急的工作，其他的就使用vi来完成。</li>
<li>在使用vi的过程中，可以模拟IDE的操作来了解更多vi的命令，比如IDE可以用<code>ctl+w</code>选中整个单词，在vi里面要如何操作？这样慢慢一步一步地将vi的命令掌握，并替换掉你的IDE。</li>
</ul>

]]></content>
  </entry>
  
</feed>
