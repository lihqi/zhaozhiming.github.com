<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: ubuntu | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/tags/ubuntu/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2015-09-15T14:32:17+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Ubuntu12.04上安装Ceph Calamari]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/10/28/install-ceph-calamari-on-ubuntu/"/>
    <updated>2014-10-28T15:56:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/10/28/install-ceph-calamari-on-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2014-10/calamari.png"></p>

<p>Calamari是<a href="http://ceph.com/">Ceph</a>的一个监控和管理工具，它提供了一些定义好的REST API。Calamari包括服务端和客户端，服务端是使用Python的web框架<a href="https://www.djangoproject.com/">Django</a>开发的，提供了供客户端调用的REST API接口。客户端使用了<a href="http://nodejs.org/">NodeJS</a>,<a href="https://angularjs.org/">AngularJS</a>,<a href="http://getbootstrap.com/">Bootstrap3</a>，每个模块可以独立部署更新，其界面十分简洁清晰，几乎涵盖了所有监控要求。</p>

<p>下面介绍一下Calamari在Ubuntu上面的安装过程。</p>

<!--more-->


<h2>环境准备</h2>

<ul>
<li>安装VitrualBox和Vagrant，Vagrant的使用可以参照我之前的blog——<a href="http://zhaozhiming.github.io/blog/2014/10/02/ceph-install-with-vagrant-and-ansible">使用Vagrant和Ansible搭建Ceph环境</a>。</li>
<li>下载ubuntu12.04的box文件——<a href="https://vagrantcloud.com/discover/featured">box文件下载地址</a>，我们在虚拟机中安装calamari，不污染我们的本机环境。</li>
</ul>


<h2>生成Calamari安装文件</h2>

<h3>生成server安装文件</h3>

<ul>
<li>下载calamari工程</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir calamari-node
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>calamari-node
</span><span class='line'><span class="nv">$ </span>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/ceph/calamari.git&quot;</span>&gt;https://github.com/ceph/calamari.git&lt;/a&gt;
</span><span class='line'><span class="nv">$ </span>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/ceph/Diamond.git&quot;</span>&gt;https://github.com/ceph/Diamond.git&lt;/a&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>使用vagrant生成server安装文件</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>calamari/vagrant/precise-build&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;首先要保证你的vagrant已经导入名字为precise的box&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>vagrant up
</span><span class='line'>&amp;hellip;
</span><span class='line'>&amp;hellip;
</span><span class='line'>Copying salt minion config to vm.
</span><span class='line'>Checking <span class="k">if </span>salt-minion is installed
</span><span class='line'>salt-minion was not found.
</span><span class='line'>Checking <span class="k">if </span>salt-call is installed
</span><span class='line'>salt-call was not found.
</span><span class='line'>Bootstrapping Salt&amp;hellip; <span class="o">(</span>this may take a <span class="k">while</span><span class="o">)</span>
</span><span class='line'>Salt successfully configured and installed!
</span><span class='line'>run_overstate <span class="nb">set </span>to false. Not running state.overstate.
</span><span class='line'>run_highstate <span class="nb">set </span>to false. Not running state.highstate.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>vagrant ssh
</span><span class='line'><span class="nv">$ </span>sudo salt-call state.highstate
</span><span class='line'>&amp;hellip;
</span><span class='line'>&amp;hellip;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;Summary&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Succeeded: 11&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;Failed: 0&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Total: 11
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>这里的虚拟机将我们创建的根目录<code>calamari-node</code>和虚拟机中的<code>/git</code>目录关联起来了，我们可以通过在查看这2个目录中的任意一个来查看安装文件是否已经生成。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;查看calamari-node目录&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span><span class="nb">cd </span>calamari-node
</span><span class='line'><span class="nv">$ </span>ls -l
</span><span class='line'>drwxr-xr-x  28 zhaozhiming  staff   952 Oct 20 16:16 Diamond
</span><span class='line'>drwxr-xr-x  32 zhaozhiming  staff  1088 Oct 20 16:14 calamari
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  18883769 Oct 21 15:58 calamari-repo-precise.tar.gz
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  16417474 Oct 21 15:58 calamari-server_1.2.1-68-gfdeb0f7_amd64.deb
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff    307478 Oct 21 15:58 diamond_3.4.67_all.deb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;查看虚拟机的/git目录&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span><span class="nb">cd </span>calamari-node/calamari/vagrant/precise-build
</span><span class='line'><span class="nv">$ </span>vagrant ssh
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /git
</span><span class='line'><span class="nv">$ </span>ls -l
</span><span class='line'>drwxr-xr-x  28 zhaozhiming  staff   952 Oct 20 16:16 Diamond
</span><span class='line'>drwxr-xr-x  32 zhaozhiming  staff  1088 Oct 20 16:14 calamari
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  18883769 Oct 21 15:58 calamari-repo-precise.tar.gz
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  16417474 Oct 21 15:58 calamari-server_1.2.1-68-gfdeb0f7_amd64.deb
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff    307478 Oct 21 15:58 diamond_3.4.67_all.deb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>从上面可以看到安装文件已经生成好了，2个deb文件分别是server和监控服务的安装文件，tar.gz文件是安装服务所需的依赖包安装文件集合，如果是连网安装的话，这个tar.gz文件不需要用到。</li>
</ul>


<h3>生成client安装文件</h3>

<ul>
<li>下载calamari-client工程</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>calamari-node
</span><span class='line'><span class="nv">$ </span>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/ceph/calamari-clients.git&quot;</span>&gt;https://github.com/ceph/calamari-clients.git&lt;/a&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>使用vagrant生成client安装文件</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>calamari-client/vagrant/precise-build/
</span><span class='line'><span class="nv">$ </span>vagrant up
</span><span class='line'>&amp;hellip;
</span><span class='line'>&amp;hellip;
</span><span class='line'>Copying salt minion config to vm.
</span><span class='line'>Checking <span class="k">if </span>salt-minion is installed
</span><span class='line'>salt-minion was not found.
</span><span class='line'>Checking <span class="k">if </span>salt-call is installed
</span><span class='line'>salt-call was not found.
</span><span class='line'>Bootstrapping Salt&amp;hellip; <span class="o">(</span>this may take a <span class="k">while</span><span class="o">)</span>
</span><span class='line'>Salt successfully configured and installed!
</span><span class='line'>run_overstate <span class="nb">set </span>to false. Not running state.overstate.
</span><span class='line'>run_highstate <span class="nb">set </span>to false. Not running state.highstate.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>vagrant ssh
</span><span class='line'><span class="nv">$ </span>sudo salt-call state.highstate
</span><span class='line'>&amp;hellip;
</span><span class='line'>&amp;hellip;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;Summary&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Succeeded: 13&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;Failed: 0&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Total: 13
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>查看生成的安装文件，可以看到有1个deb文件和一个tar.gz文件，ubuntu的话直接使用deb文件进行安装就可以了，tar.gz文件不需要。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>calamari-node
</span><span class='line'><span class="nv">$ </span>ls -l
</span><span class='line'>drwxr-xr-x  28 zhaozhiming  staff   952 Oct 20 16:16 Diamond
</span><span class='line'>drwxr-xr-x  32 zhaozhiming  staff  1088 Oct 20 16:14 calamari
</span><span class='line'>drwxr-xr-x  22 zhaozhiming  staff      748 Oct 20 16:46 calamari-clients
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  18883769 Oct 21 15:58 calamari-repo-precise.tar.gz
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff  16417474 Oct 21 15:58 calamari-server_1.2.1-68-gfdeb0f7_amd64.deb
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 zhaozhiming  staff    307478 Oct 21 15:58 diamond_3.4.67_all.deb
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;   1 zhaozhiming  staff  1711253 Oct 21 12:38 calamari-clients-build-output.tar.gz
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;   1 zhaozhiming  staff  1705364 Oct 21 12:38 calamari-clients_1.2.1.1-29-g3790c24_all.deb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>安装Calamari</h2>

<ul>
<li>创建一个ubuntu的虚拟机来安装calamari，首先在根目录下创建一个Vagrantfile文件。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>calamari-node
</span><span class='line'><span class="nv">$ </span>touch Vagrantfile
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>Vagrantfile文件内容如下，注意要使用绑定好的IP。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;ndash;&lt;em&gt;&amp;ndash; mode: ruby &amp;ndash;&lt;/em</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;vi: set ft=ruby :&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Vagrantfile</span> <span class="no">API</span><span class="o">/</span><span class="n">syntax</span> <span class="n">version</span><span class="o">.</span> <span class="no">Don</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="n">t</span> <span class="n">touch</span> <span class="k">unless</span> <span class="n">you</span> <span class="n">know</span> <span class="n">what</span> <span class="n">you</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="n">re</span> <span class="n">doing!</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;VAGRANTFILE_API_VERSION = &amp;ldquo;2&amp;rdquo;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="no">VAGRANTFILE_API_VERSION</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">precise64</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  config.vm.define &amp;ldquo;manager&amp;rdquo; do |manager|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">manager</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">hostname</span> <span class="o">=</span> <span class="s2">&quot;manager-env&quot;</span>
</span><span class='line'><span class="n">manager</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;192.168.26.10&quot;</span>
</span><span class='line'><span class="n">manager</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>
</span><span class='line'>  <span class="n">vb</span><span class="o">.</span><span class="n">memory</span> <span class="o">=</span> <span class="mi">512</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>启动虚拟机并登陆</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>vagrant up
</span><span class='line'><span class="nv">$ </span>vagrant ssh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在虚拟机上安装salt</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install python-software-properties
</span><span class='line'><span class="nv">$ </span>sudo add-apt-repository ppa:saltstack/salt
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install salt-master
</span><span class='line'><span class="nv">$ </span>sudo apt-get install salt-minion
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在虚拟机上安装所需依赖包</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y apache2 libapache2-mod-wsgi libcairo2 supervisor python-cairo libpq5 postgresql
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>安装calamari</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /vagrant
</span><span class='line'><span class="nv">$ </span>sudo dpkg -i calamari-server&lt;em&gt;.deb calamari-clients&lt;/em&gt;.deb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>初始化calamari服务，这里会要求你输入用户名、邮箱、密码，这个用户名密码是在浏览器访问calamari服务需要的。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo calamari-ctl initialize
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Loading configuration..
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Starting/enabling salt&amp;hellip;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Starting/enabling postgres&amp;hellip;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Initializing database&amp;hellip;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Initializing web interface&amp;hellip;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> You will now be prompted <span class="k">for </span>login details <span class="k">for </span>the administrative user account. This is the account you will use to log into the web interface once setup is complete.
</span><span class='line'>Username <span class="o">(</span>leave blank to use &amp;lsquo;root&amp;rsquo;<span class="o">)</span>:
</span><span class='line'>Email address: &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#x74;&amp;#111;&amp;#x3a;&amp;#x6b;&amp;#97;&amp;#114;&amp;#97;&amp;#x6e;&amp;#x2e;&amp;#x73;&amp;#x69;&amp;#x6e;&amp;#x67;&amp;#104;&amp;#64;&amp;#x63;&amp;#115;&amp;#x63;&amp;#x2e;&amp;#x66;&amp;#x69;&quot;</span>&gt;&amp;#x6b;&amp;#x61;&amp;#x72;&amp;#97;&amp;#x6e;&amp;#46;&amp;#115;&amp;#105;&amp;#110;&amp;#103;&amp;#x68;&amp;#64;&amp;#99;&amp;#115;&amp;#99;&amp;#46;&amp;#102;&amp;#x69;&lt;/a&gt;
</span><span class='line'>Password:
</span><span class='line'>Password <span class="o">(</span>again<span class="o">)</span>:
</span><span class='line'>Superuser created successfully.
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Starting/enabling services&amp;hellip;
</span><span class='line'><span class="o">[</span>INFO<span class="o">]</span> Restarting services&amp;hellip; &amp;ndash; See more at: &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://ceph.com/category/calamari/#sthash.qUtbU0mX.dpuf&quot;</span>&gt;http://ceph.com/category/calamari/#sthash.qUtbU0mX.dpuf&lt;/a&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>登陆浏览器，输入虚拟机的ip(比如<a href="http://192.168.26.10">http://192.168.26.10</a>)，可以看到如下页面。</li>
</ul>


<p><img src="/images/post/2014-10/calamari-login.png"></p>

<ul>
<li>输入刚才设置的用户名密码后，可以看到calamari提示你进行ceph集群配置。</li>
</ul>


<p><img src="/images/post/2014-10/calamari-first.png"></p>

<h2>Ceph集群配置监控服务</h2>

<h3>配置ceph集群</h3>

<ul>
<li>登陆其中一台ceph集群机器(这里假设ceph集群都是ubuntu环境)，安装监控服务。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo dpkg -i diamond_3.4.67_all.deb <span class="c">#deb文件是之前生成server安装文件时一起生成的，需要将其先考到ceph集群机器上</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>创建默认的监控配置文件</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo mv /etc/diamond/diamond.conf.example /etc/diamond/diamond.conf
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>安装salt-minion服务</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install python-software-properties
</span><span class='line'><span class="nv">$ </span>sudo add-apt-repository ppa:saltstack/salt
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install salt-minion
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在<code>/etc/hosts</code>文件中增加calamari服务器的映射关系</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/etc/hosts </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&amp;hellip;
</span><span class='line'>&amp;hellip;
</span><span class='line'>192.168.26.10 ceph-calamari
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>修改salt-minion的配置文件<code>/etc/salt/minion</code>，将master指向calamari服务器</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/etc/salt/minion </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&amp;hellip;
</span><span class='line'>master: ceph-calamari
</span><span class='line'>&amp;hellip;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>重启服务</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo service salt-minion restart&lt;br/&gt;
</span><span class='line'><span class="nv">$ </span>sudo service diamond restart
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在所有的ceph集群机器上重复以上的步骤。</li>
</ul>


<h3>在calamari服务上添加ceph集群机器</h3>

<ul>
<li>查看salt-key</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo salt-key -L
</span><span class='line'>Accepted Keys:
</span><span class='line'>Unaccepted Keys:
</span><span class='line'>ceph-mon0
</span><span class='line'>ceph-mon1
</span><span class='line'>ceph-mon2
</span><span class='line'>ceph-osd0
</span><span class='line'>ceph-osd1
</span><span class='line'>ceph-osd2
</span><span class='line'>Rejected Keys:
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>添加ceph集群机器到calamari</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo salt-key -A
</span><span class='line'>The following keys are going to be accepted:
</span><span class='line'>Unaccepted Keys:
</span><span class='line'>ceph-mon0
</span><span class='line'>ceph-mon1
</span><span class='line'>ceph-mon2
</span><span class='line'>ceph-osd0
</span><span class='line'>ceph-osd1
</span><span class='line'>ceph-osd2
</span><span class='line'>Proceed? <span class="o">[</span>n/Y<span class="o">]</span> y
</span><span class='line'>Key <span class="k">for </span>minion ceph-mon0 accepted.
</span><span class='line'>Key <span class="k">for </span>minion ceph-mon1 accepted.
</span><span class='line'>Key <span class="k">for </span>minion ceph-mon2 accepted.
</span><span class='line'>Key <span class="k">for </span>minion ceph-osd0 accepted.
</span><span class='line'>Key <span class="k">for </span>minion ceph-osd1 accepted.
</span><span class='line'>Key <span class="k">for </span>minion ceph-osd2 accepted.
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>再次查看salt-key，可以看到所有节点都已添加。</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo salt-key -L
</span><span class='line'>Accepted Keys:
</span><span class='line'>ceph-mon0
</span><span class='line'>ceph-mon1
</span><span class='line'>ceph-mon2
</span><span class='line'>ceph-osd0
</span><span class='line'>ceph-osd1
</span><span class='line'>ceph-osd2
</span><span class='line'>Unaccepted Keys:
</span><span class='line'>Rejected Keys:
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>在浏览器中再次登陆calamari服务，可以看到已经能监控ceph集群的信息。</li>
</ul>


<p><img src="/images/post/2014-10/calamari.png"></p>

<p><img src="/images/post/2014-10/calamari-page1.png"></p>

<p><img src="/images/post/2014-10/calamari-page2.png"></p>

<p><img src="/images/post/2014-10/calamari-page3.png"></p>

<h2>参考资料</h2>

<ul>
<li>文档1：<a href="http://calamari.readthedocs.org/en/latest/operations/index.html">http://calamari.readthedocs.org/en/latest/operations/index.html</a></li>
<li>文档2：<a href="http://calamari.readthedocs.org/en/latest/operations/index.html">http://ceph.com/category/calamari/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在ubunut下使用pycharm和eclipse进行python远程调试]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/04/13/python-remote-debug-setting-by-pycharm-and-eclipse-in-ubuntu/"/>
    <updated>2014-04-13T15:54:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/04/13/python-remote-debug-setting-by-pycharm-and-eclipse-in-ubuntu</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2014-4/pycharm_and_eclipse.jpg"></p>

<p>我比较喜欢Pycharm，因为这个是JetBrains公司出的python IDE工具，该公司下的java IDE工具——IDEA，无论从界面还是操作上都甩eclipse几条街，但项目组里有些人使用eclipse比较久了，一时让他们转pycharm比较困难，所以还是两边的设置都介绍一下吧。</p>

<!--more-->


<p></p>

<h2>pycharm远程调试</h2>

<p>pycharmd的远程调试比eclipse的简单多了，而且调试程序也比较稳定，不像eclipse那样容易出一些莫名其妙的问题，步骤如下。</p>

<ol>
<li>将pycharm安装目录下的pycharm-debug.egg文件拷贝到远程机器上（如果是python3的话就拷贝pycharm-debug-py3k.egg文件）。</li>
<li>在远程机器上安装pycharm-debug.egg，安装命令： <code>easy_install pycharm-debug.egg</code>。</li>
<li><p>在pycharm中设置断点监听配置。<br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-1.png"><br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-2.png"><br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-3.png"></p></li>
<li><p>启动调试监听程序。<br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-4.png"><br/>
<img src="/images/post/2014-4/pycharm-debug/pycharm-5.png"></p></li>
<li><p>在远程机器上启动服务并发起http请求。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-10.png"></p></li>
<li><p>pycharm监听到请求会进入断点。
<img src="/images/post/2014-4/pycharm-debug/pycharm-6.png"></p></li>
</ol>


<p>更多关于pycharm远程调试的信息可以参阅<a href="http://www.jetbrains.com/pycharm/webhelp/remote-debugging.html">这里</a>。</p>

<h2>eclipse远程调试</h2>

<p>使用eclipse进行python远程调试，需要先在ubuntu下面安装eclipse和eclipse的python插件PyDev。</p>

<ul>
<li>Eclipse安装比较简单，直接解压下载后的eclipse包即可使用。</li>
<li><p>PyDev可以按照<a href="http://pydev.org/manual_101_install.html">官网的向导</a>进行安装。<br/>
安装完后按照下面的步骤进行远程调试。</p></li>
<li><p>在window->Preperences->PyDev->Debug中，设置debug端口，比如12306。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-1.png"></p></li>
<li><p>新增PyDev视图。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-2.png"><br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-3.png"></p></li>
<li><p>在Pydev试图中增加remote debug菜单。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-4.png"><br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-5.png"></p></li>
<li><p>在远程机器的源码里面添加调试代码和断点。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-6.png"></p></li>
<li><p>断点设置语句：<br/>
<code>pydevd.settrace('192.168.8.128', port=12306, stdoutToServer=True, stderrToServer=True)</code><br/>
注意：这里的ip是指设置了调试监听的机器ip。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-7.png"></p></li>
<li><p>通过Pydev菜单打开调试监听。<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-8.png"><br/>
开始监听显示信息如下：<br/>
<img src="/images/post/2014-4/eclipse-debug/eclipse-9.png"></p></li>
<li><p>启动远程服务并发起http请求。
<img src="/images/post/2014-4/eclipse-debug/eclipse-10.png"></p></li>
<li><p>Pydev监听到请求后就会进入断点。
<img src="/images/post/2014-4/eclipse-debug/eclipse-11.png"></p></li>
</ul>


<p>更多远程调试的内容可以参照Pydev的<a href="http://pydev.org/manual_adv_remote_debugger.html">官网步骤</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装win7和ubuntu双系统]]></title>
    <link href="http://zhaozhiming.github.io/blog/2012/04/16/install-windows-and-ubuntu-os-at-one-computer/"/>
    <updated>2012-04-16T16:53:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2012/04/16/install-windows-and-ubuntu-os-at-one-computer</id>
    <content type="html"><![CDATA[<p>最近买了新的笔记本电脑，发现新买的电脑上面安装的是win7用户版，在网上查了一下这个版本的win7是功能最少的。。。另外又发现偌大的500G硬盘居然只给分成2个区，每个250。。。各种不爽，于是决定格式化硬盘重新安装系统。</p>

<!--more-->


<p><strong>1.安装win7</strong></p>

<p>在网上找了下win7的iso映像，有各种版本，说是旗舰版的win7功能是比较多比较好的。另外目前的cpu都是64位的，所以我打算安装64位的系统，64位系统和32位最大区别是可以支持4G以上的内存，刚好我买电脑的时候加了根内存条，现在总内存是6G，所以64位旗舰版的win7最满足我的需求了：）</p>

<p>我下载的是青苹果的一个iso镜像，下载下来之后刻录成启动光盘，然后用光盘启动系统，发现里面只有winPE选项有用，其他选项都是废的。。。进入PE后，用里面的工具重新分了下区，然后用ghost安装了win7。这个版本的镜像里面没有offic软件，没办法只好上网找了office2007，找到一个石油学院的office iso镜像，兼容win7 64位，又免序列号的。安装成功之后将C盘系统用ghost克隆了一个备份保存，win7安装完成。</p>

<p><strong>2.安装ubuntu</strong></p>

<p>开始我安装的是ubuntu11，用的是以前的安装盘，这里纠结了一下是用wubi装还是正规安装，网上说是wubi安装属体验系统，功能可能不全，最后用ubuntu的启动光盘正常安装了ubuntu11。</p>

<p>安装ubuntu时，开始有3个选项，一是跟win7一起安装，一个是替代wiin7，一个是自定义。看了网上攻略我选择了自定义，选择自定义时要自己划分ubuntu分区。我划分了3个，一个是主分区，这个分区相当与windows的系统C盘，大小10G，挂载点“/”。第二个是交换空间，相当是win7的虚拟内存空间，我划分了4G。最后一个是home区，这个相当与windows系统的其他分区（比如D盘，E盘。。。)，我划分了20个G，挂载点是“/home"。</p>

<p>安装完后重启系统，就可以看到ubuntu的启动引导菜单了。如果你想将win7放在菜单首位，可以进入ubuntu系统修改/boot/grub/grub.cfg文件，将里面的win7菜单移到ubuntu菜单前面就可以了。</p>

<p><strong>3.重装ubuntu</strong></p>

<p>后来发现ubuntu11上网网速极慢，查了很多都不知道是哪里出问题，就重新下载了ubuntu12，安装过程与上面一样。安装完成之后重启电脑发现ubuntu引导目录不见了，要重新做ubuntu的菜单引导。</p>

<p>先用ubuntu的启动光盘进入试用版ubuntu，然后打开终端，输入下面命令查询ubuntu的安装区，我的是sda9。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo fdisk -l
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后创建了一个临时目录，这个目录是为了后面mount ubuntu启动分区用的，命令如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mkdir /media/tmpdir
</span><span class='line'>mount  /dev/sda8  /media/tmpdir
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>接下来是最重要的一步，输入命令下面命令：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo grub-install &amp;mdash;root-directory<span class="o">=</span>/media/tmpdir /dev/sda
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>注意，这里就是sda，后面不要写成sda9，如果显示no error report，则表示基本成功了。然后保存重启系统，会发现ubuntu的菜单已经有了，但是看起来比较乱，版本信息也不是安装的系统版本信息，所以接下来进入ubuntu系统，打开终端，输入：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo update-grub2
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>完了之后再次重启系统就会发现ubuntu正常的启动引导菜单了。如果想把win放在前面，就照之前说的方法改下ubuntu的配置文件就OK了。</p>

<p>就这样折腾了一个星期，最后终于把系统都装好了，好累。。。不过也学到了很多系统知识。下次再装系统就轻车熟路了：）</p>
]]></content>
  </entry>
  
</feed>
