<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: idea | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/tags/idea/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2016-12-13T11:25:35+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[让你的安卓开发更容易(一)——Intellij IDEA]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/08/31/make-your-android-dev-life-easy-part-1/"/>
    <updated>2014-08-31T10:59:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/08/31/make-your-android-dev-life-easy-part-1</id>
    <content type="html"><![CDATA[<p>{% img /images/post/2014-8/intellijidea_android.gif %}</p>

<p>{% blockquote 孔子 ——《春秋》 %}
工欲善其事，必先利其器
{% endblockquote %}</p>

<p>介绍一下安卓开发的一些好用工具，可以让你的开发事半功倍。如果你是一个安卓新手，那么准备一套高效率的开发工具，会让你从一开始就养成使用好工具的习惯，从开始就比别人更快；如果你是一名安卓开发高手，也可以看看这些工具，说不定你已经在使用其中的一些工具了。</p>

<!--more-->


<h2>Intellij IDEA</h2>

<p>虽然IntelliJ IDEA是一款收费的软件，但收费有它收费的道理，跟eclipse相比，它多了更多重构，代码错误提示，与更多工具集成的功能。IntelliJ IDEA被认为是当前Java开发效率最快的IDE工具，它集成了开发过程中实用的众多功能，几乎可以不用鼠标可以方便的完成你要做的任何事情，最大程度的加快开发的速度。简单而又功能强大。</p>

<p>从版本10开始，IntelliJ IDEA就集成了Android的开发功能，发展到现在版本13，不仅具备了流畅开发Android项目的能力，而且还集成了最新的构建工具Gradle，Android lint等工具。</p>

<h3>Android Hello World</h3>

<p>现在我们使用IntelliJ IDEA来创建一个使用Gradle构建的Android项目。</p>

<ul>
<li>首先点击创建新工程，在左边的项目类型栏中选择<code>Android</code>，可以看到右边有4个选项可以选，我们选择<code>Gradle: Android Mondule</code>，然后点击下面的Next;</li>
</ul>


<p>{% img /images/post/2014-8/idea-android-project-1.png %}</p>

<ul>
<li>进入项目信息配置页面，可以看到有如下的选项，填写后点击Next；

<ul>
<li>Application name: 应用名</li>
<li>Module name: 模块名</li>
<li>Package name: 包名</li>
<li>Minimum required SDK: 可支持的最小Android SDK版本</li>
<li>Target SDK: 可支持的最大Android SDK版本</li>
<li>Compile with: 用哪个Android SDK版本编译</li>
<li>Theme: app主题，全黑，全白，半黑半百，是否要GridLayou，是否要action bar等</li>
</ul>
</li>
</ul>


<p>{% img /images/post/2014-8/idea-android-project-2.png %}</p>

<ul>
<li>选择main_activity的样式，有9种可以选择，样式的效果在右边可以预览，我们可以选择最简单的<code>Blank Activity</code>，选择好了Next；</li>
</ul>


<p>{% img /images/post/2014-8/idea-android-project-3.png %}</p>

<ul>
<li>填写Activity名字和对应的展示层layout名字，填完Next；</li>
</ul>


<p>{% img /images/post/2014-8/idea-android-project-4.png %}</p>

<ul>
<li>填写工程名和选择工程文件路径，注意最下面的<code>Project format</code>，有2种格式，一种是<code>.idea</code>文件夹，一个是ipr文件，选择ipr文件的方式可以减少很多文件的生成，最后Finish；</li>
</ul>


<p>{% img /images/post/2014-8/idea-android-project-5.png %}</p>

<p>生成的代码如下:</p>

<p>{% codeblock MainActivity.java lang:java %}
public class MainActivity extends ActionBarActivity {</p>

<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
}


@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.main, menu);
    return true;
}

@Override
public boolean onOptionsItemSelected(MenuItem item) {
    // Handle action bar item clicks here. The action bar will
    // automatically handle clicks on the Home/Up button, so long
    // as you specify a parent activity in AndroidManifest.xml.
    int id = item.getItemId();
    if (id == R.id.action_settings) {
        return true;
    }
    return super.onOptionsItemSelected(item);
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>{% codeblock activity_main.xml lang:xml %}
&lt;RelativeLayout xmlns:android=&ldquo;<a href="http://schemas.android.com/apk/res/android">http://schemas.android.com/apk/res/android</a>&rdquo;</p>

<pre><code>xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:paddingLeft="@dimen/activity_horizontal_margin"
android:paddingRight="@dimen/activity_horizontal_margin"
android:paddingTop="@dimen/activity_vertical_margin"
android:paddingBottom="@dimen/activity_vertical_margin"
tools:context="com.github.zzm.myapplication1.app.MainActivity"&gt;

&lt;TextView
    android:text="@string/hello_world"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content" /&gt;
</code></pre>

<p></RelativeLayout>
{% endcodeblock %}</p>

<p>运行的效果如下:</p>

<p>{% img /images/post/2014-8/idea-android-project-6.png 250 350%}</p>

<h3>Gradle脚本</h3>

<p>可以看到工程目录下有2个build.gradle脚本，一个是根目录的构建文件(如下)，如果想提高构建速度，可以将脚本中的mavenCentral()改为<code>maven {url "http://maven.oschina.net/content/groups/public/"}</code>，就是将maven的国外镜像库改成国内的库。</p>

<p>{% codeblock root/build.gradle lang:groovy %}
// Top-level build file where you can add configuration options common to all sub-projects/modules.</p>

<p>buildscript {</p>

<pre><code>repositories {
    mavenCentral()
}
dependencies {
    classpath 'com.android.tools.build:gradle:0.9.+'
}
</code></pre>

<p>}</p>

<p>allprojects {</p>

<pre><code>repositories {
    mavenCentral()
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>另外一个是app目录下的构建文件，可以看到指定了sdk的最小最大版本，需要的依赖包等。<br/>
{% codeblock app/build.gradle lang:groovy %}
buildscript {</p>

<pre><code>repositories {
    mavenCentral()
}
dependencies {
    classpath 'com.android.tools.build:gradle:0.9.+'
}
</code></pre>

<p>}
apply plugin: &lsquo;android&rsquo;</p>

<p>repositories {</p>

<pre><code>mavenCentral()
</code></pre>

<p>}</p>

<p>android {</p>

<pre><code>compileSdkVersion 20
buildToolsVersion "20.0.0"

defaultConfig {
    minSdkVersion 8
    targetSdkVersion 20
    versionCode 1
    versionName "1.0"
}
buildTypes {
    release {
        runProguard false
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
}
</code></pre>

<p>}</p>

<p>dependencies {</p>

<pre><code>compile fileTree(dir: 'libs', include: ['*.jar'])
compile 'com.android.support:appcompat-v7:20.0.0'
</code></pre>

<p>}</p>

<p>{% endcodeblock %}</p>

<h2>相关链接</h2>

<ul>
<li><a href="http://zhaozhiming.github.io/blog/2014/08/31/make-your-android-dev-life-easy-part-2/">让你的安卓开发更容易(二)——Genymotion</a></li>
<li><a href="http://zhaozhiming.github.io/blog/2014/10/07/make-your-android-dev-life-easy-part-3/">让你的安卓开发更容易(三)——Picasso</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
