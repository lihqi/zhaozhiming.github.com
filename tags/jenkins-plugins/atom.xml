<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: jenkins plugins | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/tags/jenkins-plugins/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2018-02-13T09:24:19+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[jenkins插件开发（二）-- HelloWorld]]></title>
    <link href="http://zhaozhiming.github.io/blog/2013/02/02/jenkins-plugins-develop-part-2/"/>
    <updated>2013-02-02T18:35:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2013/02/02/jenkins-plugins-develop-part-2</id>
    <content type="html"><![CDATA[<p>在上一篇blog中我们讲了如何搭建jenkins插件的开发环境，接下来介绍如何开发我们的插件。</p>

<!--more-->


<h3>创建HelloWorld插件</h3>

<p>学习每门新语言的时候，我们都会写一个HelloWorld程序，这里介绍的是如何创建一个Jenkins的HelloWorld插件。</p>

<h5>1、首先修改Maven的配置，将Maven的连接库修改为jenkins plugins的资源库，方便相关pom组件从jenkins上下载，修改的是 %USERPROFILE%/.m2/settings.xml文件。</h5>

<p>{% codeblock settings.xml lang:xml %}
<settings>
  <pluginGroups></p>

<pre><code>&lt;pluginGroup&gt;org.jenkins-ci.tools&lt;/pluginGroup&gt;
</code></pre>

<p>  </pluginGroups></p>

<p>  <profiles></p>

<pre><code>&lt;!-- Give access to Jenkins plugins --&gt;
&lt;profile&gt;
  &lt;id&gt;jenkins&lt;/id&gt;
  &lt;activation&gt;
    &lt;activeByDefault&gt;true&lt;/activeByDefault&gt; &lt;!-- change this to false, if you don't like to have it on per default --&gt;
  &lt;/activation&gt;
  &lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt;repo.jenkins-ci.org&lt;/id&gt;
      &lt;url&gt;http://repo.jenkins-ci.org/public/&lt;/url&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;
  &lt;pluginRepositories&gt;
    &lt;pluginRepository&gt;
      &lt;id&gt;repo.jenkins-ci.org&lt;/id&gt;
      &lt;url&gt;http://repo.jenkins-ci.org/public/&lt;/url&gt;
    &lt;/pluginRepository&gt;
  &lt;/pluginRepositories&gt;
&lt;/profile&gt;
</code></pre>

<p>  </profiles>
  <mirrors></p>

<pre><code>&lt;mirror&gt;
  &lt;id&gt;repo.jenkins-ci.org&lt;/id&gt;
  &lt;url&gt;http://repo.jenkins-ci.org/public/&lt;/url&gt;
  &lt;mirrorOf&gt;m.g.o-public&lt;/mirrorOf&gt;
&lt;/mirror&gt;
</code></pre>

<p>  </mirrors>
</settings>
{% endcodeblock %}</p>

<h5>2、打开CMD，进入一个想要放插件工程的目录，执行以下命令。</h5>

<p>{% codeblock lang:sh %}
mvn -U org.jenkins-ci.tools:maven-hpi-plugin:create -DgroupId={your.gound.id} -DartifactId={your.plugin.id}
{% endcodeblock %}</p>

<p>命令中的 your.groud.id 和 your.plugin.id 填你插件的具体对应的值。</p>

<p>your.group.id 会形成你的包结构，比如 your.group.id=abc.def.ghi，那工程下的src/main/java 目录下会产生abc.def.ghi 这样的目录。</p>

<p>执行完命令后，该目录下会产生一个名称是{your.plugin.id}的目录，这个目录工程就是我们的HelloWorld插件工程。</p>

<h5>3、插件打包</h5>

<p>创建好工程之后，执行下面的命令可以在 target 子目录下产生一个 hpi 文件，该文件就是我们的插件文件，可以直接上传到 jenkins 的服务器。</p>

<p>{% codeblock lang:sh %}
mvn package
{% endcodeblock %}</p>

<h5>4、启动本地服务</h5>

<p>在第三步产生的 hpi 文件要上传到一个部署好的jenkins服务器才可以看到效果，我们也可以通过以下命令启动一个包含插件的本地jenkins服务。</p>

<p>{% codeblock lang:sh %}
mvn hpi:run
{% endcodeblock %}</p>

<p>执行完命令之后，在浏览器打开localhost:8080，就可以访问本地的Jenkins服务了，这里默认用的是 jetty6的 web 容器。</p>

<h5>5、运行HelloWorld插件</h5>

<p>在Job的配置页面，其中的构建子项中Add Build Step按钮，点击后下拉框中会有一个Say Hello World的选项，这个就是我们的HelloWorld 插件，选中后保存配置，进行Job构建，在构建日志中就可以看到插件的打印日志。</p>

<p>这里介绍的是新建一个插件，对已有插件进行扩展不在本次讨论范围内，更多信息可以参考<a href="https://wiki.jenkins-ci.org/display/JENKINS/Plugin+tutorial">这里</a>。</p>

<hr />

<ul>
<li><a href="http://zhaozhiming.github.io/blog/2013/01/31/jenkins-plugins-develop-part-1/">jenkins插件开发（一）&mdash; 环境搭建</a></li>
<li><a href="http://zhaozhiming.github.io/blog/2013/02/03/jenkins-plugins-develop-part-3/">jenkins插件开发（三）&mdash; 插件编写</a></li>
<li><a href="http://zhaozhiming.github.io/blog/2013/02/04/jenkins-plugins-develop-part-4/">jenkins插件开发（四）&mdash; 插件发布</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
