<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: swift | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/tags/swift/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2014-04-20T21:26:15+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[swift源码详解（二）——proxy/server.py]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/04/20/swift-code-explain-proxy-server/"/>
    <updated>2014-04-20T20:52:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/04/20/swift-code-explain-proxy-server</id>
    <content type="html"><![CDATA[<h3>int方法</h3>

<!--more-->


<p>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">conf</span><span class="p">,</span> <span class="n">memcache</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">logger</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">account_ring</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
</span><span class='line'>             <span class="n">container_ring</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">object_ring</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">conf</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="n">conf</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">logger</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span> <span class="o">=</span> <span class="n">get_logger</span><span class="p">(</span><span class="n">conf</span><span class="p">,</span> <span class="n">log_route</span><span class="o">=</span><span class="s">&#39;proxy-server&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span> <span class="o">=</span> <span class="n">logger</span>
</span><span class='line'>    <span class="n">swift_dir</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;swift_dir&#39;</span><span class="p">,</span> <span class="s">&#39;/etc/swift&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">node_timeout</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;node_timeout&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">recoverable_node_timeout</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span>
</span><span class='line'>        <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;recoverable_node_timeout&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">node_timeout</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">conn_timeout</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;conn_timeout&#39;</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">client_timeout</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;client_timeout&#39;</span><span class="p">,</span> <span class="mi">60</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">put_queue_depth</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;put_queue_depth&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">object_chunk_size</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;object_chunk_size&#39;</span><span class="p">,</span> <span class="mi">65536</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">client_chunk_size</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;client_chunk_size&#39;</span><span class="p">,</span> <span class="mi">65536</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">trans_id_suffix</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;trans_id_suffix&#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">post_quorum_timeout</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;post_quorum_timeout&#39;</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">error_suppression_interval</span> <span class="o">=</span> \
</span><span class='line'>        <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;error_suppression_interval&#39;</span><span class="p">,</span> <span class="mi">60</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">error_suppression_limit</span> <span class="o">=</span> \
</span><span class='line'>        <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;error_suppression_limit&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">recheck_container_existence</span> <span class="o">=</span> \
</span><span class='line'>        <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;recheck_container_existence&#39;</span><span class="p">,</span> <span class="mi">60</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">recheck_account_existence</span> <span class="o">=</span> \
</span><span class='line'>        <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;recheck_account_existence&#39;</span><span class="p">,</span> <span class="mi">60</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">allow_account_management</span> <span class="o">=</span> \
</span><span class='line'>        <span class="n">config_true_value</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;allow_account_management&#39;</span><span class="p">,</span> <span class="s">&#39;no&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">object_post_as_copy</span> <span class="o">=</span> \
</span><span class='line'>        <span class="n">config_true_value</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;object_post_as_copy&#39;</span><span class="p">,</span> <span class="s">&#39;true&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">object_ring</span> <span class="o">=</span> <span class="n">object_ring</span> <span class="ow">or</span> <span class="n">Ring</span><span class="p">(</span><span class="n">swift_dir</span><span class="p">,</span> <span class="n">ring_name</span><span class="o">=</span><span class="s">&#39;object&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">container_ring</span> <span class="o">=</span> <span class="n">container_ring</span> <span class="ow">or</span> <span class="n">Ring</span><span class="p">(</span><span class="n">swift_dir</span><span class="p">,</span>
</span><span class='line'>                                                 <span class="n">ring_name</span><span class="o">=</span><span class="s">&#39;container&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">account_ring</span> <span class="o">=</span> <span class="n">account_ring</span> <span class="ow">or</span> <span class="n">Ring</span><span class="p">(</span><span class="n">swift_dir</span><span class="p">,</span>
</span><span class='line'>                                             <span class="n">ring_name</span><span class="o">=</span><span class="s">&#39;account&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">memcache</span> <span class="o">=</span> <span class="n">memcache</span>
</span><span class='line'>    <span class="n">mimetypes</span><span class="o">.</span><span class="n">init</span><span class="p">(</span><span class="n">mimetypes</span><span class="o">.</span><span class="n">knownfiles</span> <span class="o">+</span>
</span><span class='line'>                   <span class="p">[</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">swift_dir</span><span class="p">,</span> <span class="s">&#39;mime.types&#39;</span><span class="p">)])</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">account_autocreate</span> <span class="o">=</span> \
</span><span class='line'>        <span class="n">config_true_value</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;account_autocreate&#39;</span><span class="p">,</span> <span class="s">&#39;no&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">expiring_objects_account</span> <span class="o">=</span> \
</span><span class='line'>        <span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;auto_create_account_prefix&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="s">&#39;.&#39;</span><span class="p">)</span> <span class="o">+</span> \
</span><span class='line'>        <span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;expiring_objects_account_name&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="s">&#39;expiring_objects&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">expiring_objects_container_divisor</span> <span class="o">=</span> \
</span><span class='line'>        <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;expiring_objects_container_divisor&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="mi">86400</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">max_containers_per_account</span> <span class="o">=</span> \
</span><span class='line'>        <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;max_containers_per_account&#39;</span><span class="p">)</span> <span class="ow">or</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">max_containers_whitelist</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="n">a</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;max_containers_whitelist&#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">deny_host_headers</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="n">host</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">host</span> <span class="ow">in</span>
</span><span class='line'>        <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;deny_host_headers&#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="n">host</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">rate_limit_after_segment</span> <span class="o">=</span> \
</span><span class='line'>        <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;rate_limit_after_segment&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">rate_limit_segments_per_sec</span> <span class="o">=</span> \
</span><span class='line'>        <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;rate_limit_segments_per_sec&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">log_handoffs</span> <span class="o">=</span> <span class="n">config_true_value</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;log_handoffs&#39;</span><span class="p">,</span> <span class="s">&#39;true&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">cors_allow_origin</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="n">a</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;cors_allow_origin&#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">a</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">strict_cors_mode</span> <span class="o">=</span> <span class="n">config_true_value</span><span class="p">(</span>
</span><span class='line'>        <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;strict_cors_mode&#39;</span><span class="p">,</span> <span class="s">&#39;t&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">node_timings</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">timing_expiry</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;timing_expiry&#39;</span><span class="p">,</span> <span class="mi">300</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">sorting_method</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;sorting_method&#39;</span><span class="p">,</span> <span class="s">&#39;shuffle&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">max_large_object_get_time</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span>
</span><span class='line'>        <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;max_large_object_get_time&#39;</span><span class="p">,</span> <span class="s">&#39;86400&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">value</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;request_node_count&#39;</span><span class="p">,</span> <span class="s">&#39;2 * replicas&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>        <span class="n">value</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">request_node_count</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">replicas</span><span class="p">:</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span> <span class="ow">and</span> <span class="n">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;*&#39;</span> <span class="ow">and</span> <span class="n">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;replicas&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">value</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">request_node_count</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">replicas</span><span class="p">:</span> <span class="n">value</span> <span class="o">*</span> <span class="n">replicas</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span>
</span><span class='line'>            <span class="s">&#39;Invalid request_node_count value: </span><span class="si">%r</span><span class="s">&#39;</span> <span class="o">%</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">_read_affinity</span> <span class="o">=</span> <span class="n">read_affinity</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;read_affinity&#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">read_affinity_sort_key</span> <span class="o">=</span> <span class="n">affinity_key_function</span><span class="p">(</span><span class="n">read_affinity</span><span class="p">)</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">ValueError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
</span><span class='line'>        <span class="c"># make the message a little more useful</span>
</span><span class='line'>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s">&quot;Invalid read_affinity value: </span><span class="si">%r</span><span class="s"> (</span><span class="si">%s</span><span class="s">)&quot;</span> <span class="o">%</span>
</span><span class='line'>                         <span class="p">(</span><span class="n">read_affinity</span><span class="p">,</span> <span class="n">err</span><span class="o">.</span><span class="n">message</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">write_affinity</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;write_affinity&#39;</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">write_affinity_is_local_fn</span> \
</span><span class='line'>            <span class="o">=</span> <span class="n">affinity_locality_predicate</span><span class="p">(</span><span class="n">write_affinity</span><span class="p">)</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">ValueError</span> <span class="k">as</span> <span class="n">err</span><span class="p">:</span>
</span><span class='line'>        <span class="c"># make the message a little more useful</span>
</span><span class='line'>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s">&quot;Invalid write_affinity value: </span><span class="si">%r</span><span class="s"> (</span><span class="si">%s</span><span class="s">)&quot;</span> <span class="o">%</span>
</span><span class='line'>                         <span class="p">(</span><span class="n">write_affinity</span><span class="p">,</span> <span class="n">err</span><span class="o">.</span><span class="n">message</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">value</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;write_affinity_node_count&#39;</span><span class="p">,</span>
</span><span class='line'>                     <span class="s">&#39;2 * replicas&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>        <span class="n">value</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">write_affinity_node_count</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">replicas</span><span class="p">:</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span> <span class="ow">and</span> <span class="n">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;*&#39;</span> <span class="ow">and</span> <span class="n">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;replicas&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">value</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">write_affinity_node_count</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">replicas</span><span class="p">:</span> <span class="n">value</span> <span class="o">*</span> <span class="n">replicas</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span>
</span><span class='line'>            <span class="s">&#39;Invalid write_affinity_node_count value: </span><span class="si">%r</span><span class="s">&#39;</span> <span class="o">%</span> <span class="s">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
</span><span class='line'>    <span class="c"># swift_owner_headers are stripped by the account and container</span>
</span><span class='line'>    <span class="c"># controllers; we should extend header stripping to object controller</span>
</span><span class='line'>    <span class="c"># when a privileged object header is implemented.</span>
</span><span class='line'>    <span class="n">swift_owner_headers</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span>
</span><span class='line'>        <span class="s">&#39;swift_owner_headers&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;x-container-read, x-container-write, &#39;</span>
</span><span class='line'>        <span class="s">&#39;x-container-sync-key, x-container-sync-to, &#39;</span>
</span><span class='line'>        <span class="s">&#39;x-account-meta-temp-url-key, x-account-meta-temp-url-key-2, &#39;</span>
</span><span class='line'>        <span class="s">&#39;x-account-access-control&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">swift_owner_headers</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="n">name</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">title</span><span class="p">()</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">swift_owner_headers</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="n">name</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span>
</span><span class='line'>    <span class="c"># Initialization was successful, so now apply the client chunk size</span>
</span><span class='line'>    <span class="c"># parameter as the default read / write buffer size for the network</span>
</span><span class='line'>    <span class="c"># sockets.</span>
</span><span class='line'>    <span class="c">#</span>
</span><span class='line'>    <span class="c"># NOTE WELL: This is a class setting, so until we get set this on a</span>
</span><span class='line'>    <span class="c"># per-connection basis, this affects reading and writing on ALL</span>
</span><span class='line'>    <span class="c"># sockets, those between the proxy servers and external clients, and</span>
</span><span class='line'>    <span class="c"># those between the proxy servers and the other internal servers.</span>
</span><span class='line'>    <span class="c">#</span>
</span><span class='line'>    <span class="c"># ** Because it affects the client as well, currently, we use the</span>
</span><span class='line'>    <span class="c"># client chunk size as the govenor and not the object chunk size.</span>
</span><span class='line'>    <span class="n">socket</span><span class="o">.</span><span class="n">_fileobject</span><span class="o">.</span><span class="n">default_bufsize</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">client_chunk_size</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">expose_info</span> <span class="o">=</span> <span class="n">config_true_value</span><span class="p">(</span>
</span><span class='line'>        <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;expose_info&#39;</span><span class="p">,</span> <span class="s">&#39;yes&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">disallowed_sections</span> <span class="o">=</span> <span class="n">list_from_csv</span><span class="p">(</span>
</span><span class='line'>        <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;disallowed_sections&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">admin_key</span> <span class="o">=</span> <span class="n">conf</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;admin_key&#39;</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
</span><span class='line'>    <span class="n">register_swift_info</span><span class="p">(</span>
</span><span class='line'>        <span class="n">version</span><span class="o">=</span><span class="n">swift_version</span><span class="p">,</span>
</span><span class='line'>        <span class="n">strict_cors_mode</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">strict_cors_mode</span><span class="p">,</span>
</span><span class='line'>        <span class="o">**</span><span class="n">constraints</span><span class="o">.</span><span class="n">EFFECTIVE_CONSTRAINTS</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
proxy server的初始化函数，具体配置的说明可以参考<a href="http://docs.openstack.org/havana/config-reference/content/proxy-server-conf.html">这里</a>。</p>

<h3>check_config</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">check_config</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Check the configuration for possible errors</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_read_affinity</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">sorting_method</span> <span class="o">!=</span> <span class="s">&#39;affinity&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s">&quot;sorting_method is set to &#39;</span><span class="si">%s</span><span class="s">&#39;, not &#39;affinity&#39;; &quot;</span>
</span><span class='line'>                         <span class="s">&quot;read_affinity setting will have no effect.&quot;</span> <span class="o">%</span>
</span><span class='line'>                         <span class="bp">self</span><span class="o">.</span><span class="n">sorting_method</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
proxy server初始化后被调用的方法，检查proxy的read_affinity配置和排序方法设置不一致时，记录警告日志。</p>

<h3>call方法</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="err">&lt;</span><span class="nf">strong</span><span class="o">&gt;</span><span class="n">call</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">env</span><span class="p">,</span> <span class="n">start_response</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">    WSGI entry point.</span>
</span><span class='line'><span class="s">    Wraps env in swob.Request object and passes it down.</span>
</span><span class='line'>
</span><span class='line'><span class="s">    :param env: WSGI environment dictionary</span>
</span><span class='line'><span class="s">    :param start_response: WSGI callable</span>
</span><span class='line'><span class="s">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">memcache</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">memcache</span> <span class="o">=</span> <span class="n">cache_from_env</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>        <span class="n">req</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">update_request</span><span class="p">(</span><span class="n">Request</span><span class="p">(</span><span class="n">env</span><span class="p">))</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">handle_request</span><span class="p">(</span><span class="n">req</span><span class="p">)(</span><span class="n">env</span><span class="p">,</span> <span class="n">start_response</span><span class="p">)</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">UnicodeError</span><span class="p">:</span>
</span><span class='line'>        <span class="n">err</span> <span class="o">=</span> <span class="n">HTTPPreconditionFailed</span><span class="p">(</span>
</span><span class='line'>            <span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="s">&#39;Invalid UTF8 or contains NULL&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">err</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">start_response</span><span class="p">)</span>
</span><span class='line'>    <span class="k">except</span> <span class="p">(</span><span class="ne">Exception</span><span class="p">,</span> <span class="n">Timeout</span><span class="p">):</span>
</span><span class='line'>        <span class="n">start_response</span><span class="p">(</span><span class="s">&#39;500 Server Error&#39;</span><span class="p">,</span>
</span><span class='line'>                       <span class="p">[(</span><span class="s">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s">&#39;text/plain&#39;</span><span class="p">)])</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">[</span><span class="s">&#39;Internal server error.</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 9~10: 检查memcache缓存是否为空，如果为空的话就从上下文中获取，由于proxy-server在pipeline中是最后面，如果pipeline前面配置了memcache中间件的话，就可以从上下文中取到。<br/>
* 12: 调用update_request方法，后面会介绍。<br/>
* 13: 调用handle_request方法，后面会介绍，最后返回response。<br/>
* 14~17: 捕获UnicodeError并返回412。<br/>
* 18~21: 捕获Timeout和其他异常并返回500。</p>

<h3>update_request</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">update_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">req</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="s">&#39;x-storage-token&#39;</span> <span class="ow">in</span> <span class="n">req</span><span class="o">.</span><span class="n">headers</span> <span class="ow">and</span> \
</span><span class='line'>            <span class="s">&#39;x-auth-token&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">req</span><span class="o">.</span><span class="n">headers</span><span class="p">:</span>
</span><span class='line'>        <span class="n">req</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="s">&#39;x-auth-token&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="s">&#39;x-storage-token&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">req</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
该方法是将requeset中的x-auth-token的header替换为x-storage-token的header。</p>

<h3>handle_request</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">handle_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">req</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">    Entry point for proxy server.</span>
</span><span class='line'><span class="s">    Should return a WSGI-style callable (such as swob.Response).</span>
</span><span class='line'>
</span><span class='line'><span class="s">    :param req: swob.Request object</span>
</span><span class='line'><span class="s">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">set_statsd_prefix</span><span class="p">(</span><span class="s">&#39;proxy-server&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">req</span><span class="o">.</span><span class="n">content_length</span> <span class="ow">and</span> <span class="n">req</span><span class="o">.</span><span class="n">content_length</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">increment</span><span class="p">(</span><span class="s">&#39;errors&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HTTPBadRequest</span><span class="p">(</span><span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">,</span>
</span><span class='line'>                                  <span class="n">body</span><span class="o">=</span><span class="s">&#39;Invalid Content-Length&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="ow">not</span> <span class="n">check_utf8</span><span class="p">(</span><span class="n">req</span><span class="o">.</span><span class="n">path_info</span><span class="p">):</span>
</span><span class='line'>                <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">increment</span><span class="p">(</span><span class="s">&#39;errors&#39;</span><span class="p">)</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">HTTPPreconditionFailed</span><span class="p">(</span>
</span><span class='line'>                    <span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="s">&#39;Invalid UTF8 or contains NULL&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">except</span> <span class="ne">UnicodeError</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">increment</span><span class="p">(</span><span class="s">&#39;errors&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HTTPPreconditionFailed</span><span class="p">(</span>
</span><span class='line'>                <span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="s">&#39;Invalid UTF8 or contains NULL&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 8: 在log中设置'proxy-server'前缀。<br/>
* 10~13: 检查request中content length如果有且长度为0，则返回500。<br/>
* 15~23  : 检查url格式是否utf-8，如果不是则返回412。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>            <span class="n">controller</span><span class="p">,</span> <span class="n">path_parts</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_controller</span><span class="p">(</span><span class="n">req</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>            <span class="n">p</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="n">path_info</span>
</span><span class='line'>            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">):</span>
</span><span class='line'>                <span class="n">p</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">increment</span><span class="p">(</span><span class="s">&#39;errors&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HTTPNotFound</span><span class="p">(</span><span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="n">controller</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">increment</span><span class="p">(</span><span class="s">&#39;errors&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HTTPPreconditionFailed</span><span class="p">(</span><span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="s">&#39;Bad URL&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">deny_host_headers</span> <span class="ow">and</span> \
</span><span class='line'>                <span class="n">req</span><span class="o">.</span><span class="n">host</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">deny_host_headers</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HTTPForbidden</span><span class="p">(</span><span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="s">&#39;Invalid host header&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 2～5: 调用get_controller方法(后面会介绍)，通过url获取对应的controller类和url中通过'/&lsquo;符号分割的各个部分。<br/>
* 6~8: 捕获ValueError并返回404。<br/>
* 9~11: 如果controller类为空则返回404。<br/>
* 12~14: 如果proxy中有定义deny_host_headers(禁止访问的ip），并且request的ip与禁止访问的ip一致，则返回403。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">set_statsd_prefix</span><span class="p">(</span><span class="s">&#39;proxy-server.&#39;</span> <span class="o">+</span>
</span><span class='line'>                                      <span class="n">controller</span><span class="o">.</span><span class="n">server_type</span><span class="o">.</span><span class="n">lower</span><span class="p">())</span>
</span><span class='line'>        <span class="n">controller</span> <span class="o">=</span> <span class="n">controller</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">path_parts</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="s">&#39;swift.trans_id&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">req</span><span class="o">.</span><span class="n">environ</span><span class="p">:</span>
</span><span class='line'>            <span class="c"># if this wasn&#39;t set by an earlier middleware, set it now</span>
</span><span class='line'>            <span class="n">trans_id</span> <span class="o">=</span> <span class="n">generate_trans_id</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">trans_id_suffix</span><span class="p">)</span>
</span><span class='line'>            <span class="n">req</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">&#39;swift.trans_id&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">trans_id</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">txn_id</span> <span class="o">=</span> <span class="n">trans_id</span>
</span><span class='line'>        <span class="n">req</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="s">&#39;x-trans-id&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">&#39;swift.trans_id&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">controller</span><span class="o">.</span><span class="n">trans_id</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">&#39;swift.trans_id&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">client_ip</span> <span class="o">=</span> <span class="n">get_remote_client</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 1～2: 日志加上controller名字前缀。
* 3: 通过controller类实例化controller对象。
* 4~10: 如果swift.trans_id没有在request的上下文中，则重新生成trans_id，并设置在上下文、日志、header和controller中。<br/>
* 11: 调用get_remote_client方法(后面介绍)，先判断header中是否有'x-cluster-client-ip'，如果没有再去获取header中的'x-forwarded-for'，还是没有的话就从request中的remote_addr取值，得到client_ip。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>            <span class="n">handler</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">controller</span><span class="p">,</span> <span class="n">req</span><span class="o">.</span><span class="n">method</span><span class="p">)</span>
</span><span class='line'>            <span class="nb">getattr</span><span class="p">(</span><span class="n">handler</span><span class="p">,</span> <span class="s">&#39;publicly_accessible&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
</span><span class='line'>            <span class="n">allowed_methods</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">controller</span><span class="p">,</span> <span class="s">&#39;allowed_methods&#39;</span><span class="p">,</span> <span class="nb">set</span><span class="p">())</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">HTTPMethodNotAllowed</span><span class="p">(</span>
</span><span class='line'>                <span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s">&#39;Allow&#39;</span><span class="p">:</span> <span class="s">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">allowed_methods</span><span class="p">)})</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 2~3: 通过request的method，在controller得到一个名字相同，并且有'public'标签的方法对象handler。
* 4~7: 如果获取不到对应的public方法，则打印出controller中所有public方法并返回405。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="k">if</span> <span class="s">&#39;swift.authorize&#39;</span> <span class="ow">in</span> <span class="n">req</span><span class="o">.</span><span class="n">environ</span><span class="p">:</span>
</span><span class='line'>            <span class="c"># We call authorize before the handler, always. If authorized,</span>
</span><span class='line'>            <span class="c"># we remove the swift.authorize hook so isn&#39;t ever called</span>
</span><span class='line'>            <span class="c"># again. If not authorized, we return the denial unless the</span>
</span><span class='line'>            <span class="c"># controller&#39;s method indicates it&#39;d like to gather more</span>
</span><span class='line'>            <span class="c"># information and try again later.</span>
</span><span class='line'>            <span class="n">resp</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">&#39;swift.authorize&#39;</span><span class="p">](</span><span class="n">req</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="ow">not</span> <span class="n">resp</span><span class="p">:</span>
</span><span class='line'>                <span class="c"># No resp means authorized, no delayed recheck required.</span>
</span><span class='line'>                <span class="k">del</span> <span class="n">req</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">&#39;swift.authorize&#39;</span><span class="p">]</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="c"># Response indicates denial, but we might delay the denial</span>
</span><span class='line'>                <span class="c"># and recheck later. If not delayed, return the error now.</span>
</span><span class='line'>                <span class="k">if</span> <span class="ow">not</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">handler</span><span class="p">,</span> <span class="s">&#39;delay_denial&#39;</span><span class="p">,</span> <span class="bp">None</span><span class="p">):</span>
</span><span class='line'>                    <span class="k">return</span> <span class="n">resp</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
如果request的上下文中有swift.authorize，则调用这个方法进行认证。<br/>
如果没有返回结果证明之前已经认证通过了，后面的请求不需要再认证，将'swift.authorize'从上下文去掉。<br/>
如果有Response返回则表示认证不通过，会先检查是否有延迟禁止的配置，如果没有返回认证不通过的response，如果有则会等后面再重新确认。<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>        <span class="c"># Save off original request method (GET, POST, etc.) in case it</span>
</span><span class='line'>        <span class="c"># gets mutated during handling.  This way logging can display the</span>
</span><span class='line'>        <span class="c"># method the client actually sent.</span>
</span><span class='line'>        <span class="n">req</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s">&#39;swift.orig_req_method&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="n">method</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">handler</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
</span><span class='line'>    <span class="k">except</span> <span class="n">HTTPException</span> <span class="k">as</span> <span class="n">error_response</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">error_response</span>
</span><span class='line'>    <span class="k">except</span> <span class="p">(</span><span class="ne">Exception</span><span class="p">,</span> <span class="n">Timeout</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">exception</span><span class="p">(</span><span class="n">_</span><span class="p">(</span><span class="s">&#39;ERROR Unhandled exception in request&#39;</span><span class="p">))</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">HTTPServerError</span><span class="p">(</span><span class="n">request</span><span class="o">=</span><span class="n">req</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 4~5: 在日志中记录原始的request方法，防止请求在传播过程中发生突变http请求方法发生改变。
* 6~10: 捕获异常，记录日志。</p>

<h3>get_controller</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">get_controller</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Get the controller to handle a request.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    :param path: path from request</span>
</span><span class='line'><span class="sd">    :returns: tuple of (controller class, path dictionary)</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    :raises: ValueError (thrown by split_path) if given invalid path</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">path</span> <span class="o">==</span> <span class="s">&#39;/info&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">d</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">version</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">expose_info</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">expose_info</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">disallowed_sections</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">disallowed_sections</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">admin_key</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">admin_key</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">InfoController</span><span class="p">,</span> <span class="n">d</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">version</span><span class="p">,</span> <span class="n">account</span><span class="p">,</span> <span class="n">container</span><span class="p">,</span> <span class="n">obj</span> <span class="o">=</span> <span class="n">split_path</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">d</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">version</span><span class="o">=</span><span class="n">version</span><span class="p">,</span>
</span><span class='line'>             <span class="n">account_name</span><span class="o">=</span><span class="n">account</span><span class="p">,</span>
</span><span class='line'>             <span class="n">container_name</span><span class="o">=</span><span class="n">container</span><span class="p">,</span>
</span><span class='line'>             <span class="n">object_name</span><span class="o">=</span><span class="n">obj</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">obj</span> <span class="ow">and</span> <span class="n">container</span> <span class="ow">and</span> <span class="n">account</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">ObjectController</span><span class="p">,</span> <span class="n">d</span>
</span><span class='line'>    <span class="k">elif</span> <span class="n">container</span> <span class="ow">and</span> <span class="n">account</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">ContainerController</span><span class="p">,</span> <span class="n">d</span>
</span><span class='line'>    <span class="k">elif</span> <span class="n">account</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">container</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">obj</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">AccountController</span><span class="p">,</span> <span class="n">d</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">None</span><span class="p">,</span> <span class="n">d</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 10～15: 如果url是'info'，则返回InController和controller字典参数，expose_info表示是否暴露信息，disallowed_sections表示不允许暴露的字段列表，比如container_qutoas, tempurl等。
* 17～28: 根据url判断是account、container还是object，返回对应的controller和字典参数。</p>

<h3>sort_nodes</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">sort_nodes</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nodes</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&#39;&#39;&#39;</span>
</span><span class='line'><span class="sd">    Sorts nodes in-place (and returns the sorted list) according to</span>
</span><span class='line'><span class="sd">    the configured strategy. The default &quot;sorting&quot; is to randomly</span>
</span><span class='line'><span class="sd">    shuffle the nodes. If the &quot;timing&quot; strategy is chosen, the nodes</span>
</span><span class='line'><span class="sd">    are sorted according to the stored timing data.</span>
</span><span class='line'><span class="sd">    &#39;&#39;&#39;</span>
</span><span class='line'>    <span class="c"># In the case of timing sorting, shuffling ensures that close timings</span>
</span><span class='line'>    <span class="c"># (ie within the rounding resolution) won&#39;t prefer one over another.</span>
</span><span class='line'>    <span class="c"># Python&#39;s sort is stable (http://wiki.python.org/moin/HowTo/Sorting/)</span>
</span><span class='line'>    <span class="n">shuffle</span><span class="p">(</span><span class="n">nodes</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">sorting_method</span> <span class="o">==</span> <span class="s">&#39;timing&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">now</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">def</span> <span class="nf">key_func</span><span class="p">(</span><span class="n">node</span><span class="p">):</span>
</span><span class='line'>            <span class="n">timing</span><span class="p">,</span> <span class="n">expires</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">node_timings</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">node</span><span class="p">[</span><span class="s">&#39;ip&#39;</span><span class="p">],</span> <span class="p">(</span><span class="o">-</span><span class="mf">1.0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">timing</span> <span class="k">if</span> <span class="n">expires</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">now</span> <span class="k">else</span> <span class="o">-</span><span class="mf">1.0</span>
</span><span class='line'>        <span class="n">nodes</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="n">key_func</span><span class="p">)</span>
</span><span class='line'>    <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">sorting_method</span> <span class="o">==</span> <span class="s">&#39;affinity&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">nodes</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">read_affinity_sort_key</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">nodes</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
节点的排序方法，将节点根据配置的排序策略进行排序。<br/>
* 11: 将节点顺序打乱，确保节点不会按照时间排好序。
* 12～18: 如果配置的排序策略是按时间排序，则定义一个（节点）按时间排序的方法让节点按照这个方法排序，如果节点已过期则timing为-0.1，即会被排到最后。
* 19～20: 如果配置的排序策略是按亲和力排序，则节点按照亲和力方法排序。</p>

<h3>set_node_timing</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">set_node_timing</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">node</span><span class="p">,</span> <span class="n">timing</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">sorting_method</span> <span class="o">!=</span> <span class="s">&#39;timing&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="n">now</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>
</span><span class='line'>    <span class="n">timing</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="n">timing</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>  <span class="c"># sort timings to the millisecond</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">node_timings</span><span class="p">[</span><span class="n">node</span><span class="p">[</span><span class="s">&#39;ip&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="p">(</span><span class="n">timing</span><span class="p">,</span> <span class="n">now</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">timing_expiry</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 2～3: 如果配置的排序策略不是'timing'，则直接返回不做设置。
* 4～6: 设置单个节点的排序时间过期时间。</p>

<h3>error_limited</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">error_limited</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">node</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Check if the node is currently error limited.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    :param node: dictionary of node to check</span>
</span><span class='line'><span class="sd">    :returns: True if error limited, False otherwise</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">now</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>
</span><span class='line'>    <span class="k">if</span> <span class="s">&#39;errors&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">node</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>    <span class="k">if</span> <span class="s">&#39;last_error&#39;</span> <span class="ow">in</span> <span class="n">node</span> <span class="ow">and</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;last_error&#39;</span><span class="p">]</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> \
</span><span class='line'>            <span class="n">now</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">error_suppression_interval</span><span class="p">:</span>
</span><span class='line'>        <span class="k">del</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;last_error&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="k">if</span> <span class="s">&#39;errors&#39;</span> <span class="ow">in</span> <span class="n">node</span><span class="p">:</span>
</span><span class='line'>            <span class="k">del</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;errors&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>    <span class="n">limited</span> <span class="o">=</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;errors&#39;</span><span class="p">]</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="bp">self</span><span class="o">.</span><span class="n">error_suppression_limit</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">limited</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span>
</span><span class='line'>            <span class="n">_</span><span class="p">(</span><span class="s">&#39;Node error limited </span><span class="si">%(ip)s</span><span class="s">:</span><span class="si">%(port)s</span><span class="s"> (</span><span class="si">%(device)s</span><span class="s">)&#39;</span><span class="p">),</span> <span class="n">node</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">limited</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 8～10: 如果节点里面没有'errors'选项，则返回false。
* 11～10: 如果节点里面的'last_error'选项不正确，则删除该选项和errors选项，并返回false。
* 12～15: 判断节点的错误个数是否超过配置的错误限制，如果超过则记录日志，并返回是否超限制的结果。</p>

<h3>error_limit</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">error_limit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">node</span><span class="p">,</span> <span class="n">msg</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Mark a node as error limited. This immediately pretends the</span>
</span><span class='line'><span class="sd">    node received enough errors to trigger error suppression. Use</span>
</span><span class='line'><span class="sd">    this for errors like Insufficient Storage. For other errors</span>
</span><span class='line'><span class="sd">    use :func:`error_occurred`.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    :param node: dictionary of node to error limit</span>
</span><span class='line'><span class="sd">    :param msg: error message</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">node</span><span class="p">[</span><span class="s">&#39;errors&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">error_suppression_limit</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">node</span><span class="p">[</span><span class="s">&#39;last_error&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="n">_</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%(msg)s</span><span class="s"> </span><span class="si">%(ip)s</span><span class="s">:</span><span class="si">%(port)s</span><span class="s">/</span><span class="si">%(device)s</span><span class="s">&#39;</span><span class="p">),</span>
</span><span class='line'>                      <span class="p">{</span><span class="s">&#39;msg&#39;</span><span class="p">:</span> <span class="n">msg</span><span class="p">,</span> <span class="s">&#39;ip&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;ip&#39;</span><span class="p">],</span>
</span><span class='line'>                      <span class="s">&#39;port&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;port&#39;</span><span class="p">],</span> <span class="s">&#39;device&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;device&#39;</span><span class="p">]})</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 11～14: 记录一个节点的错误信息:错误个数，最后错误的时间，并记录日志。</p>

<h3>error_occurred</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">error_occurred</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">node</span><span class="p">,</span> <span class="n">msg</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Handle logging, and handling of errors.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    :param node: dictionary of node to handle errors for</span>
</span><span class='line'><span class="sd">    :param msg: error message</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">node</span><span class="p">[</span><span class="s">&#39;errors&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">node</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;errors&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">node</span><span class="p">[</span><span class="s">&#39;last_error&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="n">_</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%(msg)s</span><span class="s"> </span><span class="si">%(ip)s</span><span class="s">:</span><span class="si">%(port)s</span><span class="s">/</span><span class="si">%(device)s</span><span class="s">&#39;</span><span class="p">),</span>
</span><span class='line'>                      <span class="p">{</span><span class="s">&#39;msg&#39;</span><span class="p">:</span> <span class="n">msg</span><span class="p">,</span> <span class="s">&#39;ip&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;ip&#39;</span><span class="p">],</span>
</span><span class='line'>                      <span class="s">&#39;port&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;port&#39;</span><span class="p">],</span> <span class="s">&#39;device&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;device&#39;</span><span class="p">]})</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 8～12: 与前面的方法类似，唯一区别是记录节点错误个数是取当前的错误个数，然后+1。</p>

<h3>iter_nodes</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">iter_nodes</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ring</span><span class="p">,</span> <span class="n">partition</span><span class="p">,</span> <span class="n">node_iter</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Yields nodes for a ring partition, skipping over error</span>
</span><span class='line'><span class="sd">    limited nodes and stopping at the configurable number of</span>
</span><span class='line'><span class="sd">    nodes. If a node yielded subsequently gets error limited, an</span>
</span><span class='line'><span class="sd">    extra node will be yielded to take its place.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    Note that if you&#39;re going to iterate over this concurrently from</span>
</span><span class='line'><span class="sd">    multiple greenthreads, you&#39;ll want to use a</span>
</span><span class='line'><span class="sd">    swift.common.utils.GreenthreadSafeIterator to serialize access.</span>
</span><span class='line'><span class="sd">    Otherwise, you may get ValueErrors from concurrent access. (You also</span>
</span><span class='line'><span class="sd">    may not, depending on how logging is configured, the vagaries of</span>
</span><span class='line'><span class="sd">    socket IO and eventlet, and the phase of the moon.)</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    :param ring: ring to get yield nodes from</span>
</span><span class='line'><span class="sd">    :param partition: ring partition to yield nodes for</span>
</span><span class='line'><span class="sd">    :param node_iter: optional iterable of nodes to try. Useful if you</span>
</span><span class='line'><span class="sd">        want to filter or reorder the nodes.</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">part_nodes</span> <span class="o">=</span> <span class="n">ring</span><span class="o">.</span><span class="n">get_part_nodes</span><span class="p">(</span><span class="n">partition</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">node_iter</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="n">node_iter</span> <span class="o">=</span> <span class="n">itertools</span><span class="o">.</span><span class="n">chain</span><span class="p">(</span><span class="n">part_nodes</span><span class="p">,</span>
</span><span class='line'>                                    <span class="n">ring</span><span class="o">.</span><span class="n">get_more_nodes</span><span class="p">(</span><span class="n">partition</span><span class="p">))</span>
</span><span class='line'>    <span class="n">num_primary_nodes</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">part_nodes</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># Use of list() here forcibly yanks the first N nodes (the primary</span>
</span><span class='line'>    <span class="c"># nodes) from node_iter, so the rest of its values are handoffs.</span>
</span><span class='line'>    <span class="n">primary_nodes</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sort_nodes</span><span class="p">(</span>
</span><span class='line'>        <span class="nb">list</span><span class="p">(</span><span class="n">itertools</span><span class="o">.</span><span class="n">islice</span><span class="p">(</span><span class="n">node_iter</span><span class="p">,</span> <span class="n">num_primary_nodes</span><span class="p">)))</span>
</span><span class='line'>    <span class="n">handoff_nodes</span> <span class="o">=</span> <span class="n">node_iter</span>
</span><span class='line'>    <span class="n">nodes_left</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">request_node_count</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">primary_nodes</span><span class="p">))</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 20～24: 根据partition获取相应的节点，如果node_iter为空，则将之前取到的节点和get_more_nodes节点连接起来为node_iter赋值，并取得节点个数。
* 28～31: 将node_iter的节点重新排序，并取前面部分作为主要nodes，handoff_nodes为node_iter剩下的nodes， nodes_left为剩下的节点个数。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="k">for</span> <span class="n">node</span> <span class="ow">in</span> <span class="n">primary_nodes</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">error_limited</span><span class="p">(</span><span class="n">node</span><span class="p">):</span>
</span><span class='line'>            <span class="k">yield</span> <span class="n">node</span>
</span><span class='line'>            <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">error_limited</span><span class="p">(</span><span class="n">node</span><span class="p">):</span>
</span><span class='line'>                <span class="n">nodes_left</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">nodes_left</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>                    <span class="k">return</span>
</span><span class='line'>    <span class="n">handoffs</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">node</span> <span class="ow">in</span> <span class="n">handoff_nodes</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">error_limited</span><span class="p">(</span><span class="n">node</span><span class="p">):</span>
</span><span class='line'>            <span class="n">handoffs</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">log_handoffs</span><span class="p">:</span>
</span><span class='line'>                <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">increment</span><span class="p">(</span><span class="s">&#39;handoff_count&#39;</span><span class="p">)</span>
</span><span class='line'>                <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">warning</span><span class="p">(</span>
</span><span class='line'>                    <span class="s">&#39;Handoff requested (</span><span class="si">%d</span><span class="s">)&#39;</span> <span class="o">%</span> <span class="n">handoffs</span><span class="p">)</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">handoffs</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">primary_nodes</span><span class="p">):</span>
</span><span class='line'>                    <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">increment</span><span class="p">(</span><span class="s">&#39;handoff_all_count&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">yield</span> <span class="n">node</span>
</span><span class='line'>            <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">error_limited</span><span class="p">(</span><span class="n">node</span><span class="p">):</span>
</span><span class='line'>                <span class="n">nodes_left</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">nodes_left</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>                    <span class="k">return</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 1～7: 遍历每个主节点，如果节点没有错误则返回该节点，剩余节点数-1,如果剩余节点数&lt;=0,则直接返回。
* 8～22: 如果主节点中都有错误，则从剩余节点中查找满足条件的节点，查找方法和主节点查找方法雷同，只是多了一些日志的记录。</p>

<h3>exception_occurred</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">exception_occurred</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">node</span><span class="p">,</span> <span class="n">typ</span><span class="p">,</span> <span class="n">additional_info</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Handle logging of generic exceptions.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    :param node: dictionary of node to log the error for</span>
</span><span class='line'><span class="sd">    :param typ: server type</span>
</span><span class='line'><span class="sd">    :param additional_info: additional information to log</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">exception</span><span class="p">(</span>
</span><span class='line'>        <span class="n">_</span><span class="p">(</span><span class="s">&#39;ERROR with </span><span class="si">%(type)s</span><span class="s"> server </span><span class="si">%(ip)s</span><span class="s">:</span><span class="si">%(port)s</span><span class="s">/</span><span class="si">%(device)s</span><span class="s"> re: &#39;</span>
</span><span class='line'>          <span class="s">&#39;</span><span class="si">%(info)s</span><span class="s">&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="p">{</span><span class="s">&#39;type&#39;</span><span class="p">:</span> <span class="n">typ</span><span class="p">,</span> <span class="s">&#39;ip&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;ip&#39;</span><span class="p">],</span> <span class="s">&#39;port&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;port&#39;</span><span class="p">],</span>
</span><span class='line'>         <span class="s">&#39;device&#39;</span><span class="p">:</span> <span class="n">node</span><span class="p">[</span><span class="s">&#39;device&#39;</span><span class="p">],</span> <span class="s">&#39;info&#39;</span><span class="p">:</span> <span class="n">additional_info</span><span class="p">})</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 9～13: 当异常发生的时候，记录异常日志。</p>

<h3>modify_wsgi_pipeline</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">modify_wsgi_pipeline</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pipe</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Called during WSGI pipeline creation. Modifies the WSGI pipeline</span>
</span><span class='line'><span class="sd">    context to ensure that mandatory middleware is present in the pipeline.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    :param pipe: A PipelineWrapper object</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">pipeline_was_modified</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">filter_spec</span> <span class="ow">in</span> <span class="nb">reversed</span><span class="p">(</span><span class="n">required_filters</span><span class="p">):</span>
</span><span class='line'>        <span class="n">filter_name</span> <span class="o">=</span> <span class="n">filter_spec</span><span class="p">[</span><span class="s">&#39;name&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">filter_name</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">pipe</span><span class="p">:</span>
</span><span class='line'>            <span class="n">afters</span> <span class="o">=</span> <span class="n">filter_spec</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;after_fn&#39;</span><span class="p">,</span> <span class="k">lambda</span> <span class="n">_junk</span><span class="p">:</span> <span class="p">[])(</span><span class="n">pipe</span><span class="p">)</span>
</span><span class='line'>            <span class="n">insert_at</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">after</span> <span class="ow">in</span> <span class="n">afters</span><span class="p">:</span>
</span><span class='line'>                <span class="k">try</span><span class="p">:</span>
</span><span class='line'>                    <span class="n">insert_at</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">insert_at</span><span class="p">,</span> <span class="n">pipe</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">after</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>  <span class="c"># not in pipeline; ignore it</span>
</span><span class='line'>                    <span class="k">pass</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span><span class="p">(</span>
</span><span class='line'>                <span class="s">&#39;Adding required filter </span><span class="si">%s</span><span class="s"> to pipeline at position </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span>
</span><span class='line'>                <span class="p">(</span><span class="n">filter_name</span><span class="p">,</span> <span class="n">insert_at</span><span class="p">))</span>
</span><span class='line'>            <span class="n">ctx</span> <span class="o">=</span> <span class="n">pipe</span><span class="o">.</span><span class="n">create_filter</span><span class="p">(</span><span class="n">filter_name</span><span class="p">)</span>
</span><span class='line'>            <span class="n">pipe</span><span class="o">.</span><span class="n">insert_filter</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="n">insert_at</span><span class="p">)</span>
</span><span class='line'>            <span class="n">pipeline_was_modified</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">pipeline_was_modified</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&quot;Pipeline was modified. New pipeline is </span><span class="se">\&quot;</span><span class="si">%s</span><span class="se">\&quot;</span><span class="s">.&quot;</span><span class="p">,</span>
</span><span class='line'>                         <span class="n">pipe</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s">&quot;Pipeline is </span><span class="se">\&quot;</span><span class="si">%s</span><span class="se">\&quot;</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">pipe</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* 8～24: 遍历定义好的中间件required_filters，如果该中间件没有在pipeline中，则将该中间件插入到pipeline，插入位置根据中间件的atfer_fn方法得到。
* 26～31: 记录人日志信息。</p>

<h3>required_filters</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">List</span> <span class="n">of</span> <span class="n">entry</span> <span class="n">points</span> <span class="k">for</span> <span class="n">mandatory</span> <span class="n">middlewares</span><span class="o">.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Fields</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="p">(</span><span class="n">required</span><span class="p">)</span> <span class="ow">is</span> <span class="n">the</span> <span class="n">entry</span> <span class="n">point</span> <span class="n">name</span> <span class="kn">from</span> <span class="nn">setup.py.</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">after_fn</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="p">(</span><span class="n">optional</span><span class="p">)</span> <span class="n">a</span> <span class="n">function</span> <span class="n">that</span> <span class="n">takes</span> <span class="n">a</span> <span class="n">PipelineWrapper</span> <span class="nb">object</span> <span class="k">as</span> <span class="n">its</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">single</span> <span class="n">argument</span> <span class="ow">and</span> <span class="n">returns</span> <span class="n">a</span> <span class="nb">list</span> <span class="n">of</span> <span class="n">middlewares</span> <span class="n">that</span> <span class="n">this</span> <span class="n">middleware</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">should</span> <span class="n">come</span> <span class="n">after</span><span class="o">.</span> <span class="n">Any</span> <span class="n">middlewares</span> <span class="ow">in</span> <span class="n">the</span> <span class="n">returned</span> <span class="nb">list</span> <span class="n">that</span> <span class="n">are</span> <span class="ow">not</span> <span class="n">present</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="ow">in</span> <span class="n">the</span> <span class="n">pipeline</span> <span class="n">will</span> <span class="n">be</span> <span class="n">ignored</span><span class="p">,</span> <span class="n">so</span> <span class="n">you</span> <span class="n">can</span> <span class="n">safely</span> <span class="n">name</span> <span class="n">optional</span> <span class="n">middlewares</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">to</span> <span class="n">come</span> <span class="n">after</span><span class="o">.</span> <span class="n">For</span> <span class="n">example</span><span class="p">,</span> <span class="p">[</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">catch_errors</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">bulk</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;]</span> <span class="n">would</span> <span class="n">install</span> <span class="n">this</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">middleware</span> <span class="n">after</span> <span class="n">catch_errors</span> <span class="ow">and</span> <span class="n">bulk</span> <span class="k">if</span> <span class="n">both</span> <span class="n">were</span> <span class="n">present</span><span class="p">,</span> <span class="n">but</span> <span class="k">if</span> <span class="n">bulk</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">were</span> <span class="n">absent</span><span class="p">,</span> <span class="n">would</span> <span class="n">just</span> <span class="n">install</span> <span class="n">it</span> <span class="n">after</span> <span class="n">catch_errors</span><span class="o">.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">required_filters</span> <span class="o">=</span> <span class="p">[</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">{</span><span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;catch_errors&#39;</span><span class="p">},</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;gatekeeper&#39;</span><span class="p">,</span>
</span><span class='line'> <span class="s">&#39;after_fn&#39;</span><span class="p">:</span> <span class="k">lambda</span> <span class="n">pipe</span><span class="p">:</span> <span class="p">([</span><span class="s">&#39;catch_errors&#39;</span><span class="p">]</span>
</span><span class='line'>                           <span class="k">if</span> <span class="n">pipe</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;catch_errors&quot;</span><span class="p">)</span>
</span><span class='line'>                           <span class="k">else</span> <span class="p">[])},</span>
</span><span class='line'><span class="p">{</span><span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="s">&#39;dlo&#39;</span><span class="p">,</span> <span class="s">&#39;after_fn&#39;</span><span class="p">:</span> <span class="k">lambda</span> <span class="n">_junk</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;catch_errors&#39;</span><span class="p">,</span> <span class="s">&#39;gatekeeper&#39;</span><span class="p">,</span>
</span><span class='line'>                                           <span class="s">&#39;proxy_logging&#39;</span><span class="p">]}]</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* modify_wsgi_pipeline方法用到的required_filters。</p>

<h3>app_factory</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">app_factory</span><span class="p">(</span><span class="n">global_conf</span><span class="p">,</span> <span class="o">**</span><span class="n">local_conf</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="s">&quot;&quot;&quot;paste.deploy app factory for creating WSGI proxy apps.&quot;&quot;&quot;</span>
</span><span class='line'><span class="n">conf</span> <span class="o">=</span> <span class="n">global_conf</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'><span class="n">conf</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">local_conf</span><span class="p">)</span>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Application</span><span class="p">(</span><span class="n">conf</span><span class="p">)</span>
</span><span class='line'><span class="n">app</span><span class="o">.</span><span class="n">check_config</span><span class="p">()</span>
</span><span class='line'><span class="k">return</span> <span class="n">app</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
* proxy server的工厂方法，初始化server对象并检查配置，然后返回创建好的对象。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift源码分析一——开始]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/04/19/swift-code-explain-total/"/>
    <updated>2014-04-19T17:19:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/04/19/swift-code-explain-total</id>
    <content type="html"><![CDATA[<p>从今天开始准备仔细再看一下swift的源码，然后把理解的内容记录下来。下面是swift源码的代码结构，准备每天更新1～2个文件的代码理解，更新好的在文件名上会在下面的代码结构上有链接出现。</p>

<!--more-->


<p>
swift的源码因为不断在更新，笔记记录的代码就以2014-4-18的为准，我已经fork了一份swift源码到我github上，地址是：<a href="https://github.com/zhaozhiming/swift">https://github.com/zhaozhiming/swift</a>，代码结构如下：</p>

<ul>
<li><h3>swift</h3>

<ul>
<li><h3>account</h3>

<ul>
<li>auditor.py</li>
<li>backend.py</li>
<li>reaper.py</li>
<li>replicator.py</li>
<li>server.py</li>
<li>utils.py</li>
</ul>
</li>
<li><h3>cli</h3>

<ul>
<li>info.py</li>
<li>recon.py</li>
<li>ringbuilder.py</li>
<li>ringbuilder.py</li>
</ul>
</li>
<li><h3>common</h3>

<ul>
<li><h3>middleware</h3>

<ul>
<li>account_quotas.py</li>
<li>acl.py</li>
<li>bulk.py</li>
<li>catch_errors.py</li>
<li>cname_lookup.py</li>
<li>container_quotas.py</li>
<li>container_sync.py</li>
<li>crossdomain.py</li>
<li>dlo.py</li>
<li>domain_remap.py</li>
<li>formpost.py</li>
<li>gatekeeper.py</li>
<li>healthcheck.py</li>
<li>list_endpoints.py</li>
<li>memcache.py</li>
<li>name_check.py</li>
<li>proxy_logging.py</li>
<li>ratelimit.py</li>
<li>recon.py</li>
<li>slo.py</li>
<li>staticweb.py</li>
<li>tempauth.py</li>
<li>tempurl.py</li>
</ul>
</li>
<li><h3>ring</h3>

<ul>
<li>builder.py</li>
<li>ring.py</li>
<li>utils.py</li>
</ul>
</li>
<li>bufferedhttp.py</li>
<li>constraints.py</li>
<li>container_sync_realms.py</li>
<li>daemon.py</li>
<li>db.py</li>
<li>db_replicator.py</li>
<li>direct_client.py</li>
<li>exceptions.py</li>
<li>http.py</li>
<li>internal_client.py</li>
<li>manager.py</li>
<li>memcached.py</li>
<li>request_helpers.py</li>
<li>swob.py</li>
<li>swob.py</li>
<li>utils.py</li>
<li>wsgi.py</li>
</ul>
</li>
<li><h3>container</h3>

<ul>
<li>auditor.py</li>
<li>backend.py</li>
<li>replicator.py</li>
<li>server.py</li>
<li>sync.py</li>
<li>updater.py</li>
</ul>
</li>
<li><h3>obj</h3>

<ul>
<li>auditor.py</li>
<li>diskfile.py</li>
<li>expirer.py</li>
<li>mem_diskfile.py</li>
<li>mem_server.py</li>
<li>replicator.py</li>
<li>server.py</li>
<li>ssync_receiver.py</li>
<li>ssync_sender.py</li>
<li>updater.py</li>
</ul>
</li>
<li><h3>proxy</h3>

<ul>
<li>controllers

<ul>
<li>account.py</li>
<li>base.py</li>
<li>container.py</li>
<li>obj.py</li>
</ul>
</li>
<li>server.py</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift单节点多dev环境部署]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/04/09/swift-multiply-nodes-deploy-in-one-machine/"/>
    <updated>2014-04-09T20:45:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/04/09/swift-multiply-nodes-deploy-in-one-machine</id>
    <content type="html"><![CDATA[<h2>环境目标</h2>

<ul>
<li>同一台机器</li>
<li>1台proxy server</li>
<li>5个storage node</li>
<li>每个storage node有2个dev</li>
</ul>


<!--more-->


<p></p>

<p>安装过程可以按照<a href="http://docs.openstack.org/developer/swift/development_saio.html">swift all in one</a>文档进行搭建，在操作过程中需要修改以下的地方。</p>

<h2>Using a loopback device for storage</h2>

<ol>
<li>Create the file for the loopback device:<br/>
<code>(这里的标题和编号是与saio的保持一致，这样方便大家按照saio的编号进行修改，后面的步骤与此相同，不再做说明)</code></li>
</ol>


<p>修改前：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo truncate -s 1GB /srv/swift-disk
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修改后：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo truncate -s 500GB /srv/swift-disk
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>将xfs文件系统的大小改为500GB，原来的1GB太小不适合做测试。</p>

<ol>
<li>Create the mount point and the individualized links: <br/>
将原来的脚本修改为：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir /mnt/sdb1
</span><span class='line'>sudo mount /mnt/sdb1
</span><span class='line'>sudo mkdir /mnt/sdb1/1 /mnt/sdb1/2 /mnt/sdb1/3 /mnt/sdb1/4 /mnt/sdb1/5
</span><span class='line'>sudo chown <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>:<span class="k">${</span><span class="nv">USER</span><span class="k">}</span> /mnt/sdb1/*
</span><span class='line'><span class="k">for </span>x in <span class="o">{</span>1..5<span class="o">}</span>; <span class="k">do </span>sudo ln -s /mnt/sdb1/<span class="nv">$x</span> /srv/<span class="nv">$x</span>; <span class="k">done</span>
</span><span class='line'>sudo mkdir -p /srv/1/node/dev1 /srv/1/node/dev2 /srv/2/node/dev3 /srv/2/node/dev4 /srv/3/node/dev5 /srv/3/node/dev6 /srv/4/node/dev7 /srv/4/node/dev8 /srv/5/node/dev9 /srv/5/node/dev10 /var/run/swift
</span><span class='line'>sudo chown -R <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>:<span class="k">${</span><span class="nv">USER</span><span class="k">}</span> /var/run/swift
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;&lt;strong&gt;Make sure to include the trailing slash after /srv/<span class="nv">$x</span>/&lt;/strong&gt;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;for x in <span class="o">{</span>1..5<span class="o">}</span>; <span class="k">do </span>sudo chown -R <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>:<span class="k">${</span><span class="nv">USER</span><span class="k">}</span> /srv/<span class="nv">$x</span>/; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
</ol>


<p>创建属于5个节点的文件夹，在每个节点文件夹下创建2个dev文件夹，表示1个节点有2个dev，其中region1有6台dev(1~6)，region2有4台dev(7~10)。</p>

<h2>Common Post-Device Setup</h2>

<p>Add the following lines to /etc/rc.local (before the exit 0): <br/>
修改前：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p /var/cache/swift /var/cache/swift2 /var/cache/swift3 /var/cache/swift4
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修改后：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p /var/cache/swift /var/cache/swift2 /var/cache/swift3 /var/cache/swift4 /var/cache/swift5
</span></code></pre></td></tr></table></div></figure></notextile></div>
因为有5个节点，所以增加了1个新节点的缓存文件夹。</p>

<h2>Setting up rsync</h2>

<p>Here is the default rsyncd.conf file contents maintained in the repo that is copied and fixed up above:</p>

<p>在/etc/rsyncd.conf文件追加以下内容：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>account6052<span class="o">]</span>
</span><span class='line'>max <span class="nv">connections</span> <span class="o">=</span> 25
</span><span class='line'><span class="nv">path</span> <span class="o">=</span> /srv/5/node/
</span><span class='line'><span class="nb">read </span><span class="nv">only</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>lock <span class="nv">file</span> <span class="o">=</span> /var/lock/account6052.lock&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container6051<span class="o">]</span>
</span><span class='line'>max <span class="nv">connections</span> <span class="o">=</span> 25
</span><span class='line'><span class="nv">path</span> <span class="o">=</span> /srv/5/node/
</span><span class='line'><span class="nb">read </span><span class="nv">only</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>lock <span class="nv">file</span> <span class="o">=</span> /var/lock/container6051.lock&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>object6050<span class="o">]</span>
</span><span class='line'>max <span class="nv">connections</span> <span class="o">=</span> 25
</span><span class='line'><span class="nv">path</span> <span class="o">=</span> /srv/5/node/
</span><span class='line'><span class="nb">read </span><span class="nv">only</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>lock <span class="nv">file</span> <span class="o">=</span> /var/lock/object6050.lock
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>增加了新节点的account, container, object服务的同步配置。</p>

<p>You should see the following output from the above command:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>account6012
</span><span class='line'>account6022
</span><span class='line'>account6032
</span><span class='line'>account6042
</span><span class='line'>account6052
</span><span class='line'>container6011
</span><span class='line'>container6021
</span><span class='line'>container6031
</span><span class='line'>container6041
</span><span class='line'>container6051
</span><span class='line'>object6010
</span><span class='line'>object6020
</span><span class='line'>object6030
</span><span class='line'>object6040
</span><span class='line'>object6050
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>验证rsync可以看到新增的account, container, object信息。</p>

<h2>Optional: Setting up rsyslog for individual logging</h2>

<p>将/etc/rsyslog.d/10-swift.conf文件内容修改为：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Uncomment the following to have a log containing all logs together&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;local1,local2,local3,local4,local5.*   /var/log/swift/all.log&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Uncomment the following to have hourly proxy logs <span class="k">for </span>stats processing&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="nv">$template</span> HourlyProxyLog,&amp;ldquo;/var/log/swift/hourly/%<span class="nv">$YEAR</span>%%<span class="nv">$MONTH</span>%%<span class="nv">$DAY</span>%%<span class="nv">$HOUR</span>%&amp;rdquo;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;local1.*;local1.!notice ?HourlyProxyLog&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local1.&lt;em&gt;;local1.!notice /var/log/swift/proxy.log
</span><span class='line'>local1.notice           /var/log/swift/proxy.error
</span><span class='line'>local1.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local2.&lt;em&gt;;local2.!notice /var/log/swift/storage1.log
</span><span class='line'>local2.notice           /var/log/swift/storage1.error
</span><span class='line'>local2.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local3.&lt;em&gt;;local3.!notice /var/log/swift/storage2.log
</span><span class='line'>local3.notice           /var/log/swift/storage2.error
</span><span class='line'>local3.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local4.&lt;em&gt;;local4.!notice /var/log/swift/storage3.log
</span><span class='line'>local4.notice           /var/log/swift/storage3.error
</span><span class='line'>local4.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local5.&lt;em&gt;;local5.!notice /var/log/swift/storage4.log
</span><span class='line'>local5.notice           /var/log/swift/storage4.error
</span><span class='line'>local5.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local6.&lt;em&gt;;local6.!notice /var/log/swift/storage5.log
</span><span class='line'>local6.notice           /var/log/swift/storage5.error
</span><span class='line'>local6.&lt;/em&gt;                ~&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local7.&lt;em&gt;;local7.!notice /var/log/swift/expirer.log
</span><span class='line'>local7.notice           /var/log/swift/expirer.error
</span><span class='line'>local7.&lt;/em&gt;                ~
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修改日志配置，将原来的local6指向storage node 5, 原来的expirer用local7来记录日志（<code>注意：后面在修改各个节点的服务配置文件时需要知道这些日志配置信息</code>）。</p>

<h2>Configuring each node</h2>

<ol>
<li>/etc/swift/object-expirer.conf</li>
</ol>


<p>修改前：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL6   &lt;br/&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修改后：<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL7
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>新增account5的配置文件 /etc/swift/account-server/5.conf：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>DEFAULT<span class="o">]</span>
</span><span class='line'><span class="nv">devices</span> <span class="o">=</span> /srv/5/node
</span><span class='line'><span class="nv">mount_check</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nv">disable_fallocate</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">bind_port</span> <span class="o">=</span> 6052
</span><span class='line'><span class="nv">workers</span> <span class="o">=</span> 1
</span><span class='line'><span class="nv">user</span> <span class="o">=</span> swift
</span><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL6
</span><span class='line'><span class="nv">recon_cache_path</span> <span class="o">=</span> /var/cache/swift5
</span><span class='line'><span class="nv">eventlet_debug</span> <span class="o">=</span> <span class="nb">true</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>pipeline:main<span class="o">]</span>
</span><span class='line'><span class="nv">pipeline</span> <span class="o">=</span> recon account-server&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>app:account-server<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#account&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>filter:recon<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#recon&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>account-replicator<span class="o">]</span>
</span><span class='line'><span class="nv">vm_test_mode</span> <span class="o">=</span> yes&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>account-auditor<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>account-reaper<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>新增container5的配置文件/etc/swift/container-server/5.conf：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>DEFAULT<span class="o">]</span>
</span><span class='line'><span class="nv">devices</span> <span class="o">=</span> /srv/5/node
</span><span class='line'><span class="nv">mount_check</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nv">disable_fallocate</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">bind_port</span> <span class="o">=</span> 6051
</span><span class='line'><span class="nv">workers</span> <span class="o">=</span> 1
</span><span class='line'><span class="nv">user</span> <span class="o">=</span> swift
</span><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL6
</span><span class='line'><span class="nv">recon_cache_path</span> <span class="o">=</span> /var/cache/swift5
</span><span class='line'><span class="nv">eventlet_debug</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">allow_versions</span> <span class="o">=</span> <span class="nb">true</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>pipeline:main<span class="o">]</span>
</span><span class='line'><span class="nv">pipeline</span> <span class="o">=</span> recon container-server&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>app:container-server<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#container&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>filter:recon<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#recon&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container-replicator<span class="o">]</span>
</span><span class='line'><span class="nv">vm_test_mode</span> <span class="o">=</span> yes&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container-updater<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container-auditor<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>container-sync<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>新增object5的配置文件/etc/swift/object-server/5.conf：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>DEFAULT<span class="o">]</span>
</span><span class='line'><span class="nv">devices</span> <span class="o">=</span> /srv/5/node
</span><span class='line'><span class="nv">mount_check</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nv">disable_fallocate</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nv">bind_port</span> <span class="o">=</span> 6050
</span><span class='line'><span class="nv">workers</span> <span class="o">=</span> 1
</span><span class='line'><span class="nv">user</span> <span class="o">=</span> swift
</span><span class='line'><span class="nv">log_facility</span> <span class="o">=</span> LOG_LOCAL6
</span><span class='line'><span class="nv">recon_cache_path</span> <span class="o">=</span> /var/cache/swift5
</span><span class='line'><span class="nv">eventlet_debug</span> <span class="o">=</span> <span class="nb">true</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>pipeline:main<span class="o">]</span>
</span><span class='line'><span class="nv">pipeline</span> <span class="o">=</span> recon object-server&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>app:object-server<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#object&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>filter:recon<span class="o">]</span>
</span><span class='line'><span class="nv">use</span> <span class="o">=</span> egg:swift#recon&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>object-replicator<span class="o">]</span>
</span><span class='line'><span class="nv">vm_test_mode</span> <span class="o">=</span> yes&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>object-updater<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>object-auditor<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Setting up scripts for running Swift</h2>

<ol>
<li>Construct the initial rings using the provided script:</li>
</ol>


<p>先修改bin/remakerings文件，在执行remakerings命令：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;cd /etc/swift&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rm -f &lt;em&gt;.builder &lt;/em&gt;.ring.gz backups/&lt;em&gt;.builder backups/&lt;/em&gt;.ring.gz&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;swift-ring-builder object.builder create 19 6 1
</span><span class='line'>swift-ring-builder object.builder add r1z1-127.0.0.1:6010/dev1 1
</span><span class='line'>swift-ring-builder object.builder add r1z1-127.0.0.1:6010/dev2 1
</span><span class='line'>swift-ring-builder object.builder add r1z2-127.0.0.1:6020/dev3 1
</span><span class='line'>swift-ring-builder object.builder add r1z2-127.0.0.1:6020/dev4 1
</span><span class='line'>swift-ring-builder object.builder add r1z3-127.0.0.1:6030/dev5 1
</span><span class='line'>swift-ring-builder object.builder add r1z3-127.0.0.1:6030/dev6 1
</span><span class='line'>swift-ring-builder object.builder add r2z1-127.0.0.1:6040/dev7 1
</span><span class='line'>swift-ring-builder object.builder add r2z1-127.0.0.1:6040/dev8 1
</span><span class='line'>swift-ring-builder object.builder add r2z2-127.0.0.1:6050/dev9 1
</span><span class='line'>swift-ring-builder object.builder add r2z2-127.0.0.1:6050/dev10 1
</span><span class='line'>swift-ring-builder object.builder rebalance
</span><span class='line'>swift-ring-builder container.builder create 19 6 1
</span><span class='line'>swift-ring-builder container.builder add r1z1-127.0.0.1:6011/dev1 1
</span><span class='line'>swift-ring-builder container.builder add r1z1-127.0.0.1:6011/dev2 1
</span><span class='line'>swift-ring-builder container.builder add r1z2-127.0.0.1:6021/dev3 1
</span><span class='line'>swift-ring-builder container.builder add r1z2-127.0.0.1:6021/dev4 1
</span><span class='line'>swift-ring-builder container.builder add r1z3-127.0.0.1:6031/dev5 1
</span><span class='line'>swift-ring-builder container.builder add r1z3-127.0.0.1:6031/dev6 1
</span><span class='line'>swift-ring-builder container.builder add r2z1-127.0.0.1:6041/dev7 1
</span><span class='line'>swift-ring-builder container.builder add r2z1-127.0.0.1:6041/dev8 1
</span><span class='line'>swift-ring-builder container.builder add r2z2-127.0.0.1:6051/dev9 1
</span><span class='line'>swift-ring-builder container.builder add r2z2-127.0.0.1:6051/dev10 1
</span><span class='line'>swift-ring-builder container.builder rebalance
</span><span class='line'>swift-ring-builder account.builder create 19 6 1
</span><span class='line'>swift-ring-builder account.builder add r1z1-127.0.0.1:6012/dev1 1
</span><span class='line'>swift-ring-builder account.builder add r1z1-127.0.0.1:6012/dev2 1
</span><span class='line'>swift-ring-builder account.builder add r1z2-127.0.0.1:6022/dev3 1
</span><span class='line'>swift-ring-builder account.builder add r1z2-127.0.0.1:6022/dev4 1
</span><span class='line'>swift-ring-builder account.builder add r1z3-127.0.0.1:6032/dev5 1
</span><span class='line'>swift-ring-builder account.builder add r1z3-127.0.0.1:6032/dev6 1
</span><span class='line'>swift-ring-builder account.builder add r2z1-127.0.0.1:6042/dev7 1
</span><span class='line'>swift-ring-builder account.builder add r2z1-127.0.0.1:6042/dev8 1
</span><span class='line'>swift-ring-builder account.builder add r2z2-127.0.0.1:6052/dev9 1
</span><span class='line'>swift-ring-builder account.builder add r2z2-127.0.0.1:6052/dev10 1
</span><span class='line'>swift-ring-builder account.builder rebalance
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>新ring环有2的19次方，6个副本，修改后重新生成ring环即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[openstack swift中间件编写]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/02/17/how-to-write-a-openstack-swift-middle-ware/"/>
    <updated>2014-02-17T20:33:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/02/17/how-to-write-a-openstack-swift-middle-ware</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2014-2/swift.jpg"></p>

<p>关于openstack swift的资料可以看<a href="http://zh.wikipedia.org/wiki/OpenStack">这里</a>，<a href="http://www.programmer.com.cn/12403/">这里</a>还有<a href="http://www.ibm.com/developerworks/cn/cloud/library/1310_zhanghua_openstackswift/">这里</a>。</p>

<!--more-->


<p></p>

<h2>准备环境</h2>

<p>从零开始接触的同学可以先从swift的<a href="http://docs.openstack.org/developer/swift/development_saio.html">all in one</a>部署开始学习，在本机搭建好swift环境就可以进行简单的测试了。由于swift是用Python语言写的，如果要开发swift的中间件的还需要在本地安装Pythone的IDE，我比较喜欢JETBRAIN（他们比较出名的是JAVA的IDE——IDEA）公司的IDE——Pycharm。准备环境如下:</p>

<ul>
<li>Ububutn 12.04 LTS 64bit</li>
<li>Python2.7(虽然现在已经有Python3了，但swift是用2.x的Python写的，Python3不向后兼容Python2)</li>
<li>Pycharm3</li>
</ul>


<h2>中间件介绍</h2>

<p>swift通过提供基于HTTP协议的API给外界调用来完成对象存储的功能，我们从swift的各个部署说明里面可以看到，proxy server和storage node的配置文件里面都有一个<code>[pipeline:main]</code>，这个是swift各个服务的请求链，由多个中间件组成的一个中间件集合。pipeline有点像J2EE里面filter，每个http请求需要经过各个服务的pipeline。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>proxy-server.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="ni">&amp;hellip;</span>
</span><span class='line'>[pipeline:main]<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>Yes, proxy-logging appears twice. This is so that<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>middleware-originated requests get logged too.<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>pipeline = catch_errors healthcheck proxy-logging bulk ratelimit crossdomain slo cache tempurl tempauth staticweb account-quotas container-quotas proxy-logging proxy-server
</span><span class='line'><span class="ni">&amp;hellip;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>account-server.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="ni">&amp;hellip;</span>
</span><span class='line'>[pipeline:main]
</span><span class='line'>pipeline = recon account-server
</span><span class='line'><span class="ni">&amp;hellip;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>中间件编写</h2>

<p>了解了swift的基本功能流程后，我们就可以来写自己的中间件了。</p>

<p>没有写过中间件的同学可以通过学习其他中间件开始，在swift的源码中配置了很多中间件，有一些功能非常简单。比如name_check中间件，这个中间件的作用是拿来分析请求的url，判断url中是否有特殊字符，长度是否超出规定长度等。这个中间件没有配置在swift的标准配置中，有需要的可以自行加上本机的swift环境做测试。</p>

<p>我们先来看一下name_check中间件的配置信息：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>proxy-server.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>[pipeline:main]
</span><span class='line'>pipeline = catch_errors healthcheck name_check cache ratelimit tempauth sos<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>       proxy-logging proxy-server
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>[filter:name_check]
</span><span class='line'>use = egg:swift#name_check
</span><span class='line'>forbidden_chars = <span class="ni">&amp;lsquo;&amp;ldquo;</span>`<span class="ni">&amp;lt;</span>&gt;
</span><span class='line'>maximum_length = 255
</span></code></pre></td></tr></table></div></figure></notextile></div>
在上面的例子中，name_check中间件加在healthcheck这个中间件后面，filter:name_check下面的配置信息是name_check的一些配置参数。</p>

<ul>
<li>forbidden_chars: 指url中不能包含的特殊字符</li>
<li>maximum_length: 指url的最大长度</li>
</ul>


<p>我们再来看name_check的单元测试：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>test_name_check.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">FakeApp</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">env</span><span class="p">,</span> <span class="n">start_response</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">Response</span><span class="p">(</span><span class="n">body</span><span class="o">=</span><span class="s">&quot;OK&quot;</span><span class="p">)(</span><span class="n">env</span><span class="p">,</span> <span class="n">start_response</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">TestNameCheckMiddleware</span><span class="p">(</span><span class="n">unittest</span><span class="o">.</span><span class="n">TestCase</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">setUp</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">conf</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;maximum_length&#39;</span><span class="p">:</span> <span class="n">MAX_LENGTH</span><span class="p">,</span> <span class="s">&#39;forbidden_chars&#39;</span><span class="p">:</span>
</span><span class='line'>                 <span class="n">FORBIDDEN_CHARS</span><span class="p">,</span> <span class="s">&#39;forbidden_regexp&#39;</span><span class="p">:</span> <span class="n">FORBIDDEN_REGEXP</span><span class="p">}</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">test_check</span> <span class="o">=</span> <span class="n">name_check</span><span class="o">.</span><span class="n">filter_factory</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">conf</span><span class="p">)(</span><span class="n">FakeApp</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">test_valid_length_and_character</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="n">path</span> <span class="o">=</span> <span class="s">&#39;/V1.0/&#39;</span> <span class="o">+</span> <span class="s">&#39;c&#39;</span> <span class="o">*</span> <span class="p">(</span><span class="n">MAX_LENGTH</span> <span class="o">-</span> <span class="mi">6</span><span class="p">)</span>
</span><span class='line'>    <span class="n">resp</span> <span class="o">=</span> <span class="n">Request</span><span class="o">.</span><span class="n">blank</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">environ</span><span class="o">=</span><span class="p">{</span><span class="s">&#39;REQUEST_METHOD&#39;</span><span class="p">:</span> <span class="s">&#39;PUT&#39;</span><span class="p">}</span>
</span><span class='line'>                         <span class="p">)</span><span class="o">.</span><span class="n">get_response</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">test_check</span><span class="p">)</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">assertEquals</span><span class="p">(</span><span class="n">resp</span><span class="o">.</span><span class="n">body</span><span class="p">,</span> <span class="s">&#39;OK&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">......</span> <span class="c"># other test cases    </span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">name</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">main</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;&amp;</span><span class="n">rsquo</span><span class="p">;:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">unittest</span><span class="o">.</span><span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
看源码先从单元测试看起，可以以最快的速度了解源代码的功能。在这个测试案例中，测试先mock了一个虚拟的app，这个app不会真实的调用swift，而是会将http response返回预设好的值。<br/>
再看其中的一个测试案例，这里给定了一个最大长度url，然后通过调用name_check中间件，期望请求可以正常通过。</p>

<p>最后我们再来看name_check中间件的<a href="https://github.com/openstack/swift/blob/master/swift/common/middleware/name_check.py">源码</a>几个方法：
* <strong>init</strong>: 中间件的初始化方法
* <strong>call</strong>: 中间件被调用时触发的方法
* filter_factory: 这个是类以外的方法，在swift服务启动时会创建中间件实例，并加入到pipeline中。</p>

<p>学习完这个简单的中间件后，相信大家都可以依葫芦画瓢开始写自己的中间件了。</p>

<h2>修改配置文件</h2>

<p>编写完中间件之后，还需要将中间件配置到swift中，这样才算真正完成中间件的创建。</p>

<h4>首先先停止swift的服务</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>shell </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>swift@ubuntu:~$ swift-init main stop
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>接着修改conf文件</h4>

<p>假设你增加的中间件是proxy server的中间件，就修改proxy-server.conf，自行决定要放到pipeline中的哪个位置，具体要看你的中间件是执行什么功能。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>proxy-server.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>[pipeline:main]
</span><span class='line'>pipeline = catch_errors healthcheck your_middleware cache ratelimit tempauth sos<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>       proxy-logging proxy-server
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>[filter:your_middleware]
</span><span class='line'>use = egg:swift#your_middleware
</span><span class='line'>your_middleware_config1 = value1
</span><span class='line'>your_middleware_config1 = value2
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>要修改swift的根目录下的setup.cfg文件</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>setup.cfg </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>paste.filter_factory =<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>#这里加入一行自己的中间件，可以看下name_check中间件是怎么写的
</span><span class='line'>name_check = swift.common.middleware.name_check:filter_factory
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>执行命令重新安装swift</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>shell </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>swift@ubuntu:~$ cd swift目录
</span><span class='line'>swift@ubuntu:~$ sudo python setyp.py develop
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>最后重启swift服务</h4>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>shell </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>swift@ubuntu:~$ swift-init main start
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
