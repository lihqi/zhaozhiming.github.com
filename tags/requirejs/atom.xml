<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: requirejs | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/tags/requirejs/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2015-09-23T11:45:18+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RequireJS的简单使用]]></title>
    <link href="http://zhaozhiming.github.io/blog/2014/12/19/requirejs-simple-use/"/>
    <updated>2014-12-19T11:05:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2014/12/19/requirejs-simple-use</id>
    <content type="html"><![CDATA[<p>{% img /images/post/2014-12/requirejs.png %}</p>

<p>在没有<a href="http://requirejs.org/">RequireJS</a>以前，我们的html页面都需要配置很多js文件，有了RequireJS以后，我们只需要简单的一个RequireJS的文件就可以了。</p>

<!--more-->


<h2>工程目录</h2>

<p>先看下我们的工程目录，主要引入了Jqury、AngularJS和RequireJS这几个js文件，login.html、main.js和login.js是我们自己的文件。</p>

<p>{% codeblock lang:sh %}
&mdash;webapp
  |&mdash;resources</p>

<pre><code>|--scripts
  |--vendor
    |--jquery.js
    |--angularjs.js
    |--requirejs.js
  |--login.js
  |--main.js  
</code></pre>

<p>  |&mdash;WEB-INF
  |&mdash;login.html
{% endcodeblock %}</p>

<h2>在html页面中加入RequireJS</h2>

<p>首先在html页面我们先引入requirejs，可以看到script标签中有个data-main属性，这个是RequireJS的属性标签，指向我们工程里面的main.js文件，注意这里不需要写<code>.js</code>后缀。</p>

<p>{% codeblock index.html lang:html %}
&lt;!DOCTYPE html>
<html lang="en" ng-app="app">
<head></p>

<pre><code>&lt;meta charset="UTF-8"&gt;
&lt;title&gt;My App&lt;/title&gt;
&lt;script src="resources/scripts/vendor/require.js" data-main="resources/srcipts/main"&gt;&lt;/script&gt;
</code></pre>

<p></head>
<body></p>

<div>
    <form name="LoginForm" method="post" action="j_spring_security_check">
        <div style="display: block;">
            <div>
                <h1>
                    <span class="ui-icon add"></span>用户登录
                </h1>
            </div>
            <div class="content">
                <div id="error" style="display: none; color: #c9302c" align="center">
                    <h3>认证失败，请重新登录</h3>
                </div>
                <div id="logout" style="display: none; color: #02547f" align="center">
                    <h3>已成功登出</h3>
                </div>

                <ul>
                    <li><label>
                        <span>用户名</span>
                        <input type="text" name="j_username">
                    </label></li>
                    <li><label>
                        <span>密码</span>
                        <input type="password" name="j_password">
                    </label></li>
                </ul>
            </div>
            <div>
                <button type="submit" name="logon" value="Logon">登录</button>
            </div>
        </div>
    </form>
</div>


<p></body>
</html>
{% endcodeblock %}</p>

<h2>main.js</h2>

<p>下面是我们的main.js。</p>

<p>{% codeblock main.js lang:js %}
require.config({
   paths:{</p>

<pre><code>  angular: 'vendor/angular',
  jquery: 'vendor/jquery'
</code></pre>

<p>   },
   shim:{</p>

<pre><code>  angular:{
     deps: ['jquery'],
     exports: 'angular'
  }
</code></pre>

<p>   } <br/>
});</p>

<p>require([&lsquo;angular&rsquo;, &lsquo;login&rsquo;], function(angular) {  <br/>
});
{% endcodeblock %}</p>

<ul>
<li><code>paths</code>里面指定了jqury和angularjs对应的js文件路径，同样不需要写js后缀，并给他们起了对应的别名。</li>
<li><code>shim</code>属性里面配置了deps数组，表明angular依赖jqury，还有exports值，表明这个模块外部调用时的名称。</li>
<li>最后一部分代码表示我们的html页面需要使用哪些js文件，比如我们使用了angular和login这2个js文件的功能，同时angular依赖了jqurey，所以html页面加载的时候就会同时将jquery.js、angularjs.js和login.js这几个js文件加载进来。</li>
</ul>


<h2>login.js</h2>

<p>最后看一下我们的login.js，通过之前的main.js我们已经加载好了Jquery和AngularJS这些第三方JS库，要使用它们的话需要通过<code>define</code>的方式来引用。</p>

<p>比如下面的js文件使用了jquery的功能，我们可以在<code>define</code>后面添加<code>angular</code>这个名称，因为前面在<code>shim</code>属性里面已经定义了<code>angular</code>依赖<code>jquery</code>，所以使用<code>angular</code>也可以用到<code>jquery</code>的功能。(当然我们也可以单独添加<code>jquery</code>，但这样就使用不到<code>angular</code>的功能了)</p>

<p>{% codeblock login.js lang:js %}
define([&lsquo;angular&rsquo;], function(angular) {</p>

<pre><code>function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&amp;]" + name + "=([^&amp;#]*)"),
        results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

if(getParameterByName("error")) {
    $("#error").show();
}

if(getParameterByName("logout")) {
    $("#logout").show();
}   
</code></pre>

<p>});
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
