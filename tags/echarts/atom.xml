<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: echarts | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/tags/echarts/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2018-01-16T14:47:17+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何处理 Echarts 中的地图散列点点击事件]]></title>
    <link href="http://zhaozhiming.github.io/blog/2017/10/27/how-to-handle-map-scatter-click-event-in-echarts/"/>
    <updated>2017-10-27T14:33:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2017/10/27/how-to-handle-map-scatter-click-event-in-echarts</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2017/10/echarts.png" width="400" height="300"></p>

<p>Echarts 是百度比较成功的一个开源图形库，现在国内很多公司和项目都使用它。今天介绍一下基于 Echarts 3.0，如何处理地图散列点的点击事件。</p>

<!--more-->


<h2>问题介绍</h2>

<p><img src="/images/post/2017/10/echarts_map.png"></p>

<p>我们想在地图上处理散列点（图中红点）的点击事件，比如点击某个点的时候弹出一个 Modal 框，或者跳转一个新页面什么的。但是 Echarts 提供给我们的事件 API 非常有限，就只有一个比较笼统的<code>click</code>事件 API，我们如何通过这个 API 来实现我们需要的效果呢？</p>

<h2>地图散列点效果</h2>

<p>首先我们来看下实现该图形的核心代码，如下所示：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>  <span class="kr">const</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">series</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;foo&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;map&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">geoIndex</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">data</span><span class="o">:</span> <span class="p">[</span><span class="cm">/* 地图相关数据 */</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">zlevel</span><span class="o">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;effectScatter&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">animation</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">data</span><span class="o">:</span> <span class="p">[</span><span class="cm">/* 散列点数据 */</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">coordinateSystem</span><span class="o">:</span> <span class="s1">&#39;geo&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">showEffectOn</span><span class="o">:</span> <span class="s1">&#39;render&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">rippleEffect</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">scale</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">brushType</span><span class="o">:</span> <span class="s1">&#39;fill&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">itemStyle</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">normal</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">color</span><span class="o">:</span> <span class="s1">&#39;red&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">shadowBlur</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">shadowColor</span><span class="o">:</span> <span class="s1">&#39;red&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">zlevel</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'><span class="p">],</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这里主要列出 Echarts 里面的 options 参数，对 Echarts 开发比较熟悉的同学应该会知道，options 是每个 Echarts 图形的配置对象。</p>

<p>上面代码显示了中国地图各个省份的指数分布，另外还显示了一些地图上的散列点，所以这里面有 2 种不同类型的数据。</p>

<p>可以看到 options 里面 series 属性包含了 2 种对象，一种 type 是<code>map</code>的对象，表示地图各个省份的指数分布；另外一种对象的 type 是<code>effectScatter</code>，表示的是地图上面的散列点。</p>

<h2>Echarts 的点击事件</h2>

<p>然后我们再来看 Echarts 的点击事件，官方代码如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">myChart</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">click</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">params</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 点击事件操作</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>对，就只有一个<code>click</code>事件，没有针对不同类型图形的点击事件。</p>

<p>我们可以试用一下这个点击事件，看看里面的<code>params</code>参数能不能对我们有所帮助？下面是一个点击全国地图某省份事件的<code>params</code>参数：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">params</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">componentSubType</span><span class="o">:</span> <span class="s2">&quot;map&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">componentType</span><span class="o">:</span><span class="s2">&quot;series&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">data</span><span class="o">:</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;西藏&quot;</span><span class="p">,</span> <span class="nx">value</span><span class="o">:</span> <span class="mi">75</span><span class="p">},</span>
</span><span class='line'><span class="nx">dataIndex</span><span class="o">:</span><span class="mi">27</span><span class="p">,</span>
</span><span class='line'><span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;西藏&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">seriesId</span><span class="o">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">seriesIndex</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'><span class="nx">seriesName</span><span class="o">:</span> <span class="s2">&quot;foo&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">seriesType</span><span class="o">:</span><span class="s2">&quot;map&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">type</span><span class="o">:</span> <span class="s2">&quot;click&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">value</span><span class="o">:</span> <span class="mi">75</span><span class="p">,</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>可以看到这个对象里面包含了很多属性，有类型、数据对象，系列名称、值等，但这里面看不出有什么是我们需要的。</p>

<p>那我们再来看下点击了某个散列点后的参数，看看有什么不同。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">params</span><span class="o">:</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">componentSubType</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="s2">&quot;effectScatter&quot;</span><span class="p">,</span><span class="err"> </span>
</span><span class='line'><span class="nx">componentType</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="s2">&quot;series&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">data</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="err"> </span><span class="s2">&quot;point1&quot;</span><span class="p">,</span><span class="err"> </span><span class="nx">value</span><span class="o">:</span><span class="err"> </span><span class="nb">Array</span><span class="p">(</span><span class="mi">3</span><span class="p">)},</span><span class="err"> </span>
</span><span class='line'><span class="nx">dataIndex</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="mi">0</span><span class="p">,</span><span class="err"> </span>
</span><span class='line'><span class="nx">name</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="s2">&quot;point1&quot;</span><span class="p">,</span>
</span><span class='line'><span class="nx">seriesId</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="s2">&quot;-0&quot;</span><span class="p">,</span><span class="err"> </span>
</span><span class='line'><span class="nx">seriesIndex</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="mi">1</span><span class="p">,</span><span class="err"> </span>
</span><span class='line'><span class="nx">seriesName</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="err"> </span>
</span><span class='line'><span class="nx">seriesType</span><span class="err"> </span><span class="o">:</span><span class="err"> </span><span class="s2">&quot;effectScatter&quot;</span><span class="p">,</span><span class="err"> </span>
</span><span class='line'><span class="nx">type</span><span class="o">:</span><span class="err"> </span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="err"> </span>
</span><span class='line'><span class="nx">value</span><span class="o">:</span><span class="p">[</span><span class="mf">125.03</span><span class="p">,</span><span class="err"> </span><span class="mf">46.58</span><span class="p">,</span><span class="err"> </span><span class="mi">20</span><span class="p">],</span><span class="err"> </span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>对比发现，我们可以通过<code>seriesType</code>知道是哪种类型数据的点击事件，或者通过<code>seriesIndex</code>也可以知道。</p>

<p>然后通过<code>dataIndex</code>我们可以得到数据在原始数组中的位置，或者直接通过<code>data</code>和<code>value</code>来直接获取点的相关数据。</p>

<h2>根据参数判断是哪种图形的点击事件</h2>

<p>其实饶了这么一大圈就是想让大家知道，我们可以在<code>click</code>事件中，通过这些参数来判断哪种图形的点击事件是我们想要处理的，如果不是我们需要处理的点击事件，我们直接跳出函数就可以了。示例代码如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">myChart</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">click</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">params</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">const</span> <span class="p">{</span> <span class="nx">seriesIndex</span><span class="p">,</span> <span class="nx">seriesType</span><span class="err"> </span><span class="p">}</span> <span class="o">=</span> <span class="nx">params</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">// 方法一：通过 seriesIndex 来判断，map 类型的 seriesIndex 为 0</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">seriesIndex</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// 方法二：通过 seriesType 来判断</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">seriesType</span> <span class="o">===</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">map</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span> <span class="k">return</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// 通过上面判断逻辑走到这里的就是散列点的事件了</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>缺点分析</h2>

<p>虽然这个方法可以解决问题，但是有个不好的地方需要指出，就是点击散列点的时候，鼠标点击的位置必须非常准确，要点击散列点的中心位置才能捕获到该类型事件，否则看起来就像点击没有效果一样。</p>

<h2>Echarts 的地图数据</h2>

<p>另外在这里提示一下，很多同学可能以为 Echarts 的地图数据不能下载了，因为 <a href="http://ecomfe.github.io/echarts-map-tool/">Echarts 的官方网站</a> 上也是这么写的，但是 Echarts 的 github 项目中并没有删除这些数据 (<a href="https://github.com/ecomfe/echarts/tree/master/map">见这里</a>)，所以大家不要被 Echarts 忽悠了😄。</p>

<p>这些数据包括<code>js</code>和<code>json</code>两种格式的，内容包括中国地图及各省份的地图。</p>

<h2>总结</h2>

<p>文章介绍了处理 Echarts 地图散列点事件的方法，如果大家有更好的方法，希望留言一起讨论，最后附上文章相关的在线 Demo 例子。<a href="https://codesandbox.io/s/lxljr76vp7">本文的 Demo</a></p>
]]></content>
  </entry>
  
</feed>
