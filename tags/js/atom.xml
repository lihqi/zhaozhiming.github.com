<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: JS | Hacker and Geeker's Way]]></title>
  <link href="http://zhaozhiming.github.io/tags/js/atom.xml" rel="self"/>
  <link href="http://zhaozhiming.github.io/"/>
  <updated>2018-04-29T17:02:08+08:00</updated>
  <id>http://zhaozhiming.github.io/</id>
  <author>
    <name><![CDATA[赵芝明]]></name>
    <email><![CDATA[kingzzm1982@sina.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[前端学习之道]]></title>
    <link href="http://zhaozhiming.github.io/blog/2015/12/06/how-to-learn-front-end/"/>
    <updated>2015-12-06T15:29:00+08:00</updated>
    <id>http://zhaozhiming.github.io/blog/2015/12/06/how-to-learn-front-end</id>
    <content type="html"><![CDATA[<p><img src="/images/post/2015-12/front-end-learn.png" width="400" height="350"></p>

<p>最近一直在学习前端，今天看到一篇关于前端学习的文章，文中的观点深以为然，于是简单翻译了一下，文章是根据自己理解翻译的，不是直译，在翻译过程中会穿插介绍一些相关的学习资料。<br/>
原文地址见这里：<a href="https://medium.com/@djsmith42/what-web-framework-should-i-learn-a9285925ca1f#.g49ru17as">我应该学习什么web框架</a>。</p>

<!--more-->


<p></p>

<h2>我应该学习什么web框架</h2>

<p>很多人问我这个问题，以前我会反问你问这个问题的动机是什么，是想提高你收割offer的能力，还是对个人学习比较感兴趣？现在我已不再相信这些问题的答案了，因为我已经有了这个问题的“通用”答案。</p>

<p>在即将迈进2016年的今天，明显感觉web开发的技术更新步伐越来越快，现在已经没有一种“框架”可以终身使用，事实上现在已经没有任何一种“东西”（包括语言，工具等）可以使用终身。比如在今年我在工作中就使用了3种构建工具，3种web框架，3种编程语言（译者注：作者经历跟我有点相似，我今年web开发框架用了3种，前端框架用了2种，编程语言用了3种，构建工具用了3种）。</p>

<p><strong> 所以我觉得值得持续做的事情就是不断学习。</strong></p>

<p>新技术不断涌现，推陈出新的速度越来越快，特别是在前端开发这个生态体系里面。我不认为未来会长期依赖某一项技术，即使这门技术现在看来非常热门，甚至是现在火遍全球的<code>React</code>我也觉得不会。</p>

<p>如果你想学习一样以后可以长期使用的技能，那只有一样：提高你学习的能力。那么问题来了，你怎么学习如何学习？</p>

<p>因为我们讨论的是前端开发，所以我推荐最开始的时候应该学习JavaScript这门语言的基础知识，这方面的知识学习得越多越好，不管是书籍，博客，视频，练习还是其他，找到一种适合你的学习方式，然后<strong>深入学习</strong>（译者注：这里我推荐<a href="http://book.douban.com/subject/1232061/">《JavaScript权威指南》</a>和<a href="http://book.douban.com/subject/10546125/">《JavaScript高级程序设计》</a>）。这可能是一个长期的过程，但我推荐你花一个月的时间来专注学习它，这可能是你将来成功的基石。我的意思并不是说让你完全不管工作和家庭中的事情，而是说将除了工作和家庭之外用来学习的时间，全部花在学习JavaScript上。如果你已经是一个JavaScript大师的话可能用不到一个月的时间，但还是值得花些时间来学习，因为有时候你不知道有哪些知识是你不知道的（译者注：所谓‘温故而知新’嘛）。</p>

<p>下一个阶段就是学习前端的另外一样基础知识——<code>DOM</code>了，同样地持续学习直到你觉得自己能熟练地掌握它（译者注：推荐<a href="http://book.douban.com/subject/6038371/">JavaScript DOM编程艺术</a>）。</p>

<p>当你在这方面打好坚实的地基以后，你可能会了解到更多的框架，关于这一点我推荐尽可能地学习更多的框架和工具。我的意思不是说要把所有新框架都用到你的生产环境上，但你应该通过开发一个小应用来学会如何使用它。在学习这些框架的过程中你会发现你的学习速度越来越快，以前可能需要几天，现在只要几个小时就学会了。</p>

<p>这段时间的学习目的不是为了掌握所有你学过的框架，而是为了锻炼你<strong>快速掌握</strong>一种新技术的能力。我并不是说你不能专门研究某一个框架，你可以选择一两个框架来专门研究，然后在你的工作中使用它们，或者是在未来的工作中使用它们（除非它过时了，当然每个框架都会过时的）。这个阶段的练习是为了实践如何学习，持续地学习。</p>

<p>大部分人没办法在工作中保持这种学习，因为这需要占用工作之外的时间。可能在未来的某一天，我们的企业会完善到可以在工作中提供我们学习的时间，因为这种学习最终会让企业受益，但在今天，大部分公司还做不到。所以你只能通过自己的时间来学习，我推荐你通过一个好玩的小项目来学习，比如<a href="https://www.youtube.com/watch?v=m3jMWnrbUZA">watering your lawn</a>，你可以一遍又一遍的使用这个项目来学习新的框架和工具。</p>

<p>如果你把这些都做好了，你不仅仅是一个牛逼的前端工程师，而且你会得到快速进入其他领域的能力。想要进入移动端？没有问题！想要进入后端开发？没有问题！想要进入嵌入式设备？没有问题！你已经很擅长学习新知识了。</p>

<p>总的来说，在你的学习能力上面进行投资比对某一个框架，编程语言或者技术投资更为重要，在持续学习过程中学会如何学习。</p>
]]></content>
  </entry>
  
</feed>
